<com.android.music.IMediaPlaybackService$Stub$Proxy: long getAlbumId()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getOffsetInPartition(int)> -> _SOURCE_
<android.net.Credentials: int getPid()> -> _SOURCE_
<java.util.concurrent.SynchronousQueue: java.util.Iterator iterator()> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> -> _SOURCE_
<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getWantClientAuth()> -> _SOURCE_
<android.net.wifi.WifiManager: int getWifiState()> -> _SOURCE_
<com.android.mms.model.SlideModel: java.util.List subList(int,int)> -> _SOURCE_
<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: java.lang.String getAlertDescription()> -> _SOURCE_
<dalvik.system.profiler.HprofData$ThreadEvent: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.RDN[] getRDNs(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String getLabel()> -> _SOURCE_
<android.view.View: int getOverScrollMode()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.editor.ViewIdGenerator: int getId(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PChargingVectorHeader createChargingVectorHeader(java.lang.String)> -> _SOURCE_
<android.widget.RemoteViews$ReflectionActionWithoutParams: java.lang.String getActionName()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)> -> _SOURCE_
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: int getOrder()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getPhoneName()> -> _SOURCE_
<android.widget.NumberPicker: int getMinValue()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: int unsafeCompare(java.lang.Object,java.lang.Object)> -> _SOURCE_
<com.google.common.collect.BstInOrderPath: com.google.common.collect.BstSide getSideOfExtension()> -> _SOURCE_
<java.lang.StrictMath: int getExponent(double)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getRequestProperties()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: java.lang.String getString()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PVisitedNetworkIDHeader createPVisitedNetworkIDHeader()> -> _SOURCE_
<android.widget.SuggestionsAdapter$1: long getPostingDelay(java.lang.CharSequence)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: java.util.List getAttributes()> -> _SOURCE_
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getBcc()> -> _SOURCE_
<com.google.android.mms.pdu.DeliveryInd: int getStatus()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getAuthority()> -> _SOURCE_
<org.apache.harmony.security.x501.Name: javax.security.auth.x500.X500Principal getX500Principal()> -> _SOURCE_
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()> -> _SOURCE_
<com.android.mms.ui.ConversationListItem: com.android.mms.data.Conversation getConversation()> -> _SOURCE_
<android.view.Display: int getWidth()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: int getAttribute(int)> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int)> -> _SOURCE_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: boolean isDataAvailable(int)> -> _SOURCE_
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController createContactListFilterController(android.content.Context)> -> _SOURCE_
<android.widget.GridLayout$Axis: android.widget.GridLayout$Arc[] getArcs()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: long getItemId(int)> -> _SOURCE_
<android.graphics.Bitmap: int[] getLayoutBounds()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String[] getValueNames()> -> _SOURCE_
<java.util.EnumMap$Entry: java.lang.Enum getKey()> -> _SOURCE_
<android.view.KeyEvent: int getDeadChar(int,int)> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getUserAgentString()> -> _SOURCE_
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Cubic$1: float getInterpolation(float)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.Privacy: java.lang.Object clone()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: short getShort(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.ASN1Encodable getValue()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()> -> _SOURCE_
<android.webkit.GeolocationPermissionsClassic: android.webkit.GeolocationPermissionsClassic getInstance()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ScrollDelegate getScrollDelegate()> -> _SOURCE_
<com.android.emailcommon.internet.Rfc822Output: java.lang.String getHtmlAlternate(com.android.emailcommon.provider.EmailContent$Body,boolean)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocol()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> -> _SOURCE_
<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: java.lang.String toString()> -> _SOURCE_
<android.view.textservice.SuggestionsInfo: int getCookie()> -> _SOURCE_
<gov.nist.javax.sip.header.Event: java.lang.String getEventType()> -> _SOURCE_
<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)> -> _SOURCE_
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getPackageName(java.lang.Object)> -> _SOURCE_
<java.text.DateFormatSymbols: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<android.util.NtpTrustedTime: long getCacheAge()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getEtag()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()> -> _SOURCE_
<com.android.vcard.VCardEntry$AnniversaryData: java.lang.String getAnniversary()> -> _SOURCE_
<android.preference.Preference: int getOrder()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)> -> _SOURCE_
<com.android.phone.EditPhoneNumberPreference: java.lang.CharSequence getSummaryOff()> -> _SOURCE_
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<java.lang.Byte: byte byteValue()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: int getLocalSequenceNumber()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getPublicId()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: java.lang.Object delegate()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()> -> _SOURCE_
<com.android.browser.homepages.Template: com.android.browser.homepages.Template getCachedTemplate(android.content.Context,int)> -> _SOURCE_
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderValue(java.lang.String)> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.lang.Object clone()> -> _SOURCE_
<com.android.settings.DataUsageSummary$LimitEditorFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.deskclock.Alarm$DaysOfWeek: int getNextAlarm(java.util.Calendar)> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: int getSelectedContactPosition()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderFieldKey(int)> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()> -> _SOURCE_
<android.os.storage.StorageManager$ListenerDelegate: android.os.storage.StorageEventListener getListener()> -> _SOURCE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.ASTaddress_list parse()> -> _SOURCE_
<com.android.mms.model.SlideModel: com.android.mms.model.AudioModel getAudio()> -> _SOURCE_
<com.google.common.io.CharStreams$4: java.lang.Object getInput()> android.permission.INTERNET -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeNameResource(int)> -> _SOURCE_
<android.net.NetworkIdentity: int getType()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$EvictionQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()> -> _SOURCE_
<java.lang.StringBuffer: java.lang.StringBuffer reverse()> -> _SOURCE_
<android.provider.CalendarContract$Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction findTransactionPendingAck(gov.nist.javax.sip.message.SIPRequest)> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getAccountName()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<android.app.IAlarmManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment: android.widget.EditText getDigitsWidget()> -> _SOURCE_
<android.app.Instrumentation$ActivityResult: int getResultCode()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getMinimumFractionDigits()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)> -> _SOURCE_
<java.net.Proxy: java.net.Proxy$Type type()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int)> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromMessageUri(android.content.Context,android.net.Uri)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<com.android.providers.contacts.CountryMonitor: java.lang.String getCountryIso()> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)> -> _SOURCE_
<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.AsyncDialog getAsyncDialog()> -> _SOURCE_
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getPercent()> -> _SOURCE_
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: android.content.ContentValues toContentValues()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: java.lang.String getField(int)> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)> -> _SOURCE_
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)> -> _SOURCE_
<java.lang.Integer: java.lang.String toString()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<gov.nist.core.HostPort: java.lang.String encode()> -> _SOURCE_
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()> -> _SOURCE_
<com.android.camera.CameraPreference: android.content.SharedPreferences getSharedPreferences()> -> _SOURCE_
<java.util.zip.ZipEntry: byte[] getExtra()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long)> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getDuration()> -> _SOURCE_
<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceId()> -> _SOURCE_
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()> -> _SOURCE_
<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] getMessages(com.android.emailcommon.mail.Flag[],com.android.emailcommon.mail.Flag[],com.android.emailcommon.mail.Folder$MessageRetrievalListener)> -> _SOURCE_
<android.widget.RelativeLayout$LayoutParams: int[] getRules(int)> -> _SOURCE_
<com.android.mms.ui.QuickContactDivot: float getCloseOffset()> -> _SOURCE_
<java.util.IllegalFormatWidthException: int getWidth()> -> _SOURCE_
<com.android.server.MountService: android.os.storage.StorageVolume[] getVolumeList()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isMinInfoReady()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: int getVersion()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.EventHeader createEventHeader(java.lang.String)> -> _SOURCE_
<android.animation.ValueAnimator: long getDuration()> -> _SOURCE_
<com.android.contacts.GroupMetaData: java.lang.String getDataSet()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(java.nio.DoubleBuffer)> -> _SOURCE_
<java.lang.Integer: byte byteValue()> -> _SOURCE_
<android.hardware.ISerialManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: short getFillDefault()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: long getLong(int)> -> _SOURCE_
<libcore.icu.CollationElementIteratorICU: int getOffset()> -> _SOURCE_
<com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)> -> _SOURCE_
<com.android.internal.view.IInputMethodClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getName()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> -> _SOURCE_
<android.database.CursorWindow: double getDouble(int,int)> -> _SOURCE_
<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()> -> _SOURCE_
<android.view.HardwareRenderer: boolean isAvailable()> -> _SOURCE_
<java.util.Scanner: java.math.BigInteger nextBigInteger()> -> _SOURCE_
<android.text.style.SuperscriptSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.contacts.model.account.AccountWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeWithDataSet()> -> _SOURCE_
<java.lang.reflect.Array: char getChar(java.lang.Object,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: int getPkeyContext()> -> _SOURCE_
<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.CatService getInstance(com.android.internal.telephony.CommandsInterface,android.content.Context,com.android.internal.telephony.UiccCard)> -> _SOURCE_
<java.util.AbstractMap: int hashCode()> -> _SOURCE_
<android.view.ViewConfiguration: int getWindowTouchSlop()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes(java.lang.String)> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: int getQueuePosition()> -> _SOURCE_
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: double getOffset()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object get(java.lang.Object,int)> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: int getGroupType(int)> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.Object clone()> -> _SOURCE_
<android.widget.Spinner: java.lang.CharSequence getPrompt()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<android.text.method.CharacterPickerDialog$OptionsAdapter: int getCount()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity: int getSyncMode(com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay)> -> _SOURCE_
<java.io.EmulatedFields: char get(java.lang.String,char)> -> _SOURCE_
<gov.nist.javax.sip.header.Allow: java.lang.String getMethod()> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getAudioStreamType()> -> _SOURCE_
<java.util.BitSet: long[] toLongArray()> -> _SOURCE_
<android.app.backup.BackupDataInput: java.lang.String getKey()> -> _SOURCE_
<java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCI3GPP2()> -> _SOURCE_
<android.provider.Settings$Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker strongValues()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getDepth()> -> _SOURCE_
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Set allSystemAliases()> -> _SOURCE_
<com.android.contacts.model.dataitem.EventDataItem: java.lang.String getLabel()> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView: long getInspectStart()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getPhoneName()> -> _SOURCE_
<android.net.Uri$PathSegments: java.lang.Object get(int)> -> _SOURCE_
<android.bluetooth.IBluetoothCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<javax.sip.RequestEvent: javax.sip.message.Request getRequest()> -> _SOURCE_
<com.android.server.connectivity.Tethering$TetherInterfaceSM: int getLastError()> -> _SOURCE_
<android.hardware.display.WifiDisplay: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: int standardHashCode()> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()> -> _SOURCE_
<java.net.HttpURLConnection: java.lang.String getResponseMessage()> -> _SOURCE_
<android.net.DhcpInfoInternal: android.net.DhcpInfo makeDhcpInfo()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPacketSourcePort()> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String,short)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getExtension()> -> _SOURCE_
<java.security.Provider: java.util.Set keySet()> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()> -> _SOURCE_
<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getShowVisualIndicator()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()> -> _SOURCE_
<com.android.server.location.PassiveProvider: long getStatusUpdateTime()> -> _SOURCE_
<java.security.cert.CertificateFactory: java.util.Iterator getCertPathEncodings()> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.widget.NumberPicker$InputTextFilter: char[] getAcceptedChars()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)> -> _SOURCE_
<com.android.providers.downloads.RealSystemFacade: java.lang.Long getRecommendedMaxBytesOverMobile()> -> _SOURCE_
<org.xml.sax.helpers.LocatorImpl: int getColumnNumber()> -> _SOURCE_
<libcore.io.ForwardingOs: int getppid()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.Range intersection(com.google.common.collect.Range)> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()> -> _SOURCE_
<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()> -> _SOURCE_
<java.lang.Float: boolean isNaN()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: int getSendingUserId()> -> _SOURCE_
<com.android.contacts.model.dataitem.PhotoDataItem: long getPhotoFileId()> -> _SOURCE_
<android.widget.ImageView: boolean getAdjustViewBounds()> -> _SOURCE_
<com.android.settings.wifi.WifiDialog: com.android.settings.wifi.WifiConfigController getController()> -> _SOURCE_
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaEriText()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: void getEnhancedVoicePrivacy(android.os.Message)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object)> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getMinWidth()> -> _SOURCE_
<com.android.emailcommon.utility.AttachmentUtilities: java.lang.String getFilenameExtension(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: int getScanCode()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getItemViewType(int)> -> _SOURCE_
<com.android.browser.Controller: java.util.List getTabs()> -> _SOURCE_
<com.android.contacts.util.StructuredPostalUtils: android.content.Intent getViewPostalAddressIntent(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()> -> _SOURCE_
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: java.lang.String toString()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getDomesticCarrierCodeFormattingRule()> -> _SOURCE_
<android.app.Instrumentation: android.content.ComponentName getComponentName()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getPeerPrincipal()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<android.webkit.PluginManager: java.lang.String getPluginsAPKName(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String[] getPredefinedKeyboardLayoutSet()> -> _SOURCE_
<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)> -> _SOURCE_
<android.widget.TabHost: android.view.View getCurrentTabView()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getPlaybackType()> -> _SOURCE_
<libcore.io.ForwardingOs: int getgid()> -> _SOURCE_
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String toString()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.view.InputDevice: int getGeneration()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName,int)> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()> -> _SOURCE_
<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[])> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile getJarFile()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)> -> _SOURCE_
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<android.view.KeyEvent: int getDeviceId()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getSuperPrimaryEntry(java.lang.String)> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.json.JSONArray: java.lang.Object get(int)> -> _SOURCE_
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiAutomatorBridge getAutomatorBridge()> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsEmergency(android.content.Context)> -> _SOURCE_
<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.content.Context getContext()> -> _SOURCE_
<android.content.ClipDescription: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()> -> _SOURCE_
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getChangingConfigurations()> -> _SOURCE_
<com.android.server.net.NetworkStatsRecorder: android.net.NetworkStats$Entry getTotalSinceBootLocked(android.net.NetworkTemplate)> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getLine()> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: com.android.calendarcommon2.ICalendar$Parameter getFirstParameter(java.lang.String)> -> _SOURCE_
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> _SOURCE_
<android.preference.MultiCheckPreference: java.lang.String[] getEntryValues()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: byte[] getMessageClass()> -> _SOURCE_
<android.widget.GridLayout$6: android.widget.GridLayout$Bounds getBounds()> -> _SOURCE_
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)> -> _SOURCE_
<libcore.net.http.RawHeaders: java.util.Map toMultimap()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: byte[] encodeAsBytes(java.lang.String)> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()> -> _SOURCE_
<gov.nist.core.StringTokenizer: char getNextChar()> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$State getState()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()> -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)> -> _SOURCE_
<android.view.ViewGroup$ChildListForAccessibility: int getChildIndex(android.view.View)> -> _SOURCE_
<android.app.DownloadManager$Request: android.app.DownloadManager$Request addRequestHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: int size()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getShortDisplayName(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.database.AbstractCursor: int getColumnCount()> -> _SOURCE_
<android.text.style.TextAppearanceSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.SignalStrength getSignalStrength()> -> _SOURCE_
<android.net.Uri$AbstractPart: java.lang.String getDecoded()> -> _SOURCE_
<android.content.pm.PermissionGroupInfo: java.lang.String toString()> -> _SOURCE_
<com.android.browser.NavScreen$TabAdapter: long getItemId(int)> -> _SOURCE_
<org.apache.http.auth.AuthSchemeRegistry: java.util.List getSchemeNames()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()> -> _SOURCE_
<com.android.emailcommon.mail.PackedString: java.util.Map unpack()> -> _SOURCE_
<android.text.DynamicLayout: boolean getLineContainsTab(int)> -> _SOURCE_
<java.lang.Class: java.lang.String getName()> -> _SOURCE_
<android.media.AudioManager: int getMasterMaxVolume()> -> _SOURCE_
<org.apache.harmony.security.x509.ReasonCode: byte[] getEncoded()> -> _SOURCE_
<java.io.Reader: long skip(long)> -> _SOURCE_
<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)> -> _SOURCE_
<android.view.MotionEvent: int getActionIndex()> -> _SOURCE_
<com.android.browser.IntentHandler$UrlData: java.lang.String getSearchBoxQueryToSubmit()> -> _SOURCE_
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()> -> _SOURCE_
<com.android.server.IntentResolverOld: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)> -> _SOURCE_
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: int getDistance(int,int,int,int)> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription loadFirstTask()> -> _SOURCE_
<com.android.calendarcommon2.RecurrenceProcessor: long getLastOccurence(android.text.format.Time,com.android.calendarcommon2.RecurrenceSet)> -> _SOURCE_
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.lang.Object call()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbCmasInfo getCmasInfo()> -> _SOURCE_
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.ASN1Boolean getInstance(java.lang.Object)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getVolumeHandling()> -> _SOURCE_
<com.android.calendar.month.SimpleWeekView: android.text.format.Time getDayFromLocation(float)> -> _SOURCE_
<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$SuggestionEditConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getGroupingSize()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDatabasePath()> -> _SOURCE_
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: java.lang.String getName()> -> _SOURCE_
<android.text.StaticLayout: int getTopPadding()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)> -> _SOURCE_
<android.widget.ListView: android.widget.Adapter getAdapter()> -> _SOURCE_
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumWidth()> -> _SOURCE_
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()> -> _SOURCE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.UUSInfo getUUSInfo()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getCompany(android.content.Context,com.android.contacts.model.Contact)> -> _SOURCE_
<com.android.common.content.SyncStateContentProviderHelper: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getSync1()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getX(int,int)> -> _SOURCE_
<com.android.providers.calendar.MetaData: com.android.providers.calendar.MetaData$Fields getFieldsLocked()> -> _SOURCE_
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getInstalledAccessibilityServiceList(int)> -> _SOURCE_
<com.android.internal.telephony.cat.ResultException: java.lang.String explanation()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> -> _SOURCE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodInfo getInputMethodInfoOfThisIme(android.content.Context)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredExtnPrefix()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListView: int getPinnedHeaderHeight(int)> -> _SOURCE_
<android.widget.VideoView: int getCurrentPosition()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()> -> _SOURCE_
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String encodeBody()> -> _SOURCE_
<android.net.Uri$Builder: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItem(java.lang.String)> -> _SOURCE_
<android.content.IIntentReceiver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.exchange.ExchangeService$AccountList: com.android.emailcommon.provider.Account getById(long)> -> _SOURCE_
<com.android.browser.BookmarkUtils: android.graphics.drawable.Drawable createListFaviconBackground(android.content.Context)> -> _SOURCE_
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)> -> _SOURCE_
<com.android.browser.BackgroundHandler: android.os.Looper getLooper()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getUan()> -> _SOURCE_
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMImplementationImpl: org.apache.harmony.xml.dom.DOMImplementationImpl getInstance()> -> _SOURCE_
<org.apache.harmony.security.x501.DirectoryString$1: java.lang.Object getObjectToEncode(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Time: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.lang.String toString()> -> _SOURCE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl$HttpsEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()> -> _SOURCE_
<android.webkit.HTML5VideoView: int getVideoLayerId()> -> _SOURCE_
<android.text.style.SuggestionSpan: int getUnderlineColor()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)> -> _SOURCE_
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.IExtendedNetworkService$Stub$Proxy: java.lang.CharSequence getMmiRunningText()> -> _SOURCE_
<com.android.contacts.editor.EditorAnimator: com.android.contacts.editor.EditorAnimator getInstance()> -> _SOURCE_
<com.android.exchange.Eas: java.lang.Double getProtocolVersionDouble(java.lang.String)> -> _SOURCE_
<android.view.View$11: java.lang.Float get(android.view.View)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)> -> _SOURCE_
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getDoubleTapToastCount()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getMessage()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()> -> _SOURCE_
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()> android.permission.ACCESS_WIFI_STATE -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getMasterVolume()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.Object delegate()> -> _SOURCE_
<com.android.internal.telephony.IExtendedNetworkService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> -> _SOURCE_
<android.graphics.Canvas: int getMaximumBitmapWidth()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.io.OutputStream getRequestBody()> -> _SOURCE_
<android.net.wifi.WifiConfiguration$EnterpriseField: java.lang.String varName()> -> _SOURCE_
<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Package[] getPackages()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceId()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()> -> _SOURCE_
<com.android.server.wm.DisplayContent: android.view.Display getDisplay()> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()> -> _SOURCE_
<com.android.internal.database.SortCursor: java.lang.String getString(int)> -> _SOURCE_
<android.os.storage.StorageVolume: long getMaxFileSize()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap$Builder builder()> -> _SOURCE_
<com.android.internal.os.ProcessStats: long getCpuTimeForPid(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERIA5String: byte[] getOctets()> -> _SOURCE_
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher$CameraWidgetInfo getCameraWidgetInfo()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String unreserved()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getGroupingSeparator()> -> _SOURCE_
<android.app.ActivityManager: com.android.internal.os.PkgUsageStats[] getAllPackageUsageStats()> -> _SOURCE_
<java.nio.FloatBuffer: int hashCode()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<android.app.LoadedApk: java.io.File getDataDirFile()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getRelativeChildOffset(int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)> -> _SOURCE_
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()> -> _SOURCE_
<com.android.contacts.util.AccountsListAdapter: long getItemId(int)> -> _SOURCE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getPath()> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: int getType()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getStickyHeaderHeight()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: int getVersion()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: long getExpirationTime()> -> _SOURCE_
<android.webkit.WebStorage$Origin: long getUsage()> -> _SOURCE_
<com.android.ex.chips.RecipientChip: java.lang.CharSequence getValue()> -> _SOURCE_
<android.widget.DatePicker: int getYear()> -> _SOURCE_
<com.android.contacts.interactions.ContactDeletionInteraction: boolean isStarted()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: java.lang.String getString(int)> -> _SOURCE_
<com.android.emailcommon.mail.Address: java.lang.String toFriendly()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: int getRequestInterceptorCount()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.util.Set getPropertyNames()> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmDataDisableFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<java.math.MathContext: int getPrecision()> -> _SOURCE_
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getCreatedAccount(int,android.content.Intent)> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)> -> _SOURCE_
<com.android.contacts.model.account.AccountWithDataSet: java.lang.String stringify()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getValue()> -> _SOURCE_
<com.android.server.display.DisplayDevice: java.lang.String getNameLocked()> -> _SOURCE_
<com.android.contacts.preference.ContactsPreferences: int getSortOrder()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: int getInt(android.content.res.TypedArray,int,int)> -> _SOURCE_
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()> -> _SOURCE_
<org.apache.harmony.security.x509.OtherName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.app.NotificationManager: android.app.INotificationManager getService()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothPreferences: long getDiscoverableEndTimestamp(android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String getCacheFileName(java.lang.String,java.lang.String,android.content.Context)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: int getNetworkPreference()> -> _SOURCE_
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<java.util.TreeMap$Node: java.lang.Object getValue()> -> _SOURCE_
<java.security.spec.EncodedKeySpec: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: int getItemViewType(int)> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String)> -> _SOURCE_
<android.os.UserManager: java.util.List getUsers()> -> _SOURCE_
<android.widget.TextView: int getSelectionStart()> -> _SOURCE_
<android.view.View: int[] getDrawableState()> -> _SOURCE_
<java.util.concurrent.SynchronousQueue: java.lang.Object[] toArray()> -> _SOURCE_
<android.location.Address: java.lang.String getPostalCode()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getImei()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getDrawableResource(android.bluetooth.BluetoothClass)> -> _SOURCE_
<com.android.contacts.model.Contact: android.net.Uri getUri()> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()> -> _SOURCE_
<android.net.ConnectivityManager: boolean getMobileDataEnabled()> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$Member: long getRawContactId()> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable[] getSuppressed()> -> _SOURCE_
<android.widget.OverScroller: int getFinalX()> -> _SOURCE_
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()> -> _SOURCE_
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)> -> _SOURCE_
<gov.nist.javax.sip.header.RetryAfter: java.lang.String getComment()> -> _SOURCE_
<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int)> -> _SOURCE_
<java.security.Timestamp: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: boolean getVoiceCallForwardingFlag()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getIndicatorId()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)> -> _SOURCE_
<android.view.View: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<com.android.server.IntentResolverOld: java.lang.Object newResult(android.content.IntentFilter,int,int)> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: int getEndConstraints()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String getMacAddress()> -> _SOURCE_
<android.animation.AnimatorSet: android.animation.Animator clone()> -> _SOURCE_
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()> -> _SOURCE_
<com.android.server.display.DisplayAdapter: com.android.server.display.DisplayManagerService$SyncRoot getSyncRoot()> -> _SOURCE_
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()> -> _SOURCE_
<android.accounts.IAccountAuthenticator$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<org.apache.http.auth.AuthScope: java.lang.String getScheme()> -> _SOURCE_
<android.os.StatFs: int getAvailableBlocks()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> -> _SOURCE_
<org.apache.commons.codec.binary.Hex: byte[] encode(byte[])> -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationVendor()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.Multiset$Entry lastEntry()> -> _SOURCE_
<com.android.server.net.NetworkPolicyManagerService: int[] getUidsWithPolicy(int)> -> _SOURCE_
<java.util.WeakHashMap: java.util.Set entrySet()> -> _SOURCE_
<com.android.mms.model.ImageModel: android.graphics.Bitmap getBitmap(int,int)> -> _SOURCE_
<java.util.Date: java.lang.Object clone()> -> _SOURCE_
<java.util.UUID: java.lang.String toString()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: boolean getStrictErrorChecking()> -> _SOURCE_
<java.lang.Byte: java.lang.String toString()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: int getItemViewType(int,int)> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()> -> _SOURCE_
<android.app.SearchableInfo: int getSettingsDescriptionId()> -> _SOURCE_
<com.android.vcard.VCardProperty: java.lang.String getName()> -> _SOURCE_
<android.widget.ArrayAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.server.NativeDaemonEvent: int getCmdNumber()> -> _SOURCE_
<android.graphics.Paint: java.util.Locale getTextLocale()> -> _SOURCE_
<android.content.pm.PackageParser$Package: java.lang.String toString()> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)> -> _SOURCE_
<android.security.KeyStore: byte[] get(java.lang.String)> -> _SOURCE_
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String getResponseMessage()> -> _SOURCE_
<android.graphics.Paint: int getTextGlyphs(java.lang.String,int,int,int,int,int,char[])> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.AdnRecordCache getAdnCache()> -> _SOURCE_
<java.util.GregorianCalendar: java.util.Date getGregorianChange()> -> _SOURCE_
<android.text.method.DialerKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<android.view.View$4: java.lang.Float get(android.view.View)> -> _SOURCE_
<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)> -> _SOURCE_
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> -> _SOURCE_
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()> -> _SOURCE_
<java.nio.channels.FileLock: java.lang.String toString()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getSubtitle()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: int getNumberPresentation()> -> _SOURCE_
<android.view.View: int getRawTextAlignment()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: java.lang.String peekLine()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.calendar.Utils: long getNextMidnight(android.text.format.Time,long,java.lang.String)> -> _SOURCE_
<javax.security.cert.Certificate: int hashCode()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: long getSupportedEventTypes()> -> _SOURCE_
<com.google.common.collect.ImmutableSet: java.lang.Object writeReplace()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<com.android.exchange.EasSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.SettingsValues: java.lang.String getPrefAdditionalSubtypes(android.content.SharedPreferences,android.content.res.Resources)> -> _SOURCE_
<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUriForPath(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.NodeList getTimeChildren()> -> _SOURCE_
<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isPassword()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getAction(int)> -> _SOURCE_
<java.util.Date: int getSeconds()> -> _SOURCE_
<android.text.DynamicLayout: int getEllipsizedWidth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: byte[] encrypt(byte,byte[])> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getRingtone()> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getOverScrollMode(android.view.View)> -> _SOURCE_
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getVoicemailIntent()> -> _SOURCE_
<java.io.StringWriter: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.Object[] getValues()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token jjFillToken()> -> _SOURCE_
<android.view.View: int getSuggestedMinimumHeight()> -> _SOURCE_
<android.view.Window: android.view.WindowManager getWindowManager()> -> _SOURCE_
<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture getSurfaceTexture()> -> _SOURCE_
<android.app.ContextImpl$ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<android.content.CursorLoader: java.lang.String getSelection()> -> _SOURCE_
<com.android.emailcommon.provider.Policy: com.android.emailcommon.provider.Policy restorePolicyWithId(android.content.Context,long)> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getDriverName(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getPackageName(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String debugDump()> -> _SOURCE_
<android.nfc.tech.IsoDep: int getTimeout()> -> _SOURCE_
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableCollection get(java.lang.Object)> -> _SOURCE_
<com.android.internal.statusbar.StatusBarNotification: int getUserId()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<com.android.vcard.VCardEntry$BirthdayData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: float getDur()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getPendingMmiCodes()> -> _SOURCE_
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getLightTouchEnabled()> -> _SOURCE_
<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getViewTypeCount()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getStarts(int)> -> _SOURCE_
<android.view.WindowOrientationListener$SensorEventListenerImpl: int getProposedRotation()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getId()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] read(int)> -> _SOURCE_
<com.android.internal.telephony.Connection: java.lang.String getCnapName()> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getGroupWritableAccounts()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)> -> _SOURCE_
<java.util.concurrent.SynchronousQueue: java.lang.Object take()> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(int)> -> _SOURCE_
<com.android.camera.ComboPreferences: android.content.SharedPreferences getGlobal()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getDisplayName()> -> _SOURCE_
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> -> _SOURCE_
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()> -> _SOURCE_
<com.android.camera.CameraSettings: java.lang.String getDefaultVideoQuality(int,java.lang.String)> -> _SOURCE_
<java.util.WeakHashMap: java.util.Collection values()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator)> -> _SOURCE_
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)> -> _SOURCE_
<android.telephony.ServiceState: int getNetworkType()> -> _SOURCE_
<android.database.MatrixCursor: java.lang.String getString(int)> -> _SOURCE_
<android.widget.Spinner: int getDropDownHorizontalOffset()> -> _SOURCE_
<android.widget.RadioGroup: int getCheckedRadioButtonId()> -> _SOURCE_
<java.util.HashMap$HashMapEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServiceClassName()> -> _SOURCE_
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<java.io.FilePermission: java.lang.String getActions()> -> _SOURCE_
<android.app.Activity: android.app.FragmentManager getFragmentManager()> -> _SOURCE_
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: int getType()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: int getWidth()> -> _SOURCE_
<com.android.server.WifiService: int getFrequencyBand()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)> -> _SOURCE_
<com.android.mms.model.TextModel: java.lang.String getText()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$PhoneActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<com.android.music.MusicUtils: android.graphics.Bitmap getArtwork(android.content.Context,long,long)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLContextImpl: javax.net.ssl.SSLSessionContext engineGetClientSessionContext()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getClipBegin()> -> _SOURCE_
<com.android.camera.ui.IndicatorButton: java.lang.String getKey()> -> _SOURCE_
<javax.xml.parsers.DocumentBuilder: javax.xml.validation.Schema getSchema()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String getSmallHash(java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue getFrom()> -> _SOURCE_
<android.widget.OverScroller: int getStartY()> -> _SOURCE_
<android.webkit.ZoomManager: android.view.ScaleGestureDetector getScaleGestureDetector()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getSipProviders()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet$Builder reverseOrder()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: java.lang.String toString()> -> _SOURCE_
<android.os.Binder: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: java.lang.String[] getDefaultProjection(android.net.Uri)> -> _SOURCE_
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()> -> _SOURCE_
<android.filterfw.core.VertexFrame: float[] getFloats()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: boolean isOnBattery()> -> _SOURCE_
<java.io.InvalidClassException: java.lang.String getMessage()> -> _SOURCE_
<com.android.mms.transaction.Transaction: com.android.mms.transaction.TransactionState getState()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.Comparator comparator()> -> _SOURCE_
<com.android.server.input.PersistentDataStore: java.lang.String[] getKeyboardLayouts(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: int getFlags()> -> _SOURCE_
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceRxThrottle(java.lang.String)> -> _SOURCE_
<com.android.browser.XLargeUi: com.android.browser.TabBar getTabBar()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: com.android.settings.wifi.AccessPoint getAccessPoint()> -> _SOURCE_
<com.android.calendarcommon2.RecurrenceProcessor: long getLastOccurence(android.text.format.Time,android.text.format.Time,com.android.calendarcommon2.RecurrenceSet)> -> _SOURCE_
<android.net.NetworkStats: long getElapsedRealtimeAge()> -> _SOURCE_
<android.view.HardwareLayer: android.view.DisplayList getDisplayList()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.WebViewFactoryProvider$Statics getStatics()> -> _SOURCE_
<gov.nist.javax.sip.header.Event: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> -> _SOURCE_
<com.android.settings.bluetooth.HidProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: java.util.ArrayList buildDiff()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERT61String: com.android.org.bouncycastle.asn1.DERT61String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: int hashCode()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoicemail()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()> -> _SOURCE_
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)> -> _SOURCE_
<android.database.AbstractWindowedCursor: short getShort(int)> -> _SOURCE_
<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContactHeader createContactHeader()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int get()> -> _SOURCE_
<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker$Estimator)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: int getPadBits()> -> _SOURCE_
<java.security.cert.CertStore: java.security.Provider getProvider()> -> _SOURCE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getSelectedNavigationIndex()> -> _SOURCE_
<com.android.contacts.model.Contact: java.util.ArrayList getContentValues()> -> _SOURCE_
<android.graphics.Path: android.graphics.Path$FillType getFillType()> -> _SOURCE_
<android.widget.ImageView: boolean getBaselineAlignBottom()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)> -> _SOURCE_
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)> -> _SOURCE_
<java.lang.StringBuilder: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BEROctetStringParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.widget.CursorAdapter: android.database.Cursor getCursor()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.account.AccountType$EditType buildEventType(int,boolean)> -> _SOURCE_
<android.net.Uri$AbstractHierarchicalUri: int getPort()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)> -> _SOURCE_
<com.android.contacts.model.dataitem.GroupMembershipDataItem: long getGroupRowId()> -> _SOURCE_
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> -> _SOURCE_
<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])> -> _SOURCE_
<android.widget.TextView: int getMinEms()> -> _SOURCE_
<android.widget.FastScroller: java.lang.Object[] getSections()> -> _SOURCE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: boolean getNotifySignalStrength()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getIMSI()> -> _SOURCE_
<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)> -> _SOURCE_
<android.widget.ListPopupWindow: int getHeight()> -> _SOURCE_
<java.security.BasicPermission: java.lang.String getActions()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getParentNode()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: byte[] getEncoded()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()> -> _SOURCE_
<android.os.Debug: int getThreadAllocSize()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCNonce()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Object: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCE_
<android.graphics.Region: android.graphics.Rect getBounds()> -> _SOURCE_
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)> -> _SOURCE_
<com.android.camera.ComboPreferences: android.content.SharedPreferences getLocal()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray(java.lang.Object[])> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getSubject()> -> _SOURCE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<gov.nist.core.NameValueList: java.util.Set entrySet()> -> _SOURCE_
<android.view.Choreographer: long getFrameTime()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()> -> _SOURCE_
<libcore.net.url.UrlUtils: java.lang.String getSchemePrefix(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getAllPhones()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.common.content.SyncStateContentProviderHelper getSyncState()> -> _SOURCE_
<java.text.DateFormat: boolean isLenient()> -> _SOURCE_
<java.util.ResourceBundle: java.util.Locale getLocale()> -> _SOURCE_
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)> -> _SOURCE_
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()> -> _SOURCE_
<org.xml.sax.InputSource: java.lang.String getSystemId()> -> _SOURCE_
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> -> _SOURCE_
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object poll()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getSubtypeDisplayName(android.view.inputmethod.InputMethodSubtype,android.content.res.Resources)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter$Partition: boolean getHasHeader()> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> -> _SOURCE_
<com.android.mms.ui.MessageListAdapter: android.database.Cursor getCursorForItem(com.android.mms.ui.MessageItem)> -> _SOURCE_
<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)> -> _SOURCE_
<com.android.camera.Util: int getDisplayRotation(android.app.Activity)> -> _SOURCE_
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getTitle()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.Multiset delegate()> -> _SOURCE_
<com.android.music.MusicUtils: int getIntPref(android.content.Context,java.lang.String,int)> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()> -> _SOURCE_
<com.android.mms.model.LayoutModel: java.util.ArrayList getRegions()> -> _SOURCE_
<com.google.common.collect.Lists$AbstractListWrapper: java.lang.Object get(int)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter$Partition: boolean getShowIfEmpty()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentEncoding()> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastIdleTime()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: double getDouble(int)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,java.lang.Object,javax.sip.header.ContentTypeHeader)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: int getLineNumber()> -> _SOURCE_
<java.nio.charset.IllegalCharsetNameException: java.lang.String getCharsetName()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: int getOpacity()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl getBatteryStats()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getProtocol()> -> _SOURCE_
<java.security.MessageDigest: java.security.Provider access$102(java.security.MessageDigest,java.security.Provider)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<com.google.common.collect.ForwardingMap: int size()> -> _SOURCE_
<android.os.NullVibrator: android.os.NullVibrator getInstance()> -> _SOURCE_
<android.widget.GridLayout$Axis: int[] getLeadingMargins()> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: long get(java.lang.String,long)> -> _SOURCE_
<android.os.SystemProperties: long getLong(java.lang.String,long)> -> _SOURCE_
<java.io.ObjectStreamClass: java.util.List getHierarchy()> -> _SOURCE_
<com.android.browser.BreadCrumbView: com.android.browser.BreadCrumbView$Crumb getTopCrumb()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: float getWindowCompatibilityScale(android.os.IBinder)> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)> -> _SOURCE_
<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()> -> _SOURCE_
<com.android.calendar.Utils: int getJulianMondayFromWeeksSinceEpoch(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> -> _SOURCE_
<com.android.mms.ui.UriImage: java.lang.String getContentType()> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallDetailsMessageId()> -> _SOURCE_
<org.xml.sax.InputSource: java.io.InputStream getByteStream()> -> _SOURCE_
<android.provider.CalendarContract$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)> -> _SOURCE_
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: java.lang.String getPath()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getWidePaddingLeft()> -> _SOURCE_
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getRtpformat()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.net.url.FtpURLConnection: java.security.Permission getPermission()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getExternalCacheDir()> -> _SOURCE_
<android.app.IBackupAgent$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.systemui.statusbar.policy.DeadZone: float getFlash()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeTypeAndValue$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.settings.wifi.WifiDialog: android.widget.Button getSubmitButton()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: int getExpires()> -> _SOURCE_
<com.android.inputmethod.latin.LocaleUtils$RunInLocale: java.lang.Object runInLocale(android.content.res.Resources,java.util.Locale)> -> _SOURCE_
<com.android.internal.telephony.CallManager: int getServiceState()> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()> -> _SOURCE_
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] getIsimImpu()> -> _SOURCE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<java.net.Authenticator: java.net.Authenticator$RequestorType getRequestorType()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()> -> _SOURCE_
<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()> -> _SOURCE_
<android.net.wifi.WifiManager: boolean isDualBandSupported()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> -> _SOURCE_
<android.hardware.usb.UsbInterface: int getInterfaceClass()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: int getRSAKeyLength(java.security.PublicKey)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getResolvedType()> -> _SOURCE_
<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)> -> _SOURCE_
<android.content.pm.PackageParser$Provider: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()> -> _SOURCE_
<android.media.AudioService: int getStreamVolume(int)> -> _SOURCE_
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> -> _SOURCE_
<android.net.wifi.WifiConfiguration: int getAuthType()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificatePolicies$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getMediaStorageDirectory()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String getFirstRowString(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)> -> _SOURCE_
<javax.sip.IOExceptionEvent: java.lang.String getHost()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getBlockNetworkLoads()> -> _SOURCE_
<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties getProperties()> -> _SOURCE_
<libcore.net.http.ResponseHeaders: int getMaxAgeSeconds()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int add(java.lang.Object,int)> -> _SOURCE_
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)> -> _SOURCE_
<android.widget.DatePicker: int getMonth()> -> _SOURCE_
<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILDocument getDocument(com.android.mms.model.SlideshowModel)> -> _SOURCE_
<android.text.Layout: int getLineEnd(int)> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingBottom()> -> _SOURCE_
<java.lang.reflect.Array: int getLength(java.lang.Object)> -> _SOURCE_
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput: java.lang.String getWordAtAddress(com.android.inputmethod.latin.makedict.BinaryDictInputOutput$FusionDictionaryBufferInterface,int,int,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.net.URL getURL()> -> _SOURCE_
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getNodeValue()> -> _SOURCE_
<android.widget.AbsSeekBar: int getKeyProgressIncrement()> -> _SOURCE_
<java.util.concurrent.SynchronousQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<java.lang.AbstractStringBuilder: char[] getValue()> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> android.permission.READ_SOCIAL_STREAM -> _SOURCE_|CONTACT_INFORMATION
<android.location.GpsStatus: java.lang.Iterable getSatellites()> -> _SOURCE_
<com.android.inputmethod.latin.SettingsValues: int getKeyPreviewPopupDismissDelay(android.content.SharedPreferences,android.content.res.Resources)> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getPath()> -> _SOURCE_
<com.android.vcard.VCardSourceDetector: java.lang.String getEstimatedCharset()> -> _SOURCE_
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionMethod()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.String toString()> -> _SOURCE_
<android.database.MatrixCursor: android.database.MatrixCursor$RowBuilder newRow()> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()> -> _SOURCE_
<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getChangedRoot()> -> _SOURCE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()> -> _SOURCE_
<android.os.PerformanceCollector: android.os.Bundle endSnapshot()> -> _SOURCE_
<com.android.contacts.ContactsActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> _SOURCE_
<javax.security.cert.X509Certificate$1: byte[] getEncoded()> -> _SOURCE_
<android.app.Dialog: android.app.ActionBar getActionBar()> -> _SOURCE_
<gov.nist.core.Host: java.lang.String getHostname()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.Object clone()> -> _SOURCE_
<com.android.server.location.PassiveProvider: int getStatus(android.os.Bundle)> -> _SOURCE_
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultKeyLabelFlags()> -> _SOURCE_
<com.android.browser.TabScrollView: int getChildIndex(android.view.View)> -> _SOURCE_
<java.util.TreeSet: java.lang.Object ceiling(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()> -> _SOURCE_
<com.android.camera.Util: android.graphics.Bitmap rotateAndMirror(android.graphics.Bitmap,int,boolean)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForArray: java.lang.reflect.Type getGenericComponentType()> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmLevel()> -> _SOURCE_
<com.android.calendar.DayFragment: com.android.calendar.DayView getNextView()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Contact getContactHeader()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getHomePage()> -> _SOURCE_
<android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()> -> _SOURCE_
<android.widget.TextView: int getCurrentHintTextColor()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.ClassLoader getParent()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getAction(int)> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getCallingActivity()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeCount()> -> _SOURCE_
<com.android.browser.provider.SnapshotProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.lang.String: java.lang.String trim()> -> _SOURCE_
<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)> -> _SOURCE_
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte createFromParcel(android.os.Parcel)> -> _SOURCE_
<javax.net.ssl.SSLContext: java.security.Provider getProvider()> -> _SOURCE_
<java.util.logging.Handler: java.util.logging.Filter getFilter()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String)> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int,int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getNumberFormat(int)> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()> -> _SOURCE_
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName)> -> _SOURCE_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.AccountTypeManager getAccountTypeManager()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProxyAddress()> -> _SOURCE_
<com.android.server.display.DisplayAdapter: android.os.Handler getHandler()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()> -> _SOURCE_
<android.net.http.Connection: byte[] getBuf()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getLocalName()> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()> -> _SOURCE_
<android.view.ViewGroup: android.view.View findViewByAccessibilityIdTraversal(int)> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: int getWidth()> -> _SOURCE_
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)> -> _SOURCE_
<com.android.mms.dom.AttrImpl: java.lang.String getName()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getCompleteValues()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: int getScanState()> -> _SOURCE_
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemActivity()> -> _SOURCE_
<com.android.contacts.model.account.GoogleAccountType: java.util.List getExtensionPackageNames()> -> _SOURCE_
<com.android.calendar.Utils: int getDaysPerWeek(android.content.Context)> -> _SOURCE_
<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getFirstHeader(java.lang.String)> -> _SOURCE_
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: boolean getFeature(java.lang.String)> -> _SOURCE_
<android.bluetooth.IBluetoothManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.widget.ExpandableListView: int getFlatListPosition(long)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothProfileManager: boolean isManagerReady()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getDefaultTargetPort()> -> _SOURCE_
<java.nio.ByteBuffer: java.lang.Object array()> -> _SOURCE_
<com.android.server.am.ContentProviderConnection: java.lang.String toClientString()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range lessThan(java.lang.Comparable)> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyDropBox()> -> _SOURCE_
<android.location.LocationManager: java.util.List getProviders(boolean)> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isInMomentarySwitchState()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getStatusView()> -> _SOURCE_
<java.lang.ProcessBuilder: java.util.List command()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)> -> _SOURCE_
<org.apache.http.params.BasicHttpParams: java.lang.Object clone()> -> _SOURCE_
<android.view.animation.GridLayoutAnimationController: float getRowDelay()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFromHeader()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimImpi()> -> _SOURCE_
<android.text.Annotation: int getSpanTypeId()> -> _SOURCE_
<gov.nist.javax.sip.header.Protocol: java.lang.String encode()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getCriticalExtensionOIDs()> -> _SOURCE_
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> com.android.voicemail.permission.ADD_VOICEMAIL -> _SOURCE_
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)> -> _SOURCE_
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()> -> _SOURCE_
<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getDisplayName()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: boolean isEmpty()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()> -> _SOURCE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()> -> _SOURCE_
<android.service.wallpaper.IWallpaperService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryContentProviders(java.lang.String,int,int)> -> _SOURCE_
<com.android.mms.data.Conversation: android.net.Uri getUri()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.util.List getCurrentDataConnectionList()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)> -> _SOURCE_
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()> -> _SOURCE_
<android.content.IntentSender: android.content.IIntentSender getTarget()> -> _SOURCE_
<com.android.phone.OtaUtils: com.android.phone.OtaUtils$CdmaOtaInCallScreenUiState$State getCdmaOtaInCallScreenUiState()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()> -> _SOURCE_
<com.android.internal.statusbar.StatusBarIconList: java.lang.String getSlot(int)> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> -> _SOURCE_
<android.content.ClipDescription: java.lang.CharSequence getLabel()> -> _SOURCE_
<libcore.io.IoBridge: int getSocketLocalPort(java.io.FileDescriptor)> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentFragmentImpl: java.lang.String getNodeName()> -> _SOURCE_
<gov.nist.javax.sip.header.UserAgent: java.util.ListIterator getProduct()> -> _SOURCE_
<android.content.PeriodicSync$1: android.content.PeriodicSync createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)> -> _SOURCE_
<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()> -> _SOURCE_
<gov.nist.core.Token: java.lang.String getTokenValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultProtocols()> -> _SOURCE_
<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: boolean isEmergency()> -> _SOURCE_
<android.preference.DialogPreference: int getDialogLayoutResource()> -> _SOURCE_
<android.net.WebAddress: java.lang.String getAuthInfo()> -> _SOURCE_
<android.view.HardwareRenderer$GlRenderer: int getHeight()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()> -> _SOURCE_
<java.util.IdentityHashMap$IdentityHashMapEntrySet$1: java.lang.Object get(java.util.MapEntry)> -> _SOURCE_
<android.widget.TextView: int getVerticalOffset(boolean)> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String escaped()> -> _SOURCE_
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getLocalty()> -> _SOURCE_
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()> -> _SOURCE_
<com.android.exchange.ExchangeService: int getStatusChangeCount(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: android.graphics.drawable.Drawable getPreviewIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryPermissionsByGroup(java.lang.String,int)> -> _SOURCE_
<com.android.server.AppWidgetService: int[] getAppWidgetIds(android.content.ComponentName)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getAlternateFor(com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode)> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher isNot(char)> -> _SOURCE_
<android.widget.GridLayout$3: int getAlignmentValue(android.view.View,int,int)> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getCallState()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getNextSibling()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getDayOfWeekString(int,int,long,android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: java.lang.String getServiceProviderName()> -> _SOURCE_
<android.os.UEventObserver$UEvent: java.lang.String toString()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.String getInfinity()> -> _SOURCE_
<com.android.inputmethod.latin.makedict.FusionDictionary: java.util.Iterator iterator()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getThisUpdate()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame getWidgetPageAt(int)> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> -> _SOURCE_
<java.net.Socket: boolean getOOBInline()> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.inputmethod.latin.InputPointers: int[] getYCoordinates()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()> -> _SOURCE_
<java.security.Provider: java.lang.Object remove(java.lang.Object)> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)> -> _SOURCE_
<org.json.JSONObject: long getLong(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)> -> _SOURCE_
<android.net.wifi.WifiInfo: boolean getHiddenSSID()> -> _SOURCE_
<java.util.Hashtable: java.util.Set entrySet()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonySpn()> -> _SOURCE_
<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.util.List cacheWordListsFromContentProvider(java.util.Locale,android.content.Context,boolean)> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: long getId()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getOutputText(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()> -> _SOURCE_
<android.content.pm.ActivityInfo: int getThemeResource()> -> _SOURCE_
<android.mtp.MtpStorage: int getStorageId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERNumericString: com.android.org.bouncycastle.asn1.DERNumericString getInstance(java.lang.Object)> -> _SOURCE_
<com.android.deskclock.Alarm$DaysOfWeek: boolean[] getBooleanArray()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: java.lang.String toString()> -> _SOURCE_
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()> -> _SOURCE_
<com.android.settings.net.NetworkPolicyEditor: android.net.NetworkPolicy getOrCreatePolicy(android.net.NetworkTemplate)> -> _SOURCE_
<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getChangedTarget()> -> _SOURCE_
<com.android.contacts.model.dataitem.PhotoDataItem: byte[] getPhoto()> -> _SOURCE_
<android.os.RegistrantList: java.lang.Object get(int)> -> _SOURCE_
<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()> -> _SOURCE_
<android.text.method.QwertyKeyListener: int getInputType()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: short getEventPhase()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.internal.util.TypedProperties: short getShort(java.lang.String)> -> _SOURCE_
<android.content.CursorLoader: java.lang.String getSortOrder()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getClientKeyType(byte)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceId()> -> _SOURCE_
<com.android.camera.CameraHolder: int getFrontCameraId()> -> _SOURCE_
<android.widget.CalendarView: int getShownWeekCount()> -> _SOURCE_
<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()> -> _SOURCE_
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList()> -> _SOURCE_
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String toString()> -> _SOURCE_
<android.provider.Settings$Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> -> _SOURCE_
<android.content.ISyncContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.Intent: android.content.ComponentName getComponent()> -> _SOURCE_
<dalvik.system.profiler.HprofData: java.util.List getThreadHistory()> -> _SOURCE_
<android.view.GLES20Layer: int getLayer()> -> _SOURCE_
<android.widget.GridView: int getVerticalSpacing()> -> _SOURCE_
<com.android.deskclock.AlarmPreference: android.net.Uri onRestoreRingtone()> -> _SOURCE_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> -> _SOURCE_
<gov.nist.core.StringTokenizer: java.lang.String nextToken()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator startDelay(int,android.animation.Animator)> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()> -> _SOURCE_
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: int getEntryType()> -> _SOURCE_
<javax.security.auth.callback.PasswordCallback: char[] getPassword()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoInput()> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: int getViewTypeCount()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: short getRestart()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()> -> _SOURCE_
<android.view.View: float getTranslationY()> -> _SOURCE_
<java.net.PlainSocketImpl: java.lang.Object getOption(int)> -> _SOURCE_
<android.hardware.input.IInputManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfGeographicalAreaCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: char get(java.lang.String,char)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.PluginList getPluginList()> -> _SOURCE_
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.nio.channels.DatagramChannel getChannel()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getUtranCellID3GPP()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()> -> _SOURCE_
<android.accounts.AccountAuthenticatorCache: android.accounts.AuthenticatorDescription parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: java.lang.String getContentSubType()> -> _SOURCE_
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$9: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getItemViewType(int,int)> -> _SOURCE_
<android.net.ConnectivityManager: int getNetworkPreference()> -> _SOURCE_
<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.View: int getDrawingCacheQuality()> -> _SOURCE_
<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)> -> _SOURCE_
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()> -> _SOURCE_
<android.view.Display: int getFlags()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: float getRepeatCount()> -> _SOURCE_
<android.widget.CompoundButton: int[] onCreateDrawableState(int)> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)> -> _SOURCE_
<android.view.PointerIcon: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<com.android.internal.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: java.util.List getProvidersList()> -> _SOURCE_
<com.android.server.location.LocationProviderProxy: java.lang.String getConnectedPackageName()> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.webkit.WebViewClassic: int getPageBackgroundColor()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: int getInstance()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: boolean isSimPinEnabled()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: long getItemId(int)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)> -> _SOURCE_
<android.view.HardwareRenderer: boolean isRequested()> -> _SOURCE_
<android.webkit.JniUtil: android.content.Context getContext()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownValueSet()> -> _SOURCE_
<java.text.NumberFormat: java.util.Currency getCurrency()> -> _SOURCE_
<gov.nist.javax.sip.header.Supported: java.lang.String encode()> -> _SOURCE_
<android.animation.LayoutTransition: long getDuration(int)> -> _SOURCE_
<com.android.emailcommon.provider.Account: int getSyncInterval()> -> _SOURCE_
<android.net.TrafficStats: long getRxPackets(java.lang.String)> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getViaHost()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getURI(int)> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.ViewRootImpl: android.view.ViewParent getParent()> -> _SOURCE_
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.ContactListEmptyView getEmptyView()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getDomain()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float getBoundedScrollProgress(int,android.view.View,int)> -> _SOURCE_
<android.net.MobileDataStateTracker: java.lang.String toString()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: java.lang.String getNumber()> -> _SOURCE_
<com.android.browser.BrowserSettings: com.android.browser.WebStorageSizeManager getWebStorageSizeManager()> -> _SOURCE_
<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$LogRec getLogRec(int)> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.util.Map getParameters()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatNsnUsingPattern(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$NumberFormat,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()> -> _SOURCE_
<android.hardware.Camera$Parameters: float getHorizontalViewAngle()> -> _SOURCE_
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> -> _SOURCE_
<java.security.cert.CertificateFactory: java.security.Provider getProvider()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.util.List getAllCellInfo()> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()> -> _SOURCE_
<android.widget.TextView: boolean getHorizontallyScrolling()> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener access$200(android.view.ViewGroup)> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: float getAnimationScale(int)> -> _SOURCE_
<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getConnectedDevices()> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: android.graphics.Bitmap getUserIcon(int)> -> _SOURCE_
<android.view.ViewStub: int getLayoutResource()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.JoinHeader createJoinHeader(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)> -> _SOURCE_
<android.content.Intent: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> -> _SOURCE_
<android.widget.ListView: int getMaxScrollAmount()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()> -> _SOURCE_
<com.android.calendar.event.EditEventFragment: long getSupportedEventTypes()> -> _SOURCE_
<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)> -> _SOURCE_
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getLocalPort()> -> _SOURCE_
<com.android.exchange.AbstractSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)> -> _SOURCE_
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] listAllTransports()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: java.lang.Object clone()> -> _SOURCE_
<android.webkit.HTML5VideoView: boolean getPlayerBuffering()> -> _SOURCE_
<android.os.Looper: android.os.Looper getMainLooper()> -> _SOURCE_
<android.text.style.MetricAffectingSpan$Passthrough: android.text.style.CharacterStyle getUnderlying()> -> _SOURCE_
<com.android.contacts.activities.ActionBarAdapter: java.lang.String getQueryString()> -> _SOURCE_
<java.lang.BootClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCE_
<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$600(com.android.calendar.EventInfoFragment)> -> _SOURCE_
<android.widget.TextView: int getInputType()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: java.util.Set entrySet()> -> _SOURCE_
<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getIntrinsicWidth()> -> _SOURCE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)> -> _SOURCE_
<android.nfc.NdefMessage: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)> -> _SOURCE_
<java.lang.ThreadGroup: int getMaxPriority()> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: com.android.providers.contacts.AccountWithDataSet get(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()> -> _SOURCE_
<java.nio.HeapByteBuffer: double getDouble()> -> _SOURCE_
<android.location.Country: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getCursiveFontFamily()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()> -> _SOURCE_
<org.apache.http.message.BasicRequestLine: java.lang.String toString()> -> _SOURCE_
<android.view.ViewConfiguration: int getEdgeSlop()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: float getDelay()> -> _SOURCE_
<com.android.mms.ui.RecipientsEditor: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue getEncodedStringValue(int)> -> _SOURCE_
<android.view.View: int getRight()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet$Builder naturalOrder()> -> _SOURCE_
<android.content.Intent: android.content.Intent getSelector()> -> _SOURCE_
<android.content.pm.ConfigurationInfo: java.lang.String toString()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: float getRepeatCount()> -> _SOURCE_
<android.app.Activity: android.content.SharedPreferences getPreferences(int)> -> _SOURCE_
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()> -> _SOURCE_
<com.android.calendar.AsyncQueryService: int getNextToken()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: int getFrequencyBand()> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getLabelFor(android.view.View)> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectNetwork()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)> -> _SOURCE_
<java.util.Calendar: int getFirstDayOfWeek()> -> _SOURCE_
<com.android.systemui.statusbar.StatusBarIconView: com.android.internal.statusbar.StatusBarIcon getStatusBarIcon()> -> _SOURCE_
<com.android.browser.homepages.Template$CursorListEntityWrapper: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)> -> _SOURCE_
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()> -> _SOURCE_
<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()> -> _SOURCE_
<android.location.IGpsStatusListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AuthenticationInfoHeader createAuthenticationInfoHeader(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: boolean createBond()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String reserved()> -> _SOURCE_
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$CardState getCardState()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getDeviceClass()> -> _SOURCE_
<android.renderscript.Element: int getSubElementCount()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Filter getFilter()> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getPayload()> -> _SOURCE_
<android.view.View$MeasureSpec: int getMode(int)> -> _SOURCE_
<android.content.SyncManager: android.content.SyncStorageEngine getSyncStorageEngine()> -> _SOURCE_
<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: long getItemId(int)> -> _SOURCE_
<com.android.vcard.VCardEntry: java.lang.String toString()> -> _SOURCE_
<android.content.res.ColorStateList: java.lang.String toString()> -> _SOURCE_
<java.lang.ProcessBuilder: java.io.File directory()> -> _SOURCE_
<com.android.contacts.ContactsApplication: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()> -> _SOURCE_
<android.view.accessibility.IAccessibilityManagerClient$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebBackForwardList copyBackForwardList()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: int getMaxScrollX(java.lang.Object)> -> _SOURCE_
<java.text.BreakIterator: java.lang.Object clone()> -> _SOURCE_
<java.lang.Long: java.lang.String toString()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: java.lang.String toString()> -> _SOURCE_
<com.android.phone.AnimationUtils$CrossFadeDrawable: android.animation.ObjectAnimator getAnimator()> -> _SOURCE_
<java.io.ObjectStreamField: java.lang.String getTypeString()> -> _SOURCE_
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1UTCTime: org.apache.harmony.security.asn1.ASN1UTCTime getInstance()> -> _SOURCE_
<com.android.phone.ManageConferenceUtils: int getNumCallersInConference()> -> _SOURCE_
<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()> -> _SOURCE_
<android.drm.DrmInfo: java.util.Iterator iterator()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: android.view.View addStreamItemText(android.content.Context,com.android.contacts.util.StreamItemEntry,android.view.View)> -> _SOURCE_
<com.android.inputmethod.latin.WordComposer: java.lang.CharSequence getAutoCorrectionOrNull()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()> -> _SOURCE_
<com.android.browser.TabControl: android.webkit.WebView getCurrentWebView()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<com.android.contacts.calllog.PhoneNumberHelper: java.lang.CharSequence getDisplayNumber(java.lang.CharSequence,java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ClientHello: byte[] getRandom()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String getRefresher()> -> _SOURCE_
<com.android.mms.model.ContentRestrictionFactory: com.android.mms.model.ContentRestriction getContentRestriction()> -> _SOURCE_
<org.apache.harmony.security.x509.BasicConstraints: byte[] getEncoded()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getPeerPort()> -> _SOURCE_
<android.net.LinkProperties: java.util.Collection getDnses()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: java.lang.Runnable access$800(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory,java.lang.String,android.content.BroadcastReceiver$PendingResult,int)> -> _SOURCE_
<com.android.server.TwilightService$TwilightState: long getYesterdaySunset()> -> _SOURCE_
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<android.os.StatFs: int getBlockSize()> -> _SOURCE_
<com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap: java.util.Map getCountryCodeToRegionCodeMap()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchOnWifiOnlyPreferenceString(android.content.Context)> -> _SOURCE_
<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)> -> _SOURCE_
<com.android.providers.downloads.DownloadHandler: com.android.providers.downloads.DownloadHandler getInstance()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()> -> _SOURCE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getSentBytesCount()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPersonalNumber()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: android.view.View getDivider()> -> _SOURCE_
<com.android.contacts.util.LocalizedNameResolver: java.lang.String getAllContactsName(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.webkit.WebSettings: boolean getDomStorageEnabled()> -> _SOURCE_
<android.widget.CalendarView: int getWeekSeparatorLineColor()> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: java.lang.String toString()> -> _SOURCE_
<android.telephony.ServiceState: int getState()> -> _SOURCE_
<com.google.common.collect.Sets$InvertibleFunction: com.google.common.collect.Sets$InvertibleFunction inverse()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getCurrentDataConnectionList()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult access$500(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataCallState)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.lang.String toString()> -> _SOURCE_
<android.widget.TextView: int getBottomPaddingOffset()> -> _SOURCE_
<android.net.wifi.WifiManager: boolean isMulticastEnabled()> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: int getDisplayHeight()> -> _SOURCE_
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState PersoSubstateFromRILInt(int)> -> _SOURCE_
<android.widget.OverScroller: float getCurrVelocity()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab getTab(int)> -> _SOURCE_
<com.google.common.collect.ImmutableSet$TransformedImmutableSet: java.lang.Object[] toArray()> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: java.lang.String getAddress()> -> _SOURCE_
<java.text.CollationElementIterator: int getOffset()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getLine()> -> _SOURCE_
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()> -> _SOURCE_
<java.util.HashMap$HashMapEntry: java.lang.Object getValue()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesReceived()> -> _SOURCE_
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getEmailList()> -> _SOURCE_
<android.webkit.WebViewCore: java.lang.String jsPrompt(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: int getMetaState()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: boolean getTrustState()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.Exception getException()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AcceptHeader createAcceptHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<java.security.MessageDigest: java.lang.Object clone()> -> _SOURCE_
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> -> _SOURCE_
<com.android.browser.provider.SQLiteContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingRight()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: gov.nist.core.Host getHost()> -> _SOURCE_
<android.view.View: int getSolidColor()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: boolean isStateful()> -> _SOURCE_
<com.android.browser.NfcHandler: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)> -> _SOURCE_
<com.android.mms.transaction.TransactionSettings: java.lang.String getProxyAddress()> -> _SOURCE_
<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: float getLabelTop(com.android.settings.widget.ChartSweepView)> -> _SOURCE_
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: boolean getStopped(int)> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getGiven()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object getApplicationData()> -> _SOURCE_
<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: long getExpiry()> -> _SOURCE_
<com.android.camera.ui.IndicatorControl: com.android.camera.ui.OtherSettingIndicatorButton addOtherSettingIndicator(android.content.Context,int,java.lang.String[])> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: boolean getUseCaches()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getDocumentURI()> -> _SOURCE_
<com.android.mms.layout.LayoutManager: int getLayoutType()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: java.lang.CharSequence getTitle(android.content.Context)> -> _SOURCE_
<java.util.Scanner: java.util.regex.MatchResult match()> -> _SOURCE_
<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.view.View getView()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getItemViewType(int)> -> _SOURCE_
<android.text.StaticLayout: int getLineTop(int)> -> _SOURCE_
<android.os.Bundle: java.util.Set keySet()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()> -> _SOURCE_
<java.lang.reflect.Array: long getLong(java.lang.Object,int)> -> _SOURCE_
<android.graphics.Region: boolean getBounds(android.graphics.Rect)> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAccountAndAuthority(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getPeerHost()> -> _SOURCE_
<com.android.ex.chips.RecipientAlternatesAdapter: long getItemId(int)> -> _SOURCE_
<gov.nist.core.MultiValueMapImpl: java.util.Set keySet()> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.GET_ACCOUNTS -> _SOURCE_|ACCOUNT_INFORMATION
<android.widget.CalendarView$WeeksAdapter: long getItemId(int)> -> _SOURCE_
<libcore.net.http.HttpConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()> -> _SOURCE_
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: int getWaitQueueLength()> -> _SOURCE_
<android.support.v4.view.ViewCompat: int getLayerType(android.view.View)> -> _SOURCE_
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)> -> _SOURCE_
<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()> -> _SOURCE_
<org.apache.http.message.BasicHeader: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()> -> _SOURCE_
<android.widget.ProgressBar: int getMax()> -> _SOURCE_
<android.content.res.Resources: int[] getIntArray(int)> -> _SOURCE_
<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection build()> -> _SOURCE_
<android.widget.MediaController: android.view.View makeControllerView()> -> _SOURCE_
<android.widget.GridLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<android.content.pm.PackageParser$Component: java.lang.String getComponentShortName()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.util.List getInstalledProviders()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: int getPort()> -> _SOURCE_
<android.webkit.WebView: int getContentHeight()> -> _SOURCE_
<android.widget.Toast: float getVerticalMargin()> -> _SOURCE_
<android.hardware.display.IDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SOURCE_
<android.accounts.IAccountManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.preference.Preference: long getPersistedLong(long)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()> -> _SOURCE_
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()> -> _SOURCE_
<com.android.server.AppWidgetService: android.os.Bundle getAppWidgetOptions(int)> -> _SOURCE_
<com.android.internal.telephony.AdnRecord: java.lang.String getNumber()> -> _SOURCE_
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: java.lang.Object Clone()> -> _SOURCE_
<com.google.common.collect.Sets$PowerSet$1: java.lang.Object get(int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: org.w3c.dom.smil.TimeList getBegin()> -> _SOURCE_
<android.widget.ViewAnimator: int getDisplayedChild()> -> _SOURCE_
<android.webkit.WebViewClassic: int getViewHeightWithTitle()> -> _SOURCE_
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> -> _SOURCE_
<java.util.AbstractCollection: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaMin()> -> _SOURCE_
<com.android.settings.bluetooth.PanProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<gov.nist.javax.sip.header.TimeStamp: int getTimeDelay()> -> _SOURCE_
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)> -> _SOURCE_
<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.ContextImpl$40: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<android.app.IUiModeManager$Stub$Proxy: int getCurrentModeType()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getWordInstance()> -> _SOURCE_
<com.android.contacts.list.ContactTileView: android.net.Uri getLookupUri()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getApplicationBufferSize()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()> -> _SOURCE_
<android.widget.TextView: android.text.Layout getHintLayout()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)> -> _SOURCE_
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object peekLast()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.net.URI getUri()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingTop()> -> _SOURCE_
<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$FolderRole getRole()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: java.util.ArrayList getWordsInner(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.text.Layout: float getSpacingAdd()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> -> _SOURCE_
<com.android.mms.util.Recycler$MmsRecycler: int getMessageLimit(android.content.Context)> -> _SOURCE_
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()> -> _SOURCE_
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<com.google.android.mms.util.PduCacheEntry: long getThreadId()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date getExpiryDate()> -> _SOURCE_
<com.android.contacts.util.HtmlUtils$StreamItemQuoteSpan: int getLeadingMargin(boolean)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()> -> _SOURCE_
<android.widget.ListPopupWindow: int getHorizontalOffset()> -> _SOURCE_
<java.lang.ProcessManager$ProcessImpl: java.io.InputStream getErrorStream()> -> _SOURCE_
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,byte[],javax.sip.header.ContentTypeHeader)> -> _SOURCE_
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle transceive(java.lang.String,byte[])> -> _SOURCE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: int getContentCount()> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: java.lang.String GetImage()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()> -> _SOURCE_
<android.media.Ringtone: android.net.Uri getUri()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()> -> _SOURCE_
<android.widget.CalendarView$WeekView: int getMonthOfLastWeekDay()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int)> -> _SOURCE_
<java.lang.String: java.lang.String toString()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.lang.String getOriginAddress(java.net.URL)> -> _SOURCE_
<com.android.server.WifiService: java.util.List getConfiguredNetworks()> -> _SOURCE_
<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: int getDefaultFontSize()> -> _SOURCE_
<org.apache.http.message.BasicStatusLine: int getStatusCode()> -> _SOURCE_
<com.android.settings.AccessibilityEnableScriptInjectionPreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespacePrefix(int)> -> _SOURCE_
<com.google.common.collect.ImmutableList: java.util.List subList(int,int)> -> _SOURCE_
<android.view.Display: java.lang.String getName()> -> _SOURCE_
<com.google.android.mms.pdu.PduParser: byte[] getWapString(java.io.ByteArrayInputStream,int)> -> _SOURCE_
<com.android.exchange.EasResponse: int getStatus()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: int getBouncerAnimationDuration()> -> _SOURCE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()> -> _SOURCE_
<android.webkit.WebViewClassic: int getContentWidth()> -> _SOURCE_
<java.net.URI: java.lang.String getFragment()> -> _SOURCE_
<android.filterfw.core.Frame: android.filterfw.core.Frame release()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getPrimaryEntry(java.lang.String)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getRadius()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeName(int)> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range atMost(java.lang.Comparable)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500NameBuilder: com.android.org.bouncycastle.asn1.x500.X500NameBuilder addRDN(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Explicit: java.lang.String toString()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: long getExpiration()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralNames: java.util.List getNames()> -> _SOURCE_
<android.net.Uri: int hashCode()> -> _SOURCE_
<android.view.KeyEvent: char getMatch(char[])> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.smil.TimeList getEnd()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.NodeList getTimeChildren()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: java.util.Locale getLocale()> -> _SOURCE_
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getPositionForPartition(int)> -> _SOURCE_
<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToBnW(byte[],int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()> -> _SOURCE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray)> -> _SOURCE_
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)> -> _SOURCE_
<android.accounts.IAccountManagerResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: boolean isReliable()> -> _SOURCE_
<com.android.internal.telephony.IccCardApplicationStatus: java.lang.String toString()> -> _SOURCE_
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)> -> _SOURCE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable,boolean)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: int getPort()> -> _SOURCE_
<android.view.View$5: java.lang.Float get(android.view.View)> -> _SOURCE_
<android.net.wifi.WifiInfo: int getNetworkId()> -> _SOURCE_
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)> -> _SOURCE_
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)> -> _SOURCE_
<java.lang.Float: long longValue()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: int getResponseCode()> -> _SOURCE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: org.w3c.dom.smil.TimeList getBegin()> -> _SOURCE_
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getDuration()> -> _SOURCE_
<android.text.method.MultiTapKeyListener: int getInputType()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()> -> _SOURCE_
<java.io.EmulatedFields: long get(java.lang.String,long)> -> _SOURCE_
<android.view.Display: int getOrientation()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.lang.String replacement()> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getNameForUid(int)> -> _SOURCE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String getType()> -> _SOURCE_
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: int getVoiceMessageCount()> -> _SOURCE_
<android.app.ActivityGroup: java.util.HashMap onRetainNonConfigurationChildInstances()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.Object clone()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getRemovedCount(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getDisplayName()> -> _SOURCE_
<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<android.location.INetInitiatedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)> -> _SOURCE_
<android.database.MatrixCursor: int getInt(int)> -> _SOURCE_
<android.telephony.TelephonyManager: int getCurrentPhoneType()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getContentType()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getOperatorNumeric()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.util.Set entrySet()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean getMessageWaitingIndicator()> -> _SOURCE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: android.view.View getFirstVisibleView()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getAuthority()> -> _SOURCE_
<com.android.server.WifiService: int getWifiEnabledState()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()> -> _SOURCE_
<android.util.Property: java.lang.Class getType()> -> _SOURCE_
<android.filterfw.core.Filter: int getStatus()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: long getCSeq()> -> _SOURCE_
<java.nio.charset.CodingErrorAction: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.To: java.lang.String getUserAtHostPort()> -> _SOURCE_
<libcore.io.IoUtils: byte[] readFileAsByteArray(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<android.os.storage.StorageVolume: int getMtpReserveSpace()> -> _SOURCE_
<gov.nist.javax.sip.header.ErrorInfo: javax.sip.address.URI getErrorInfo()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.SecurityServerHeader createSecurityServerHeader()> -> _SOURCE_
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)> -> _SOURCE_
<java.util.TreeMap: java.util.Map$Entry lastEntry()> -> _SOURCE_
<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()> -> _SOURCE_
<android.app.Fragment: boolean getUserVisibleHint()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()> -> _SOURCE_
<java.util.EnumMap: java.util.Set keySet()> -> _SOURCE_
<android.text.method.CharacterPickerDialog$OptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)> android.permission.WRITE_CONTACTS -> _SOURCE_
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()> -> _SOURCE_
<org.apache.http.impl.cookie.NetscapeDraftSpec: int getVersion()> -> _SOURCE_
<com.android.mms.util.SmileyParser: com.android.mms.util.SmileyParser getInstance()> -> _SOURCE_
<com.android.settings.bluetooth.HeadsetProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()> -> _SOURCE_
<com.android.mms.data.Conversation: long ensureThreadId()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNamespaceURI()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getViewGroupLabel(android.content.Context)> -> _SOURCE_
<android.widget.RadioGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHAwithoutLast()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitPatterns()> -> _SOURCE_
<java.util.IllegalFormatCodePointException: int getCodePoint()> -> _SOURCE_
<libcore.io.ForwardingOs: long mmap(long,long,int,int,java.io.FileDescriptor,long)> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: gov.nist.core.NameValueList getParameters()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SOURCE_|NETWORK_INFORMATION
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)> -> _SOURCE_
<android.net.DhcpInfoInternal: android.net.LinkProperties makeLinkProperties()> -> _SOURCE_
<android.net.LocalSocketImpl: java.lang.Object getOption(int)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()> -> _SOURCE_
<java.net.DatagramSocket: int getSoTimeout()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: java.lang.Object clone()> -> _SOURCE_
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.telephony.Connection: boolean isAlive()> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: boolean isEmpty()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()> -> _SOURCE_
<android.view.MotionEvent: float getToolMajor()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getContentAlpha()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getHour()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator interpolator(android.animation.TimeInterpolator,android.animation.Animator)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat addLeadingDigitsPattern(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.PolicyConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toSeconds(long)> -> _SOURCE_
<com.android.camera.Util: int getDisplayOrientation(int,int)> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()> -> _SOURCE_
<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.NotifyRespInd: byte[] getTransactionId()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createCancel()> -> _SOURCE_
<com.android.contacts.ContactPhotoManagerImpl$Request: long getId()> -> _SOURCE_
<com.android.server.am.ActivityStack: com.android.server.am.TaskAccessInfo getTaskAccessInfoLocked(int,boolean)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> -> _SOURCE_
<android.os.Process: int getThreadGroupLeader(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()> -> _SOURCE_
<android.hardware.usb.IUsbManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: boolean getFeature(java.lang.String)> -> _SOURCE_
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()> -> _SOURCE_
<com.android.browser.search.DefaultSearchEngine: java.lang.CharSequence getLabel()> -> _SOURCE_
<android.preference.PreferenceFragment: android.widget.ListView access$100(android.preference.PreferenceFragment)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()> -> _SOURCE_
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object getValue()> -> _SOURCE_
<org.apache.harmony.security.x509.AlternativeName: byte[] getEncoded()> -> _SOURCE_
<java.lang.Object: java.lang.Object clone()> -> _SOURCE_
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()> -> _SOURCE_
<android.net.TrafficStats: long getTotalRxBytes()> -> _SOURCE_
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()> -> _SOURCE_
<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)> -> _SOURCE_
<android.widget.PopupWindow: int getAnimationStyle()> -> _SOURCE_
<com.android.internal.telephony.DataConnection$CallSetupException: int getRetryOverride()> -> _SOURCE_
<java.text.NumberFormat: java.lang.Number parse(java.lang.String)> -> _SOURCE_
<android.net.Uri$StringUri: java.util.List getPathSegments()> -> _SOURCE_
<org.apache.http.entity.StringEntity: java.io.InputStream getContent()> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper: int getId()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.util.Comparator comparator()> -> _SOURCE_
<javax.crypto.spec.DHParameterSpec: int getL()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getToHeader()> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: int getOpacity()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getPreviousSpanY()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getVideoStabilization()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getSupportedTypes()> -> _SOURCE_
<android.drm.ProcessedData: java.lang.String getAccountId()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getTagName()> -> _SOURCE_
<com.google.common.io.CharStreams$3: java.io.OutputStreamWriter getOutput()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getDefaultPhotoResource()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getPrefix()> -> _SOURCE_
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getTextContent()> -> _SOURCE_
<android.view.MotionEvent: float getToolMinor()> -> _SOURCE_
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.util.List getExtensionPackageNames()> -> _SOURCE_
<com.android.contacts.model.account.AccountTypeWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet get(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getImei()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getMultiParameter(java.lang.String)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int)> -> _SOURCE_
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getBaseURI()> -> _SOURCE_
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.INotificationManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getIMSI()> -> _SOURCE_
<android.content.IIntentSender$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()> -> _SOURCE_
<android.widget.Editor$ActionPopupWindow: int getVerticalLocalPosition(int)> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIds(android.content.ComponentName)> -> _SOURCE_
<gov.nist.javax.sip.header.Warning: java.lang.String encodeBody()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()> -> _SOURCE_
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future take()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getMinimumFontSize()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: int getAddressType()> -> _SOURCE_
<android.media.AudioManager: int getStreamVolume(int)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: boolean isContactInsert()> -> _SOURCE_
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType rootElementType()> -> _SOURCE_
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewContactNotifyServiceClassName()> -> _SOURCE_
<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)> -> _SOURCE_
<com.android.mms.ui.Presenter: com.android.mms.model.Model getModel()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)> -> _SOURCE_
<org.apache.http.auth.AuthState: java.lang.String toString()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()> -> _SOURCE_
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer rewind()> -> _SOURCE_
<android.webkit.WebStorage$Origin: java.lang.String getOrigin()> -> _SOURCE_
<com.android.phone.PhoneUtils: com.android.internal.telephony.Phone getSipPhoneFromUri(com.android.internal.telephony.CallManager,java.lang.String)> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: float getWindowOverlapDuration()> -> _SOURCE_
<android.widget.LinearLayout: float getWeightSum()> -> _SOURCE_
<java.util.logging.LogRecord: int getThreadID()> -> _SOURCE_
<com.android.ex.chips.RecipientChip: java.lang.CharSequence getDisplay()> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)> -> _SOURCE_
<android.preference.Preference: long getId()> -> _SOURCE_
<android.widget.Scroller: int getFinalX()> -> _SOURCE_
<android.database.CursorWindow: int getNumRows()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: java.lang.String getDefaultContentEncodingCharset()> -> _SOURCE_
<com.android.contacts.editor.PhotoActionPopup$ChoiceListItem: int getId()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PMediaAuthorizationHeader createPMediaAuthorizationHeader(java.lang.String)> -> _SOURCE_
<android.view.View: int getRightPaddingOffset()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.CellLocation getCellLocation()> -> _SOURCE_
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getDay()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getY()> -> _SOURCE_
<android.net.SntpClient: long getNtpTime()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String encodeBody()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getPreviousSpan()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String uricString()> -> _SOURCE_
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getValue()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()> -> _SOURCE_
<com.android.mms.model.SlideModel: java.util.ListIterator listIterator()> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> android.permission.READ_CONTACTS -> _SOURCE_
<java.util.SimpleTimeZone: int getDSTSavings()> -> _SOURCE_
<android.animation.ValueAnimator: long getFrameDelay()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getBlockNetworkImage()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<java.security.Provider$Service: java.security.Provider getProvider()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountName()> -> _SOURCE_
<android.telephony.CellInfo: int hashCode()> -> _SOURCE_
<com.android.providers.contacts.DataRowHandler: android.content.ContentValues getAugmentedValues(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)> -> _SOURCE_
<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: int getPinnedHeaderCount()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getFirst(int)> -> _SOURCE_
<android.location.Geofence: double getLongitude()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingEnd()> -> _SOURCE_
<com.android.contacts.editor.KindSectionView: java.lang.String getTitle()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: long getExpirationTime()> -> _SOURCE_
<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getForegroundCalls()> -> _SOURCE_
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)> -> _SOURCE_
<java.util.jar.Attributes: java.util.Set keySet()> -> _SOURCE_
<libcore.icu.ICU: java.lang.String[] getISOCountries()> -> _SOURCE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale)> -> _SOURCE_
<android.os.Build: java.lang.String getRadioVersion()> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String,java.lang.String)> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: java.lang.Object delegate()> -> _SOURCE_
<android.view.KeyEvent: int getMetaState()> -> _SOURCE_
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> _SOURCE_
<android.app.WallpaperManager: android.graphics.Bitmap generateBitmap(android.content.Context,android.graphics.Bitmap,int,int)> -> _SOURCE_
<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginColumn()> -> _SOURCE_
<java.util.MissingResourceException: java.lang.String getClassName()> -> _SOURCE_
<com.android.internal.telephony.ServiceStateTracker: java.util.List getAllCellInfo()> -> _SOURCE_
<com.google.common.collect.Multisets$ImmutableEntry: java.lang.Object getElement()> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView$DataAxis: float[] getTickPoints()> -> _SOURCE_
<android.view.TextureView: int getLayerType()> -> _SOURCE_
<com.android.exchange.adapter.Search: int searchMessages(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()> -> _SOURCE_
<android.os.UserManager: int getUserHandle()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<com.android.contacts.editor.EventFieldEditorView: int getDefaultHourForBirthday()> -> _SOURCE_
<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getState()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getOOBInline()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment: android.widget.Button getNextButton()> -> _SOURCE_
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)> -> _SOURCE_
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> -> _SOURCE_
<com.android.internal.location.ILocationProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> -> _SOURCE_
<android.webkit.WebStorageClassic: java.util.Collection getOriginsSync()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ExpiresHeader createExpiresHeader(int)> -> _SOURCE_
<com.android.phone.InCallScreen: com.android.phone.InCallTouchUi getInCallTouchUi()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideModel get(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String substringData(int,int)> -> _SOURCE_
<gov.nist.core.MultiValueMapImpl: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: java.lang.String getCurrentPhotoFile()> -> _SOURCE_
<android.view.PointerIcon: int getStyle()> -> _SOURCE_
<java.security.cert.CertificateFactory: java.lang.String getType()> -> _SOURCE_
<android.drm.DrmSupportInfo: java.lang.String getDescription()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.text.StringCharacterIterator: int getIndex()> -> _SOURCE_
<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: com.android.providers.calendar.CalendarProvider2 getInstance()> -> _SOURCE_
<android.media.MediaPlayer: android.os.Parcel newRequest()> -> _SOURCE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)> -> _SOURCE_
<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getClccLines()> -> _SOURCE_
<com.google.android.mms.pdu.AcknowledgeInd: byte[] getTransactionId()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)> -> _SOURCE_
<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(byte[])> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList: byte[] getSignatureValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.math.BigInteger getX()> -> _SOURCE_
<android.telephony.CellIdentityCdma: java.lang.String toString()> -> _SOURCE_
<com.google.android.mms.util.PduCacheEntry: int getMessageBox()> -> _SOURCE_
<android.app.IThumbnailReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.webkit.Plugin: java.lang.String getPath()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int hashCode()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)> -> _SOURCE_
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String getTouchIconUrl()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: byte[] getContentType()> -> _SOURCE_
<android.net.wifi.WifiManager: int getFrequencyBand()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<org.json.JSONArray: double getDouble(int)> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()> -> _SOURCE_
<java.lang.Character: char charValue()> -> _SOURCE_
<org.apache.http.impl.cookie.BrowserCompatSpec: org.apache.http.Header getVersionHeader()> -> _SOURCE_
<android.database.CursorWindow: float getFloat(int,int)> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: javax.sip.address.URI getURI()> -> _SOURCE_
<android.test.mock.MockContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: int getImageHeight()> -> _SOURCE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<android.app.AlertDialog$Builder: android.app.AlertDialog show()> -> _SOURCE_
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: com.google.common.collect.ImmutableList createAsList()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: javax.net.ssl.SSLSession getSession()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl getHandshakeCompletedListener()> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmAppRestrictFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean isTitleOptional()> -> _SOURCE_
<android.content.pm.PackageParser: int getParseError()> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable)> -> _SOURCE_
<com.android.camera.ui.IndicatorControl: android.view.View getActiveSettingPopup()> -> _SOURCE_
<com.android.providers.contacts.MemoryCursor: int getCount()> -> _SOURCE_
<android.widget.BaseAdapter: int getItemViewType(int)> -> _SOURCE_
<android.app.Instrumentation: android.content.Context getContext()> -> _SOURCE_
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)> -> _SOURCE_
<java.io.File: java.lang.String getCanonicalPath()> -> _SOURCE_
<com.android.mms.transaction.Transaction: com.android.mms.transaction.TransactionSettings getConnectionSettings()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()> -> _SOURCE_
<com.android.settings.net.UidDetailProvider: com.android.settings.net.UidDetail getUidDetail(int,boolean)> -> _SOURCE_
<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> -> _SOURCE_
<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()> -> _SOURCE_
<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()> -> _SOURCE_
<android.widget.Scroller: int getStartY()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()> -> _SOURCE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.String getMessage()> -> _SOURCE_
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parse()> -> _SOURCE_
<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)> -> _SOURCE_
<java.lang.Double: java.lang.String toString()> -> _SOURCE_
<android.widget.AbsListView: int getHeaderViewsCount()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean getUnitTestMode()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.io.InputStream getInputStream()> -> _SOURCE_
<java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()> -> _SOURCE_
<android.os.PatternMatcher: int getType()> -> _SOURCE_
<com.android.vcard.VCardComposer: java.lang.String createOneEntry()> -> _SOURCE_
<com.android.browser.PreloadController: android.app.Activity getActivity()> -> _SOURCE_
<android.text.Layout$SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<java.util.LinkedHashMap: java.util.Iterator newEntryIterator()> -> _SOURCE_
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getGroupMetaData()> -> _SOURCE_
<android.drm.DrmInfo: java.lang.String getMimeType()> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset createDescendingMultiset()> -> _SOURCE_
<com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)> -> _SOURCE_
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)> -> _SOURCE_
<com.android.calendar.EventInfoFragment: long getStartMillis()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String getWkday()> -> _SOURCE_
<com.android.vcard.VCardEntry: com.android.vcard.VCardEntry$NameData getNameData()> -> _SOURCE_
<org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer: byte get()> -> _SOURCE_
<gov.nist.javax.sip.header.RouteList: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()> -> _SOURCE_
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()> -> _SOURCE_
<com.android.browser.view.ScrollerView: float getBottomFadingEdgeStrength()> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)> -> _SOURCE_
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence getTypeLabel(android.content.res.Resources,java.lang.Integer,java.lang.CharSequence)> -> _SOURCE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.phone.PhoneGlobals: boolean isOtaCallInEndState()> -> _SOURCE_
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> -> _SOURCE_
<javax.sip.SipFactory: javax.sip.header.HeaderFactory createHeaderFactory()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeAndDataSet()> -> _SOURCE_
<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()> -> _SOURCE_
<java.security.SecureRandom: byte[] generateSeed(int)> -> _SOURCE_
<gov.nist.javax.sip.header.TimeStamp: float getDelay()> -> _SOURCE_
<com.android.browser.Tab: com.android.browser.GeolocationPermissionsPrompt getGeolocationPermissionsPrompt()> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientChip[] getSortedRecipients()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: int getBaseline(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()> -> _SOURCE_
<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: float getImplicitDuration()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getPreloadOnWifiOnlyPreferenceString(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getPeerHostPort()> -> _SOURCE_
<com.android.mms.ui.RecipientsEditor$RecipientsEditorTokenizer: java.util.List getNumbers()> -> _SOURCE_
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo,boolean)> -> _SOURCE_
<android.hardware.Sensor: java.lang.String toString()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.Collections$SingletonList: java.lang.Object get(int)> -> _SOURCE_
<android.widget.SearchView: int getMaxWidth()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)> -> _SOURCE_
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()> -> _SOURCE_
<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILDocument getDocument(com.google.android.mms.pdu.PduBody)> -> _SOURCE_
<com.android.contacts.ContactStatusUtil: java.lang.String getStatusString(android.content.Context,int)> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getSelectedGroup()> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDeathOnNetwork()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker weakKeys()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<android.hardware.SensorManager: float getInclination(float[])> -> _SOURCE_
<com.android.contacts.model.dataitem.NoteDataItem: java.lang.String getNote()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> -> _SOURCE_
<com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: com.android.inputmethod.accessibility.KeyCodeDescriptionMapper getInstance()> -> _SOURCE_
<com.android.providers.media.MediaProvider: android.net.Uri getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)> -> _SOURCE_
<android.media.RemoteControlClient: int getIntPlaybackInformation(int)> -> _SOURCE_
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignature()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getDefaultFixedFontSize()> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()> -> _SOURCE_
<java.nio.PipeImpl$PipeSourceChannel: java.io.FileDescriptor getFD()> -> _SOURCE_
<com.android.systemui.statusbar.BaseStatusBar: android.view.View$OnLongClickListener getNotificationLongClicker()> -> _SOURCE_
<com.android.browser.SnapshotTab: com.android.browser.Tab getParent()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()> -> _SOURCE_
<com.android.providers.contacts.ContactDirectoryManager: int scanAllPackages()> -> _SOURCE_
<java.nio.HeapByteBuffer: byte get()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getLineNumber()> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> -> _SOURCE_
<android.os.storage.StorageVolume: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.header.Via getViaHeader()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getPath()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getDisplayOptions()> -> _SOURCE_
<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.cat.Item: java.lang.String toString()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestPath()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PUserDatabaseHeader createPUserDatabaseHeader(java.lang.String)> -> _SOURCE_
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.database.Cursor access$200(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence,int,java.lang.Long)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset of()> -> _SOURCE_
<android.text.SpannableString: int getSpanStart(java.lang.Object)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getPackageStats()> -> _SOURCE_
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getPageIndex()> -> _SOURCE_
<com.android.browser.BrowserSettings: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody makeCopy()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)> -> _SOURCE_
<android.widget.GridView: int getColumnWidth()> -> _SOURCE_
<android.webkit.WebViewClassic: int getHistoryPictureWidth()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginColumn()> -> _SOURCE_
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnection: int getProfileId()> -> _SOURCE_
<com.android.browser.TitleBar: com.android.browser.BaseUi getUi()> -> _SOURCE_
<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.Object clone()> -> _SOURCE_
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: int getDestinationType()> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getPhotoStore()> -> _SOURCE_
<java.lang.Character: java.lang.String toString()> -> _SOURCE_
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCity()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)> -> _SOURCE_
<android.widget.RemoteViews$SetDrawableParameters: java.lang.String getActionName()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> -> _SOURCE_
<com.android.exchange.adapter.ContactsSyncAdapter: java.util.ArrayList access$800()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RetryAfterHeader createRetryAfterHeader(int)> -> _SOURCE_
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)> android.permission.CHANGE_CONFIGURATION -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket getSocket()> -> _SOURCE_
<android.app.ActivityThread: android.app.Application getApplication()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering arbitrary()> -> _SOURCE_
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getDataSet()> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: int getCount()> -> _SOURCE_
<android.widget.GridLayout$7: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<java.io.FileOutputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getLastModified()> -> _SOURCE_
<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> -> _SOURCE_
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> -> _SOURCE_
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()> -> _SOURCE_
<com.android.browser.Tab: android.net.http.SslError getSslCertificateError()> -> _SOURCE_
<android.location.LocationRequest: long getExpireAt()> -> _SOURCE_
<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int getAltCode()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String toString()> -> _SOURCE_
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: boolean getDisplayPhotos()> -> _SOURCE_
<android.app.LoadedApk: java.lang.String getDataDir()> -> _SOURCE_
<android.widget.FastScroller: int getState()> -> _SOURCE_
<android.widget.CalendarView$WeekView: int getMonthOfFirstWeekDay()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: com.android.emailcommon.provider.EmailContent$Body restoreBodyWithId(android.content.Context,long)> -> _SOURCE_
<java.lang.Short: byte byteValue()> -> _SOURCE_
<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getBackgroundColor()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getCdmaEriIconMode()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()> -> _SOURCE_
<android.content.ContentProviderNative: android.os.IBinder asBinder()> -> _SOURCE_
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: android.graphics.drawable.Drawable getChipBackground(com.android.ex.chips.RecipientEntry)> -> _SOURCE_
<android.widget.TabHost: android.widget.TabWidget getTabWidget()> -> _SOURCE_
<android.hardware.LegacySensorManager: int getRotation()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.TimeStampHeader createTimeStampHeader(float)> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: android.telephony.CellSignalStrength copy()> -> _SOURCE_
<com.android.mms.layout.LayoutManager: com.android.mms.layout.LayoutManager getInstance()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)> -> _SOURCE_
<android.view.IApplicationToken$Stub$Proxy: long getKeyDispatchingTimeout()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()> -> _SOURCE_
<com.android.settings.tts.TtsEnginePreference: android.view.View getView(android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.text.method.WordIterator: int getEnd(int)> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: boolean getDefaultUseCaches()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaMmiCode: java.lang.CharSequence getMessage()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemActivity()> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String getSelection()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: boolean getMessageWaitingIndicator()> -> _SOURCE_
<android.widget.EditText: boolean getDefaultEditable()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getNamespaceCount(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.SessionExpires: int getExpires()> -> _SOURCE_
<android.net.BaseNetworkStateTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)> -> _SOURCE_
<android.webkit.CallbackProxy$UploadFile: android.net.Uri getResult()> -> _SOURCE_
<com.android.internal.util.StateMachine: int getLogRecCount()> -> _SOURCE_
<android.view.View: int getTextAlignment()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.Bundle getAppWidgetOptions(int)> -> _SOURCE_
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)> -> _SOURCE_
<android.media.effect.FilterEffect: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.Multisets$UnmodifiableMultiset: java.util.Set elementSet()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()> -> _SOURCE_
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()> -> _SOURCE_
<android.animation.Animator: boolean isStarted()> -> _SOURCE_
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List getAllPermissionGroups(int)> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(java.lang.String)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getSipDomain()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: android.content.Context getContext()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: int getVoiceMessageCount()> -> _SOURCE_
<java.util.Stack: java.lang.Object peek()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: long getExpirationTime()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String getOriginalUrl()> -> _SOURCE_
<android.text.style.RelativeSizeSpan: float getSizeChange()> -> _SOURCE_
<com.android.phone.PhoneUtils: boolean getMute()> -> _SOURCE_
<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: java.lang.String toString()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getSize()> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandom()> -> _SOURCE_
<java.net.DatagramSocket: java.io.FileDescriptor getFileDescriptor$()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> -> _SOURCE_
<com.android.exchange.adapter.Parser: int getValueInt()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetResourceId()> -> _SOURCE_
<org.json.JSONStringer: org.json.JSONStringer endObject()> -> _SOURCE_
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()> -> _SOURCE_
<android.net.NetworkStats: long getElapsedRealtime()> -> _SOURCE_
<android.text.Layout: int getParagraphLeft(int)> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()> -> _SOURCE_
<java.security.SecureRandom: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.settings.Settings$HeaderAdapter: int getViewTypeCount()> -> _SOURCE_
<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)> -> _SOURCE_
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)> -> _SOURCE_
<android.view.MotionEvent: long getDownTime()> -> _SOURCE_
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object take()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getCount()> -> _SOURCE_
<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getItemViewTypeCount()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: boolean isEmpty()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.spi.SelectorProvider provider()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS: byte[] encrypt(byte,byte[],int,int)> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<gov.nist.javax.sip.header.AllowEvents: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtrees$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<android.widget.TabHost$ViewIdContentStrategy: android.view.View getContentView()> -> _SOURCE_
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> android.permission.READ_CALL_LOG -> _SOURCE_
<android.widget.TextView: int getExtendedPaddingTop()> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientEntry access$2300(com.android.ex.chips.RecipientEditTextView,com.android.ex.chips.RecipientEntry)> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)> -> _SOURCE_
<com.android.camera.ui.SharePopup: android.net.Uri getUri()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByName(java.lang.String)> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection clear()> -> _SOURCE_
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()> -> _SOURCE_
<com.android.calendar.DayView: long getSelectedTimeInMillis()> -> _SOURCE_
<android.provider.CalendarContract$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)> -> _SOURCE_
<android.webkit.WebResourceResponse: java.io.InputStream getData()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingTop()> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: int getRSeqNumber()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getPositionDescription()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String debugDump()> -> _SOURCE_
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()> -> _SOURCE_
<android.preference.Preference: android.os.Bundle getExtras()> -> _SOURCE_
<java.net.HttpRetryException: java.lang.String getLocation()> -> _SOURCE_
<android.view.IInputFilterHost$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeaderList()> -> _SOURCE_
<java.net.URI: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)> -> _SOURCE_
<java.net.URL: java.lang.String getProtocol()> -> _SOURCE_
<org.apache.http.ProtocolVersion: java.lang.Object clone()> -> _SOURCE_
<java.net.Socket: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.android.calendar.CalendarEventModel$ReminderEntry: int getMethod()> -> _SOURCE_
<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getCompressingCollator()> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: byte[] getPhotoByteArray()> -> _SOURCE_
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.CallID: java.lang.String encodeBody()> -> _SOURCE_
<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getInstance(android.content.Context)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> -> _SOURCE_
<com.android.camera.CameraSettings: com.android.camera.PreferenceGroup getPreferenceGroup(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getSubserviceIdentifiers()> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()> -> _SOURCE_
<com.android.providers.contacts.PhotoPriorityResolver: int getPhotoPriority(java.lang.String)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)> -> _SOURCE_
<android.net.rtp.RtpStream: int getSocket()> -> _SOURCE_
<com.android.browser.DataUri: byte[] getData()> -> _SOURCE_
<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> -> _SOURCE_
<java.lang.RuntimePermission: java.lang.String getActions()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()> -> _SOURCE_
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> -> _SOURCE_
<android.widget.Scroller: int getCurrY()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.account.AccountType getAccountType()> -> _SOURCE_
<java.util.jar.Attributes: java.lang.Object clone()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getMinimumIntegerDigits()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getMute()> -> _SOURCE_
<com.android.contacts.model.Contact: android.net.Uri getRequestedUri()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPersistentApplications(int)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: byte[] getEncoded()> -> _SOURCE_
<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getCollectionName()> -> _SOURCE_
<android.view.VelocityTracker: float getYVelocity(int)> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()> android.permission.GET_ACCOUNTS -> _SOURCE_
<com.android.emailcommon.mail.Message: com.android.emailcommon.mail.Flag[] getFlags()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)> -> _SOURCE_
<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()> -> _SOURCE_
<com.android.server.TwilightService$TwilightState: long getTomorrowSunrise()> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer mark()> -> _SOURCE_
<android.text.style.LocaleSpan: java.util.Locale getLocale()> -> _SOURCE_
<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()> -> _SOURCE_
<java.util.Hashtable: java.util.Enumeration elements()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String toString()> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()> -> _SOURCE_
<java.util.TreeSet: boolean isEmpty()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab createNewTab()> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer: com.android.mms.dom.smil.SmilPlayer getPlayer()> -> _SOURCE_
<org.json.JSONStringer: org.json.JSONStringer array()> -> _SOURCE_
<com.android.providers.downloads.StorageManager: com.android.providers.downloads.StorageManager getInstance(android.content.Context)> -> _SOURCE_
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: com.android.inputmethod.latin.RichInputConnection$Range getWordRangeAtCursor(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher getInstance()> -> _SOURCE_
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])> -> _SOURCE_
<android.graphics.Bitmap: int getDensity()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<com.android.vcard.VCardProperty: java.util.List getGroupList()> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String gai_strerror(int)> -> _SOURCE_
<java.util.logging.Logger: java.lang.String getName()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getNativeLibraryPath()> -> _SOURCE_
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo get()> -> _SOURCE_
<libcore.io.MemoryMappedFile: libcore.io.BufferIterator littleEndianIterator()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.Object clone()> -> _SOURCE_
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isClosed()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getFromIndex(java.lang.Object)> -> _SOURCE_
<android.widget.AbsSeekBar: int getThumbOffset()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: int getDefaultPort(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getEncodedQuery()> -> _SOURCE_
<com.android.internal.telephony.ServiceStateTracker: boolean getDesiredPowerState()> -> _SOURCE_
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)> -> _SOURCE_
<com.android.server.am.ActivityStack: android.app.ActivityManager$TaskThumbnails getTaskThumbnailsLocked(com.android.server.am.TaskRecord)> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getParentNode()> -> _SOURCE_
<android.view.IRotationWatcher$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.graphics.Canvas: android.graphics.Matrix getMatrix()> -> _SOURCE_
<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()> -> _SOURCE_
<com.android.camera.ListPreference: java.lang.String getValue()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)> -> _SOURCE_
<android.widget.Editor: android.text.method.WordIterator getWordIterator()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getCount()> -> _SOURCE_
<android.view.InputEvent: android.view.InputDevice getDevice()> -> _SOURCE_
<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getChildWidth(int)> -> _SOURCE_
<android.util.SparseIntArray: int get(int,int)> -> _SOURCE_
<android.widget.ListPopupWindow: android.view.View getSelectedView()> -> _SOURCE_
<android.os.Debug: int getGlobalFreedSize()> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String getNameAndNumber()> -> _SOURCE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getCharacterInstance(java.util.Locale)> -> _SOURCE_
<java.net.HttpURLConnection: int getResponseCode()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection addMetadata(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata)> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> -> _SOURCE_
<com.android.settings.tts.TextToSpeechSettings: android.widget.Checkable getCurrentChecked()> -> _SOURCE_
<java.nio.HeapByteBuffer: float getFloat(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<java.io.ObjectStreamField: char getTypeCode()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListView: int getPositionAt(int)> -> _SOURCE_
<android.view.KeyEvent: android.view.InputEvent copy()> -> _SOURCE_
<java.io.ObjectStreamField: int getOffset()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$EmailActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getCurrentUser()> -> _SOURCE_
<android.app.Instrumentation: android.os.Bundle getBinderCounts()> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_CONTACTS -> _SOURCE_
<org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.entity.BasicHttpEntity: long getContentLength()> -> _SOURCE_
<android.net.NetworkPolicyManager: int getUidPolicy(int)> -> _SOURCE_
<android.text.style.SpellCheckSpan: int getSpanTypeId()> -> _SOURCE_
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte copy()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaMin()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: short getFill()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl$1: float getDur()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getLastAccessedTime()> -> _SOURCE_
<java.net.PasswordAuthentication: java.lang.String getUserName()> -> _SOURCE_
<com.android.internal.telephony.UsimFileHandler: java.lang.String getEFPath(int)> -> _SOURCE_
<org.apache.harmony.security.x509.CRLDistributionPoints$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()> -> _SOURCE_
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: int getLength()> -> _SOURCE_
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> -> _SOURCE_
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getResPackage()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconIndex()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: java.lang.String restoreReplyHtmlWithMessageId(android.content.Context,long)> -> _SOURCE_
<android.hardware.Camera$Parameters: float getVerticalViewAngle()> -> _SOURCE_
<android.app.DownloadManager: int markRowDeleted(long[])> -> _SOURCE_
<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.String debugDump(int)> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getPath()> -> _SOURCE_
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|SYSTEM_SETTINGS
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getReadIndex()> -> _SOURCE_
<android.widget.TextView: int getRightPaddingOffset()> -> _SOURCE_
<com.android.settings.Utils: android.app.Dialog buildGlobalChangeWarningDialog(android.content.Context,int,java.lang.Runnable)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<java.util.Properties: java.util.Set stringPropertyNames()> -> _SOURCE_
<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)> -> _SOURCE_
<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()> -> _SOURCE_
<android.telephony.CellInfo: long getTimeStamp()> -> _SOURCE_
<android.view.MotionEvent$1: android.view.MotionEvent createFromParcel(android.os.Parcel)> -> _SOURCE_
<org.apache.http.auth.AuthScope: java.lang.String getHost()> -> _SOURCE_
<android.content.ContentProvider: android.content.Context getContext()> -> _SOURCE_
<com.android.internal.util.TypedProperties: int getInt(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Oid$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.text.StaticLayout: int getEllipsisCount(int)> -> _SOURCE_
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicHeight()> -> _SOURCE_
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getHost()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter$SuggestionResults: int getTypeCount(int)> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: boolean isEmpty()> -> _SOURCE_
<android.os.HandlerThread: android.os.Looper getLooper()> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: byte[] getFlattenedData()> -> _SOURCE_
<android.net.LocalServerSocket: android.net.LocalSocket accept()> -> _SOURCE_
<android.view.MotionEvent: int getButtonState()> -> _SOURCE_
<android.text.SpannableString: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.Multisets$ElementSet: java.util.Iterator iterator()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()> -> _SOURCE_
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppType AppTypeFromRILInt(int)> -> _SOURCE_
<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: int getBondState()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()> -> _SOURCE_
<com.android.providers.contacts.aggregation.ContactAggregator: android.database.Cursor queryAggregationSuggestions(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],long,int,java.lang.String,java.util.ArrayList)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificatePolicies: java.util.List getPolicyInformations()> -> _SOURCE_
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()> -> _SOURCE_
<java.util.Currency: java.lang.String getSymbol()> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getDrawableResource(android.bluetooth.BluetoothClass)> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getModel()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERT61String: java.lang.String getString()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getFirstChild()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getURI()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()> -> _SOURCE_
<com.google.common.collect.BstMutationRule: com.google.common.collect.BstNodeFactory getNodeFactory()> -> _SOURCE_
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.net.URLConnection$DefaultContentHandler: java.lang.Object getContent(java.net.URLConnection)> -> _SOURCE_
<com.android.systemui.statusbar.phone.QuickSettings: com.android.systemui.statusbar.phone.PhoneStatusBar getService()> -> _SOURCE_
<android.animation.FloatKeyframeSet: float getFloatValue(float)> -> _SOURCE_
<com.android.contacts.ContactsApplication: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> -> _SOURCE_
<com.android.calendar.CalendarController: long getEventId()> -> _SOURCE_
<com.android.mms.ui.UriImage: int getHeight()> -> _SOURCE_
<gov.nist.javax.sip.header.RetryAfter: java.lang.String encodeBody()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarGravity()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()> -> _SOURCE_
<android.telephony.SmsMessage: boolean isCphsMwiMessage()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getContentId()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()> -> _SOURCE_
<android.widget.AdapterView: int getSelectedItemPosition()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams: int getFrequency()> -> _SOURCE_
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String toString()> -> _SOURCE_
<android.filterfw.core.VertexFrame: int[] getInts()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getHeaderFields()> -> _SOURCE_
<java.util.AbstractQueue: java.lang.Object element()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.browser.view.PieItem: float getAnimationAngle()> -> _SOURCE_
<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.RecentTasksLoader getInstance(android.content.Context)> -> _SOURCE_
<com.android.contacts.model.dataitem.SipAddressDataItem: java.lang.String getSipAddress()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.widget.Button getForgetButton()> -> _SOURCE_
<com.android.camera.Thumbnail: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)> -> _SOURCE_
<java.io.FileInputStream: long skip(long)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler getErrorHandler()> -> _SOURCE_
<android.nfc.INdefPushCallback$Stub$Proxy: android.net.Uri[] getUris()> -> _SOURCE_
<android.media.RemoteControlClient: int getRcseId()> -> _SOURCE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getInviteContactActivityClassName()> -> _SOURCE_
<android.view.animation.Animation: int getBackgroundColor()> -> _SOURCE_
<com.android.mms.transaction.TransactionSettings: int getProxyPort()> -> _SOURCE_
<com.android.browser.provider.SnapshotProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Comparator comparator()> -> _SOURCE_
<android.view.KeyCharacterMap: int getKeyboardType()> -> _SOURCE_
<gov.nist.core.NameValueList: java.util.Iterator iterator()> -> _SOURCE_
<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)> -> _SOURCE_
<android.view.View: int getMeasuredHeight()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.Object getApplicationData()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()> -> _SOURCE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.DOMImplementation getDOMImplementation()> -> _SOURCE_
<com.android.phone.CallNotifier: boolean getIsCdmaRedialCall()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPictureFormat()> -> _SOURCE_
<java.util.TreeMap: java.util.Map$Entry firstEntry()> -> _SOURCE_
<android.widget.Spinner$DialogPopup: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<android.os.Debug: int getGlobalAllocCount()> -> _SOURCE_
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()> -> _SOURCE_
<java.security.Signature: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.keyboard.ProximityInfo: com.android.inputmethod.keyboard.Key[] getNearestKeys(int,int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$HashIterator: com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: java.lang.String getContactDisplayName(int)> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.media.MediaRouter$RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)> -> _SOURCE_
<libcore.io.ForwardingOs: int getuid()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment: com.android.contacts.detail.ContactDetailFragment$Listener getListener()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getNotations()> -> _SOURCE_
<android.content.ContentProvider$Transport: android.os.ICancellationSignal createCancellationSignal()> -> _SOURCE_
<com.android.settings.wifi.WifiSettings: int getAccessPointsCount()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)> -> _SOURCE_
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedReaderThreads()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> -> _SOURCE_
<com.android.providers.calendar.CalendarDatabaseHelper: com.android.common.content.SyncStateContentProviderHelper getSyncState()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl$HttpsEngine: java.net.HttpURLConnection getHttpConnectionToCache()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.Multiset$Entry pollFirstEntry()> -> _SOURCE_
<com.android.deskclock.Alarm$DaysOfWeek: int getCoded()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: void getSmscAddress(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|SYSTEM_SETTINGS
<com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentFilename(android.content.Context,long,long)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)> -> _SOURCE_
<android.graphics.Bitmap: int getRowBytes()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.Object clone()> -> _SOURCE_
<android.widget.Editor$EasyEditPopupWindow: int getTextOffset()> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)> -> _SOURCE_
<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)> -> _SOURCE_
<java.util.GregorianCalendar: int getActualMaximum(int)> -> _SOURCE_
<android.telephony.NeighboringCellInfo: int getNetworkType()> -> _SOURCE_
<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()> -> _SOURCE_
<android.view.ViewConfiguration: int getMaximumFlingVelocity()> -> _SOURCE_
<android.net.LocalSocket: int getSoTimeout()> -> _SOURCE_
<gov.nist.javax.sip.stack.DefaultRouter: java.util.ListIterator getNextHops(javax.sip.message.Request)> -> _SOURCE_
<java.security.KeyStoreSpi: java.security.KeyStore$Entry engineGetEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)> -> _SOURCE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)> -> _SOURCE_
<android.view.HardwareRenderer$Gl20Renderer: int[] getConfig(boolean)> -> _SOURCE_
<com.android.contacts.editor.EventFieldEditorView: com.android.contacts.model.account.AccountType$EditType getType()> -> _SOURCE_
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.CDATASection createCDATASection(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: int getPhoneType()> -> _SOURCE_
<java.util.PriorityQueue: java.util.Comparator comparator()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata addNumberFormat(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground()> android.permission.READ_CONTACTS -> _SOURCE_
<com.android.browser.BrowserSettings: int getPageCacheCapacity()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean)> -> _SOURCE_
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)> -> _SOURCE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()> -> _SOURCE_
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: java.lang.String getActionName()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedData()> -> _SOURCE_
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()> -> _SOURCE_
<android.content.ContentProviderResult: java.lang.String toString()> -> _SOURCE_
<android.net.WebAddress: java.lang.String getPath()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidPersistBytes(long)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getZoomRatios()> -> _SOURCE_
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.AccountManagerService getSingleton()> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: java.lang.String getContentType()> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: java.util.Iterator standardIterator()> -> _SOURCE_
<com.android.deskclock.TimePicker: int getHours()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: float getFloat(int)> -> _SOURCE_
<javax.sip.SipFactory: javax.sip.address.AddressFactory createAddressFactory()> -> _SOURCE_
<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getShortcutInputMethodsAndSubtypes()> -> _SOURCE_
<com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)> -> _SOURCE_
<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement nextElement()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()> -> _SOURCE_
<java.util.AbstractCollection: java.lang.Object[] toArray()> -> _SOURCE_
<java.util.regex.Matcher: java.util.regex.Pattern pattern()> -> _SOURCE_
<android.net.BaseNetworkStateTracker: boolean isAvailable()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: short getNodeType()> -> _SOURCE_
<com.android.music.MusicUtils: android.graphics.drawable.Drawable getCachedArtwork(android.content.Context,long,android.graphics.drawable.BitmapDrawable)> -> _SOURCE_
<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)> -> _SOURCE_
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getToTag()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getLabelColumn()> -> _SOURCE_
<libcore.icu.TimeZones: java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()> -> _SOURCE_
<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getAcceptType()> -> _SOURCE_
<com.android.browser.UploadHandler: java.lang.String getFilePath()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: java.lang.String encodeBody()> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.util.Set entrySet()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()> -> _SOURCE_
<org.apache.james.mime4j.field.Field: java.lang.String getRaw()> -> _SOURCE_
<android.text.method.TextKeyListener$NullKeyListener: int getInputType()> -> _SOURCE_
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCount()> -> _SOURCE_
<android.location.ICountryDetector$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableBluetoothRegexs()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getReplacesDialog(gov.nist.javax.sip.header.extensions.ReplacesHeader)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIK()> -> _SOURCE_
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()> -> _SOURCE_
<android.view.View: int getAccessibilityCursorPosition()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAndroidDataDir()> -> _SOURCE_
<android.app.BackStackRecord: int getBreadCrumbTitleRes()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCountryIso()> -> _SOURCE_
<android.view.KeyEvent$1: android.view.KeyEvent createFromParcel(android.os.Parcel)> -> _SOURCE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)> -> _SOURCE_
<com.google.common.collect.TransformedImmutableList: java.lang.Object get(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isOutputShutdown()> -> _SOURCE_
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<com.android.browser.view.PieItem: int getOuterRadius()> -> _SOURCE_
<android.view.Display: int getRotation()> -> _SOURCE_
<android.text.DynamicLayout: int[] getBlockEndLines()> -> _SOURCE_
<com.android.exchange.adapter.ItemOperationsParser: int getStatusCode()> -> _SOURCE_
<com.google.common.collect.Maps$Values: boolean isEmpty()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: long getItemId(int)> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: java.lang.String toString()> -> _SOURCE_
<android.widget.TextView: java.lang.String getPrivateImeOptions()> -> _SOURCE_
<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)> -> _SOURCE_
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()> -> _SOURCE_
<android.content.ContentProvider$Transport: java.lang.String getProviderName()> -> _SOURCE_
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> -> _SOURCE_
<android.database.sqlite.SQLiteConnection: int getConnectionId()> -> _SOURCE_
<gov.nist.javax.sip.header.MaxForwards: java.lang.String encodeBody()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality()> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification$NotificationInfo: java.lang.CharSequence formatPictureMessage(android.content.Context)> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()> -> _SOURCE_
<android.telephony.SmsMessage: boolean isStatusReportMessage()> -> _SOURCE_
<com.android.contacts.util.AccountsListAdapter: int getCount()> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate: byte[] getSignatureValue()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.Integer getFirstRowInt(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Integer)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder getInstance()> -> _SOURCE_
<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.io.ObjectInputStream: java.lang.String readUTF()> -> _SOURCE_
<com.android.phone.DTMFTwelveKeyDialer$DTMFKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage$MessageLevel messageLevel()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserParam()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray,float)> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)> -> _SOURCE_
<com.google.common.collect.Ordering: java.util.List greatestOf(java.lang.Iterable,int)> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.Context)> -> _SOURCE_
<android.widget.SearchView: java.lang.CharSequence getQuery()> -> _SOURCE_
<java.util.MapEntry: java.lang.Object getKey()> -> _SOURCE_
<java.lang.Double: byte byteValue()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> -> _SOURCE_
<javax.crypto.Mac: int getMacLength()> -> _SOURCE_
<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getCapture()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getForegroundCall()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()> -> _SOURCE_
<android.widget.CalendarView$WeekView: java.util.Calendar getFirstDay()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getIconRes()> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String)> -> _SOURCE_
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()> -> _SOURCE_
<android.database.AbstractWindowedCursor: double getDouble(int)> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()> -> _SOURCE_
<android.app.Fragment: android.view.View getView()> -> _SOURCE_
<com.android.camera.Thumbnail: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$3: java.util.Iterator iterator()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: long getItemId(int)> -> _SOURCE_
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String byteStringNoComma()> -> _SOURCE_
<java.util.jar.Attributes: java.util.Set entrySet()> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getDirtyRawContactIds()> -> _SOURCE_
<java.util.TimeZone: java.lang.String getID()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getApplicationIdentifiers()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERApplicationSpecificParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.webkit.WebViewCore: android.content.Context getContext()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker$SavedState: int getYear()> -> _SOURCE_
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String getTimestamp()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()> -> _SOURCE_
<android.os.Parcel: java.io.Serializable readSerializable()> -> _SOURCE_
<android.telephony.SmsMessage: byte[] getUserData()> -> _SOURCE_
<gov.nist.core.Host: java.lang.String getIpAddress()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()> -> _SOURCE_
<com.android.contacts.list.ContactBrowseListFragment: com.android.contacts.list.ContactListFilter getFilter()> -> _SOURCE_
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri(int)> -> _SOURCE_
<android.view.WindowOrientationListener: int getProposedRotation()> -> _SOURCE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getEncoded()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getAccountTypeString()> -> _SOURCE_
<android.service.wallpaper.IWallpaperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLContextImpl: javax.net.ssl.SSLSessionContext engineGetServerSessionContext()> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()> -> _SOURCE_
<java.net.DatagramPacket: int getPort()> -> _SOURCE_
<android.widget.Spinner$DropdownPopup: java.lang.CharSequence getHintText()> -> _SOURCE_
<android.webkit.HTML5VideoViewProxy$VideoPlayer: int getCurrentPosition()> -> _SOURCE_
<android.net.sip.SipProfile: boolean getSendKeepAlive()> -> _SOURCE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> -> _SOURCE_
<com.android.internal.telephony.SMSDispatcher: int getPremiumSmsPermission(java.lang.String)> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()> -> _SOURCE_
<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)> -> _SOURCE_
<com.android.internal.telephony.IccFileHandler: java.lang.String getCommonIccEFPath(int)> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: java.lang.String getMarker()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String getFirstRowString(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)> -> _SOURCE_
<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)> -> _SOURCE_
<android.content.pm.UserInfo: java.lang.String toString()> -> _SOURCE_
<com.android.settings.accounts.AuthenticatorHelper: java.lang.CharSequence getLabelForType(android.content.Context,java.lang.String)> -> _SOURCE_
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)> -> _SOURCE_
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)> -> _SOURCE_
<java.util.TreeMap: java.util.NavigableMap descendingMap()> -> _SOURCE_
<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalSize(int,int)> -> _SOURCE_
<com.android.emailcommon.utility.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: long getEventId()> -> _SOURCE_
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context)> -> _SOURCE_
<android.text.BoringLayout: int getEllipsisStart(int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ExtensionHeader createExtensionHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()> -> _SOURCE_
<com.android.calendar.TimezoneAdapter: java.lang.CharSequence[][] getAllTimezones()> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getBeginIndex()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)> -> _SOURCE_
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.os.StatFs: int getBlockCount()> -> _SOURCE_
<android.content.ClipData$Item: java.lang.String toString()> -> _SOURCE_
<android.preference.Preference: java.lang.String getFragment()> -> _SOURCE_
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey()> -> _SOURCE_
<android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)> -> _SOURCE_
<android.graphics.Bitmap: int getByteCount()> -> _SOURCE_
<com.android.browser.SnapshotTab: boolean isBookmarkedSite()> -> _SOURCE_
<com.android.providers.contacts.ContactLookupKey: java.util.ArrayList parse(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.gsm.SpnOverride: java.lang.String getSpn(java.lang.String)> -> _SOURCE_
<android.media.AudioService: int getVibrateSetting(int)> -> _SOURCE_
<com.android.exchange.ExchangeService$AccountList: com.android.emailcommon.provider.Account getByName(java.lang.String)> -> _SOURCE_
<android.content.pm.IPackageStatsObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)> -> _SOURCE_
<android.telephony.SmsCbEtwsInfo: java.lang.String toString()> -> _SOURCE_
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()> -> _SOURCE_
<android.app.Fragment: java.lang.String getString(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getData()> -> _SOURCE_
<android.content.IClipboard$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionKey()> -> _SOURCE_
<android.location.GeocoderParams: java.lang.String getClientPackage()> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLContextImpl: javax.net.ssl.SSLEngine engineCreateSSLEngine()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoWriteTimeout()> -> _SOURCE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: int getVoiceMessageCount()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()> -> _SOURCE_
<com.google.common.collect.AbstractIterator: java.lang.Object peek()> -> _SOURCE_
<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedThreads()> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: java.lang.String getDefaultUserAgent(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.telephony.CellLocation getCellLocation()> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.net.IThrottleManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()> -> _SOURCE_
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()> -> _SOURCE_
<android.telephony.SmsCbMessage: int getServiceCategory()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.DctConstants$Activity getActivity()> -> _SOURCE_
<com.android.browser.BrowserActivity: com.android.browser.Controller getController()> -> _SOURCE_
<com.android.mms.dom.smil.SmilLayoutElementImpl: org.w3c.dom.NodeList getRegions()> -> _SOURCE_
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccFileHandler getIccFileHandler()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BEROctetString: java.util.Enumeration getObjects()> -> _SOURCE_
<android.widget.ScrollView: float getBottomFadingEdgeStrength()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker$TxRxSum: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: boolean getAnyDataEnabled()> -> _SOURCE_
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.ApnSetting fetchDunApn()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: java.lang.String GetImage()> -> _SOURCE_
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)> -> _SOURCE_
<com.android.settings.Utils: java.lang.String getBatteryStatus(android.content.res.Resources,android.content.Intent)> -> _SOURCE_
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: java.util.concurrent.locks.Condition newCondition()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getUseClientMode()> -> _SOURCE_
<com.android.emailcommon.service.ServiceProxy: int getTimeout()> -> _SOURCE_
<java.net.InetAddress: java.lang.String getCanonicalHostName()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()> -> _SOURCE_
<android.view.View$12: java.lang.Float get(android.view.View)> -> _SOURCE_
<android.os.StrictMode$VmPolicy: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: java.lang.Class getClass(java.lang.String)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getQueuedThreads()> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String toString()> -> _SOURCE_
<java.net.URI: java.lang.String getRawSchemeSpecificPart()> -> _SOURCE_
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.os.IBinder getFocusedWindowToken()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getParameterNames()> -> _SOURCE_
<java.util.logging.Logger: boolean getUseParentHandlers()> -> _SOURCE_
<java.net.URI: java.lang.String getScheme()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: boolean getMaxBiometricUnlockAttemptsReached()> -> _SOURCE_
<android.view.KeyEvent: long getDownTime()> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String,long)> -> _SOURCE_
<android.view.GLES20DisplayList: int getNativeDisplayList()> -> _SOURCE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<android.content.res.Resources: int getInteger(int)> -> _SOURCE_
<com.android.browser.NavScreen$TabAdapter: int getCount()> -> _SOURCE_
<org.apache.http.message.BasicStatusLine: java.lang.String toString()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AllowEventsHeader createAllowEventsHeader(java.lang.String)> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.Class getClassFromName(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean)> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String getNumber()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearNationalNumber()> -> _SOURCE_
<java.nio.ShortBuffer: int hashCode()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getAcceptEncoding()> -> _SOURCE_
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()> -> _SOURCE_
<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.rtp.AudioGroup getAudioGroup()> -> _SOURCE_
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getOfficeLocation()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> -> _SOURCE_
<java.security.MessageDigest: byte[] digest()> -> _SOURCE_
<android.database.CursorWrapper: boolean isLast()> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: android.database.Cursor getCursor()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getNthPreviousWord(java.lang.CharSequence,java.lang.String,int)> -> _SOURCE_
<com.android.internal.os.BinderInternal: long getLastGcTime()> -> _SOURCE_
<com.android.settings.accounts.SyncSettings: android.preference.PreferenceScreen addPreferencesForType(java.lang.String,android.preference.PreferenceScreen)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()> -> _SOURCE_
<android.animation.AnimatorSet: long getStartDelay()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getSipDomain()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.lang.String getDisplayName()> -> _SOURCE_
<android.widget.CalendarView: long getMaxDate()> -> _SOURCE_
<java.io.FilterReader: int read(char[],int,int)> -> _SOURCE_
<android.view.View$MeasureSpec: int getSize(int)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: int getMessageCountByMailboxType(android.content.Context,int)> -> _SOURCE_
<android.media.AudioService$ScoClient: int getCount()> -> _SOURCE_
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()> -> _SOURCE_
<com.android.contacts.ContactPhotoManagerImpl$Request: int getRequestedExtent()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])> -> _SOURCE_
<android.content.ContentProvider$Transport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)> -> _SOURCE_
<com.android.contacts.detail.PhotoSelectionHandler: long getWritableEntityId()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.DirectoryPartition createDefaultDirectoryPartition()> -> _SOURCE_
<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: float getPoint()> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: java.util.Collection getContactIds()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: int getInviteContactActionResId()> -> _SOURCE_
<android.net.http.Connection: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getBackgroundCalls()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getPkeyAlias()> -> _SOURCE_
<android.media.MediaPlayer: android.os.Parcel getParcelParameter(int)> -> _SOURCE_
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)> -> _SOURCE_
<java.lang.Character: int getType(int)> -> _SOURCE_
<gov.nist.core.NameValueList: java.util.Iterator getNames()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus$1: android.hardware.display.WifiDisplayStatus createFromParcel(android.os.Parcel)> -> _SOURCE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getSentenceInstance(java.util.Locale)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)> -> _SOURCE_
<com.android.browser.TabBar: int getTabCount()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingLeft()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity: com.android.contacts.list.ContactBrowseListFragment getListFragment()> -> _SOURCE_
<com.android.server.wm.MagnificationSpec: java.lang.String toString()> -> _SOURCE_
<org.apache.james.mime4j.field.DateTimeField: java.util.Date getDate()> -> _SOURCE_
<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer getBuffer()> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.util.ArrayList getSortedDataKinds()> -> _SOURCE_
<java.io.ObjectInputStream: long readLong()> -> _SOURCE_
<android.location.Criteria: int getBearingAccuracy()> -> _SOURCE_
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptLanguage: float getQValue()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getMessageContent()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: java.util.List getProfiles()> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.accounts.Account getDefaultAccount()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()> -> _SOURCE_
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.Dialog getNewDialog(javax.sip.Transaction)> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getNextSibling()> -> _SOURCE_
<android.app.LoadedApk: java.lang.String getAppDir()> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: int getFrequency()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> -> _SOURCE_
<android.content.res.TypedArray: int getColor(int,int)> -> _SOURCE_
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getString(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPager()> -> _SOURCE_
<org.apache.http.message.HeaderGroup: java.lang.Object clone()> -> _SOURCE_
<java.nio.SocketChannelImpl: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<com.android.browser.PieControl$TabAdapter: com.android.browser.Tab getItem(int)> -> _SOURCE_
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getMeid()> -> _SOURCE_
<com.android.mms.MmsApp: com.android.mms.MmsApp getApplication()> -> _SOURCE_
<gov.nist.javax.sip.header.CallID: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getCustomProtocol()> -> _SOURCE_
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)> -> _SOURCE_
<java.util.Calendar: int get(int)> -> _SOURCE_
<com.android.inputmethod.latin.DictionaryCollection: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<com.android.music.MusicUtils: long[] getSongListForArtist(android.content.Context,long)> -> _SOURCE_
<android.filterfw.core.FinalPort: java.lang.String toString()> -> _SOURCE_
<java.security.spec.EllipticCurve: java.math.BigInteger getB()> -> _SOURCE_
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: int getInt(int)> -> _SOURCE_
<java.security.CodeSource: java.net.URL getLocation()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getPackageUid(java.lang.String,int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getIntlNumberFormat(int)> -> _SOURCE_
<android.widget.TimePicker: java.lang.Integer getCurrentHour()> -> _SOURCE_
<java.io.HistoricalCharsetNames: java.lang.String get(java.nio.charset.Charset)> -> _SOURCE_
<android.preference.Preference: java.lang.String getKey()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.String getName()> -> _SOURCE_
<android.text.style.AbsoluteSizeSpan: int getSize()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()> -> _SOURCE_
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()> -> _SOURCE_
<com.google.common.io.ByteStreams: byte[] toByteArray(java.io.InputStream)> -> _SOURCE_
<android.view.View: int getNextFocusUpId()> -> _SOURCE_
<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()> -> _SOURCE_
<com.android.server.WallpaperManagerService: int getHeightHint()> -> _SOURCE_
<com.android.browser.Preloader: com.android.browser.PreloadedTabControl getPreloadedTab(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: android.os.Handler getWorkerHandler()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getTitle()> -> _SOURCE_
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<libcore.net.http.ResponseHeaders: libcore.net.http.RawHeaders getHeaders()> -> _SOURCE_
<gov.nist.javax.sip.header.Expires: java.lang.String encodeBody()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getCdmaMin()> -> _SOURCE_
<com.android.internal.view.WindowManagerPolicyThread: java.lang.Thread getThread()> -> _SOURCE_
<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadCompleteLocked()> -> _SOURCE_
<com.android.server.am.AppErrorResult: int get()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: java.lang.Object[] getSections()> -> _SOURCE_
<android.net.LinkProperties$CompareResult: java.lang.String toString()> -> _SOURCE_
<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()> -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationVersion()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()> -> _SOURCE_
<java.nio.DoubleArrayBuffer: double get(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.ASN1Primitive getPublicKey()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService$ActiveAdmin: int getUid()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock readLock()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> -> _SOURCE_
<com.android.settings.wifi.WifiSettings: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> -> _SOURCE_
<com.google.common.collect.ImmutableSet$TransformedImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.net.URI getUri()> -> _SOURCE_
<android.nfc.NdefRecord: int getByteLength()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<org.apache.http.entity.InputStreamEntity: long getContentLength()> -> _SOURCE_
<android.support.v4.view.ViewCompat$JBViewCompatImpl: int getImportantForAccessibility(android.view.View)> -> _SOURCE_
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> -> _SOURCE_
<android.widget.CompoundButton: int getCompoundPaddingLeft()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager$ZInterpolator: float getInterpolation(float)> -> _SOURCE_
<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.browser.homepages.Template$HashMapEntityData: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)> -> _SOURCE_
<android.view.View: int getScrollBarStyle()> -> _SOURCE_
<android.filterfw.core.AsyncRunner: java.lang.Exception getError()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: long getAudioId()> -> _SOURCE_
<java.util.Properties: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: java.lang.String getQueryString()> -> _SOURCE_
<android.os.Messenger: android.os.IBinder getBinder()> -> _SOURCE_
<android.app.Fragment: java.lang.String toString()> -> _SOURCE_
<android.view.OrientationEventListener: android.view.OrientationListener access$000(android.view.OrientationEventListener)> -> _SOURCE_
<java.lang.BootClassLoader: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)> -> _SOURCE_
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean isDataConnectivityPossible()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getLabel()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getDoubleTapZoom()> -> _SOURCE_
<android.view.View: int getPaddingBottom()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getTouchIconUrl()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getAcceptRanges()> -> _SOURCE_
<gov.nist.javax.sip.header.TimeStamp: long getTime()> -> _SOURCE_
<com.android.server.power.DisplayPowerState: int getScreenBrightness()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.TimeList getEnd()> -> _SOURCE_
<android.graphics.RectF: java.lang.String toString()> -> _SOURCE_
<java.security.spec.EllipticCurve: byte[] getSeed()> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getOrganizationName()> -> _SOURCE_
<java.net.Inet6Address: int getScopeId()> -> _SOURCE_
<android.webkit.WebIconDatabaseClassic: android.webkit.WebIconDatabaseClassic getInstance()> -> _SOURCE_
<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()> -> _SOURCE_
<com.android.emailcommon.mail.Message: com.android.emailcommon.mail.Folder getFolder()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String)> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.util.Date getExpires()> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.telephony.RILRequest: java.lang.String serialString()> -> _SOURCE_
<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getKeyHeight()> -> _SOURCE_
<android.webkit.WebHistoryItem: int getId()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport$Context: java.util.Enumeration getDeclaredPrefixes()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningTasks(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()> -> _SOURCE_
<android.app.Fragment: java.lang.String getTag()> -> _SOURCE_
<java.security.Signature: byte[] sign()> -> _SOURCE_
<android.location.Address: java.lang.String getPremises()> -> _SOURCE_
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()> -> _SOURCE_
<com.google.common.collect.Cut: java.lang.Comparable endpoint()> -> _SOURCE_
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getPageForView(android.view.View)> -> _SOURCE_
<java.net.SocketImpl: int getPort()> -> _SOURCE_
<com.google.common.collect.Maps$AbstractFilteredMap: boolean isEmpty()> -> _SOURCE_
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<libcore.icu.NativeBreakIterator: java.text.CharacterIterator getText()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> -> _SOURCE_
<com.android.mms.ui.UriImage: java.lang.String getSrc()> -> _SOURCE_
<com.android.exchange.ExchangeService: java.lang.String getEasAccountSelector()> -> _SOURCE_
<com.android.contacts.preference.ContactsPreferences: int getDefaultSortOrder()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)> -> _SOURCE_
<com.android.ex.chips.Queries$Query: android.net.Uri getContentFilterUri()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getCount()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getPeerHostName()> -> _SOURCE_
<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()> -> _SOURCE_
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: boolean isHeldByCurrentThread()> -> _SOURCE_
<android.content.res.TypedArray: int getIndexCount()> -> _SOURCE_
<android.view.KeyEvent: int getKeyCode()> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> android.permission.WRITE_CONTACTS -> _SOURCE_|CONTACT_INFORMATION
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)> -> _SOURCE_
<java.security.cert.CRL: java.lang.String getType()> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getExtraInfo()> -> _SOURCE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getTarget()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse getLastResponse()> -> _SOURCE_
<com.android.internal.policy.impl.IconUtilities: android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)> -> _SOURCE_
<java.nio.SocketChannelImpl: java.io.FileDescriptor getFD()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: double getDouble(int)> -> _SOURCE_
<java.text.RuleBasedCollator: java.lang.String getRules()> -> _SOURCE_
<java.util.AbstractMap: java.lang.String toString()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getImList()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.Menu getMenu()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl$1: org.w3c.dom.NodeList getTimeChildren()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList()> -> _SOURCE_
<gov.nist.javax.sip.header.ReplyTo: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getLocalStoreUri(android.content.Context)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getLength()> -> _SOURCE_
<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> -> _SOURCE_
<javax.net.ssl.SSLContext: java.lang.String getProtocol()> -> _SOURCE_
<com.google.common.collect.TreeMultiset$LiveEntry: int getCount()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getCallId()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.util.LinkedList getMessageAsEncodedStrings()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> android.permission.READ_SYNC_STATS -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getHost()> -> _SOURCE_
<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] engineGenerateSeed(int)> -> _SOURCE_
<android.widget.TextView$CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)> -> _SOURCE_
<gov.nist.core.HostPort: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedCollection: java.util.Collection getDelegate()> -> _SOURCE_
<com.android.vcard.VCardEntry$NoteData: boolean isEmpty()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter: int getAdjustedFullNameStyle(int)> -> _SOURCE_
<com.android.phone.PhoneUtils: android.net.Uri getProviderGatewayUri(android.content.Intent)> -> _SOURCE_
<java.nio.SocketChannelImpl$SocketAdapter: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.webkit.WebSettings: boolean getPluginsEnabled()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebSettings getSettings()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.app.IProcessObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getNid()> -> _SOURCE_
<android.content.Intent: android.content.ClipData getClipData()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: int getCount()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent getContent(android.database.Cursor,java.lang.Class)> -> _SOURCE_
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()> -> _SOURCE_
<java.lang.Float: float floatValue()> -> _SOURCE_
<android.os.AsyncTask: java.util.concurrent.atomic.AtomicBoolean access$300(android.os.AsyncTask)> -> _SOURCE_
<com.android.vcard.VCardEntry$WebsiteData: java.lang.String toString()> -> _SOURCE_
<com.android.settings.wifi.WifiSettings$Multimap: java.util.List getAll(java.lang.Object)> -> _SOURCE_
<com.android.internal.database.SortCursor: int getInt(int)> -> _SOURCE_
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)> -> _SOURCE_
<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation$Cache getInstance()> -> _SOURCE_
<android.content.Intent: java.lang.String getPackage()> -> _SOURCE_
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()> -> _SOURCE_
<android.os.UserHandle: int getIdentifier()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)> -> _SOURCE_
<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)> -> _SOURCE_
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: float getParameterAsFloat(java.lang.String)> -> _SOURCE_
<java.util.TreeMap: java.util.Set keySet()> -> _SOURCE_
<com.google.android.mms.ContentType: java.util.ArrayList getAudioTypes()> -> _SOURCE_
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCE_
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)> -> _SOURCE_
<android.preference.RingtonePreference: boolean getShowDefault()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getAltDisplayName()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pProvDiscEvent: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableEntry: java.lang.Object getKey()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: java.lang.Object get()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.google.common.collect.Lists$OnePlusArrayList: java.lang.Object get(int)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getLocation()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.io.ObjectStreamField: java.lang.String getName()> -> _SOURCE_
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice getDevice(int)> -> _SOURCE_
<com.android.mms.model.SlideModel: com.android.mms.model.TextModel getText()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributePrefix(int)> -> _SOURCE_
<android.view.KeyEvent: int getModifierMetaStateMask()> -> _SOURCE_
<android.text.Layout: int getEllipsizedWidth()> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String encodeBody()> -> _SOURCE_
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<com.android.mms.dom.NodeListImpl: int getLength()> -> _SOURCE_
<java.util.Formatter$FormatToken: char getDateSuffix()> -> _SOURCE_
<android.app.DownloadManager$CursorTranslator: java.lang.String getString(int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
<com.android.internal.util.StateMachine: android.os.Handler getHandler()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: boolean getVoiceCallForwardingFlag()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()> -> _SOURCE_
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: int getHelpResource()> -> _SOURCE_
<java.text.DateFormat$Field: int getCalendarField()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getAsLong(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset descendingMultiset()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragmentCarousel: int getCurrentPage()> -> _SOURCE_
<gov.nist.javax.sip.header.CSeq: java.lang.String encode()> -> _SOURCE_
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()> -> _SOURCE_
<android.widget.SearchView: java.lang.CharSequence getQueryHint()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: java.lang.String getAlias()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERNumericString: java.lang.String getString()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.net.Proxy getProxy()> -> _SOURCE_
<javax.xml.validation.Validator: boolean getFeature(java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: java.lang.String namespace()> -> _SOURCE_
<java.util.Hashtable: java.util.Enumeration keys()> -> _SOURCE_
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> -> _SOURCE_
<java.net.Socket: int getLocalPort()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getHeaderItemsNumber(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()> -> _SOURCE_
<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailTag(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.NicknameDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.app.TaskStackBuilder: int getIntentCount()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getFixedLine()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1: java.lang.Float get(com.android.internal.policy.impl.keyguard.SlidingChallengeLayout)> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchEnabled()> -> _SOURCE_
<com.android.camera.ui.AbstractIndicatorButton: com.android.camera.ui.AbstractSettingPopup getPopupWindow()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)> -> _SOURCE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] getEncoded()> -> _SOURCE_
<com.android.emailcommon.service.AccountServiceProxy: int getAccountColor(long)> -> _SOURCE_
<com.android.vcard.VCardEntry$WebsiteData: boolean isEmpty()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamValues()> -> _SOURCE_
<com.android.emailcommon.TrafficFlags: int getAttachmentFlags(android.content.Context,com.android.emailcommon.provider.Account)> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: int getPartIndex(com.google.android.mms.pdu.PduPart)> -> _SOURCE_
<com.android.contacts.vcard.NotificationImportExportListener: android.app.Notification constructProgressNotification(android.content.Context,int,java.lang.String,java.lang.String,int,java.lang.String,int,int)> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action: int getMessageId()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: int getIconResId()> -> _SOURCE_
<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.net.SocketAddress obtainLocalAddress(java.net.InetAddress,int,java.net.InetAddress,int)> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)> -> _SOURCE_
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader get(int)> -> _SOURCE_
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledOverscrollDistance()> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICIDGeneratedAt()> -> _SOURCE_
<android.media.IAudioRoutesObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter$CursorSource: int getCount()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: java.util.HashSet getDisabledComponents(int)> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()> -> _SOURCE_
<org.apache.harmony.xml.dom.CDATASectionImpl: java.lang.String getNodeName()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> -> _SOURCE_
<com.android.internal.telephony.IccSmsInterfaceManager: java.util.ArrayList buildValidRawData(java.util.ArrayList)> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()> -> _SOURCE_
<java.util.Scanner: java.util.Scanner reset()> -> _SOURCE_
<android.os.IMessenger$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccFileHandler getIccFileHandler()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()> -> _SOURCE_
<android.view.View: float getScaleX()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getTriState(android.content.Context)> -> _SOURCE_
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getItemAtIndex(int)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getEndIndex()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getSearchEngineName()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.text.SpannedString: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationTitle()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> -> _SOURCE_
<android.widget.TextView: boolean getDefaultEditable()> -> _SOURCE_
<java.nio.DoubleToByteBufferAdapter: double get()> -> _SOURCE_
<com.android.browser.PieControl: com.android.browser.view.PieItem makeFiller()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)> -> _SOURCE_
<com.android.browser.NavScreen: float getToolbarHeight()> -> _SOURCE_
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toMicros(long)> -> _SOURCE_
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()> -> _SOURCE_
<com.android.settings.wifi.AccessPoint: android.net.wifi.WifiConfiguration getConfig()> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toMillis(long)> -> _SOURCE_
<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledSingleShiftTables()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: java.lang.String escapeSearchToken(java.lang.String)> -> _SOURCE_
<java.util.Scanner: java.util.regex.Pattern delimiter()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: boolean getXmlStandalone()> -> _SOURCE_
<android.app.SearchableInfo: int getSuggestThreshold()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AcceptEncodingHeader createAcceptEncodingHeader(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.AccountWithDataSet: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: int size()> -> _SOURCE_
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.lang.String toString()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getPassword()> -> _SOURCE_
<android.service.wallpaper.IWallpaperConnection$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.content.res.Resources: java.lang.String[] getStringArray(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection getConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: int get(java.lang.String,int)> -> _SOURCE_
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.telephony.SmsMessage: int getProtocolIdentifier()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: float getDefaultKeyWidth()> -> _SOURCE_
<javax.sip.SipFactory: javax.sip.SipFactory getInstance()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getQueueLength()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: long getEndMillis()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgOID()> -> _SOURCE_
<com.android.providers.calendar.MetaData: com.android.providers.calendar.MetaData$Fields getFields()> -> _SOURCE_
<gov.nist.javax.sip.header.Warning: java.lang.String getText()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskWrites()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.inputmethod.latin.Dictionary: int getFrequency(java.lang.CharSequence)> -> _SOURCE_
<java.net.Socket: boolean getTcpNoDelay()> -> _SOURCE_
<android.content.BroadcastReceiver: boolean getAbortBroadcast()> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.GeneralNames getAuthorityCertIssuer()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getNeedClientAuth()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()> -> _SOURCE_
<gov.nist.javax.sip.parser.Pipeline$Buffer: int getNextByte()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> -> _SOURCE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()> -> _SOURCE_
<com.android.inputmethod.latin.InputAttributes: java.lang.String toString()> -> _SOURCE_
<android.os.Debug: int getGlobalAllocSize()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getAttributeNames()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()> -> _SOURCE_
<com.android.server.DeviceStorageMonitorService: long getMemoryLowThreshold()> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: com.android.calendar.agenda.AgendaAdapter$ViewHolder getSelectedViewHolder()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: int getItemViewType(int)> -> _SOURCE_
<android.preference.Preference: android.os.Bundle peekExtras()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()> -> _SOURCE_
<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.ISipSession createSession(android.net.sip.ISipSessionListener)> -> _SOURCE_
<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncoded()> -> _SOURCE_
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsUidDetail(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.RelationDataItem: int getType()> -> _SOURCE_
<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getControl(java.util.List)> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()> -> _SOURCE_
<android.widget.ListView: int getHeaderViewsCount()> -> _SOURCE_
<com.android.server.input.PersistentDataStore: java.lang.String getCurrentKeyboardLayout(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: android.content.ContentValues toContentValues()> -> _SOURCE_
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getRemoteAddress()> -> _SOURCE_
<com.android.exchange.AbstractSyncService: java.lang.Object getSynchronizer()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: java.lang.Object[] getHashes()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getIsdnSubAddress()> -> _SOURCE_
<com.android.server.am.ActivityRecord$Token: long getKeyDispatchingTimeout()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: int getMimeEntriesCount(java.lang.String,boolean)> -> _SOURCE_
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.MailboxList flatten()> -> _SOURCE_
<android.content.ComponentName: android.content.ComponentName clone()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String getString(char)> -> _SOURCE_
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()> -> _SOURCE_
<android.content.ContentProvider: java.lang.String getWritePermission()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getCallWaiting(android.os.Message)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getReceiveBufferSize()> -> _SOURCE_
<com.android.contacts.group.GroupDetailFragment: long getGroupId()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint64()> -> _SOURCE_
<android.app.Fragment: android.os.Bundle getArguments()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: int getCount()> -> _SOURCE_
<android.widget.NumberPicker: float getTopFadingEdgeStrength()> -> _SOURCE_
<android.widget.TextView$Marquee: float getMaxFadeScroll()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.lang.String encode()> -> _SOURCE_
<android.media.AudioSystem: int getNumStreamTypes()> -> _SOURCE_
<org.apache.http.auth.AuthScope: java.lang.String getRealm()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)> -> _SOURCE_
<gov.nist.javax.sip.message.ContentImpl: java.lang.Object getContent()> -> _SOURCE_
<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getChildlen()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()> -> _SOURCE_
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> -> _SOURCE_
<android.security.IKeyChainAliasCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getUaProfTagName()> -> _SOURCE_
<java.net.MulticastSocket: byte getTTL()> -> _SOURCE_
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)> -> _SOURCE_
<android.graphics.Bitmap: int getPixel(int,int)> -> _SOURCE_
<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()> -> _SOURCE_
<java.util.EnumMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.list.PhoneNumberListAdapter: java.lang.String getContactDisplayName(int)> -> _SOURCE_
<java.util.LinkedHashMap: java.util.Iterator newValueIterator()> -> _SOURCE_
<com.android.contacts.editor.RawContactReadOnlyEditorView: long getRawContactId()> -> _SOURCE_
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int hashCode()> -> _SOURCE_
<com.android.server.location.MockProvider: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: double getDouble(int)> -> _SOURCE_
<com.android.internal.policy.PolicyManager: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceSvn()> -> _SOURCE_
<org.apache.james.mime4j.field.Field: org.apache.james.mime4j.field.DefaultFieldParser getParser()> -> _SOURCE_
<android.location.Address: java.lang.String getLocality()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: int getDisplayOptions()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<javax.crypto.spec.PBEKeySpec: char[] getPassword()> -> _SOURCE_
<com.android.contacts.vcard.ProcessorBase: java.lang.Object get()> -> _SOURCE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getRequestCount()> -> _SOURCE_
<com.android.internal.widget.PasswordEntryKeyboard: boolean isShifted()> -> _SOURCE_
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)> -> _SOURCE_
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<java.io.EmulatedFields: int get(java.lang.String,int)> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getMode()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionMethod()> -> _SOURCE_
<org.apache.harmony.security.x509.InvalidityDate: byte[] getEncoded()> -> _SOURCE_
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<java.util.BitSet: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.editor.AggregationSuggestionEngine$Suggestion: java.lang.String toString()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.os.IPermissionController$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMultipart: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<org.apache.james.mime4j.field.address.DomainList: java.lang.String toRouteString()> -> _SOURCE_
<libcore.io.ForwardingOs: java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress)> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getSystemId()> -> _SOURCE_
<com.android.systemui.statusbar.GestureRecorder$Gesture: java.lang.String toJson()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectAll()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getModifiers()> -> _SOURCE_
<com.android.browser.BrowserSettings: long getLastRecovered()> -> _SOURCE_
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.Element getDocumentElement()> -> _SOURCE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)> -> _SOURCE_
<com.android.vcard.VCardEntry$AndroidCustomData: java.lang.String getMimeType()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getVendorId()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String getMessage()> -> _SOURCE_
<android.widget.AbsListView: int getLeftPaddingOffset()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getStatus()> -> _SOURCE_
<java.io.ObjectStreamClass: long getSerialVersionUID()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.Multiset$Entry firstEntry()> -> _SOURCE_
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getCc()> -> _SOURCE_
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)> -> _SOURCE_
<com.android.deskclock.RepeatPreference: com.android.deskclock.Alarm$DaysOfWeek getDaysOfWeek()> -> _SOURCE_
<com.android.browser.Tab: com.android.browser.Tab getParent()> -> _SOURCE_
<org.apache.harmony.xml.dom.CommentImpl: short getNodeType()> -> _SOURCE_
<android.view.MotionEvent: float getRawX()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: int getMailboxType(android.content.Context,long)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERVisibleString: com.android.org.bouncycastle.asn1.DERVisibleString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getJpegQuality()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)> -> _SOURCE_
<com.android.emailcommon.utility.Utility$3: java.lang.Long get(android.database.Cursor,int)> -> _SOURCE_
<android.media.AudioSystem: java.lang.String getDeviceName(int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: long getHoldDurationMillis()> -> _SOURCE_
<android.speech.tts.ITextToSpeechService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleY()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getInputEncoding()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPort()> -> _SOURCE_
<com.android.browser.SnapshotTab: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator()> -> _SOURCE_
<java.util.concurrent.FutureTask: java.lang.Object get()> -> _SOURCE_
<java.sql.Date: int getMinutes()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud$Point)> -> _SOURCE_
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristics$TriState access$100(int)> -> _SOURCE_
<android.app.ContextImpl: android.content.res.AssetManager getAssets()> -> _SOURCE_
<android.widget.RelativeLayout: int getBaseline()> -> _SOURCE_
<com.android.exchange.ExchangeService: java.lang.String alarmOwner(long)> -> _SOURCE_
<com.android.camera.ListPreference: java.lang.CharSequence[] getEntries()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: byte[] getTransactionId()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getNewInstanceForTest(android.content.Context)> -> _SOURCE_
<org.apache.harmony.security.utils.JarUtils: java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: int getVersion()> -> _SOURCE_
<java.nio.DoubleArrayBuffer: java.nio.DoubleBuffer get(double[],int,int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<libcore.net.url.FileURLConnection: java.lang.String getContentType()> -> _SOURCE_
<android.view.ViewConfiguration: int getScrollDefaultDelay()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerInetAddress()> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getSignature()> -> _SOURCE_
<android.os.Parcel$1: java.lang.Object createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: long getItemId(int)> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> android.permission.WRITE_CONTACTS -> _SOURCE_
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock$Sync: int getHoldCount()> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getRemoteAddress()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.animation.Animation: int getRepeatCount()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$EventActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<android.text.method.DateKeyListener: int getInputType()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> -> _SOURCE_
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getRel()> -> _SOURCE_
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm createFromParcel(android.os.Parcel)> -> _SOURCE_
<gov.nist.javax.sip.header.Subject: java.lang.String getSubject()> -> _SOURCE_
<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])> -> _SOURCE_
<gov.nist.javax.sip.header.From: java.lang.String getUserAtHostPort()> -> _SOURCE_
<android.widget.OverScroller: int getCurrY()> -> _SOURCE_
<android.media.AudioService: int getRingerMode()> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationVersion()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)> -> _SOURCE_
<org.json.JSONObject: java.util.Iterator keys()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: int getItemId()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getTextContent(java.lang.StringBuilder)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getFirstWritableRawContact(android.content.Context)> -> _SOURCE_
<android.widget.TextView$CharWrapper: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)> -> _SOURCE_
<com.android.internal.telephony.cat.BerTlv: java.util.List getComprehensionTlvs()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPort()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getTransaction()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getViaParms()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getQop()> -> _SOURCE_
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object get()> -> _SOURCE_
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String,double)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()> -> _SOURCE_
<java.util.UnsafeArrayList: java.lang.Object[] array()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getItemViewType(int)> -> _SOURCE_
<android.widget.AdapterView: long getSelectedItemId()> -> _SOURCE_
<android.text.BoringLayout: int getLineStart(int)> -> _SOURCE_
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: int getFlag(android.content.res.TypedArray,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: android.os.Handler getHandler()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String[] getActiveApnTypes()> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer: int getCurrentPosition()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: boolean isInMemoryDatabase()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getType()> -> _SOURCE_
<android.view.Display: float getRefreshRate()> -> _SOURCE_
<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()> -> _SOURCE_
<dalvik.system.profiler.HprofData: int getFlags()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()> -> _SOURCE_
<android.net.Credentials: int getUid()> -> _SOURCE_
<android.app.Notification: android.app.Notification clone()> -> _SOURCE_
<com.android.mms.data.Conversation: java.lang.String verifySingleRecipient(android.content.Context,long,java.lang.String)> -> _SOURCE_
<com.android.exchange.adapter.Parser: java.lang.String getValue()> -> _SOURCE_
<android.widget.ListPopupWindow: int getAnimationStyle()> -> _SOURCE_
<com.android.server.MountService: java.lang.String getMountedObbPath(java.lang.String)> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$RegisterCommand: int getDuration()> -> _SOURCE_
<org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<android.location.Address: java.util.Locale getLocale()> -> _SOURCE_
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> android.permission.READ_SMS -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.server.wm.Session: boolean getInTouchMode()> -> _SOURCE_
<android.text.DynamicLayout: int getLineCount()> -> _SOURCE_
<gov.nist.javax.sip.address.NetObject: java.lang.String toString()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)> -> _SOURCE_
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()> -> _SOURCE_
<android.view.animation.OvershootInterpolator: float getInterpolation(float)> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment$SettingsDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<java.nio.charset.Charset: java.lang.String name()> -> _SOURCE_
<com.android.browser.PreloadController: com.android.browser.TabControl getTabControl()> -> _SOURCE_
<javax.crypto.spec.PBEKeySpec: int getIterationCount()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: int getTypePrecedence(com.android.contacts.model.dataitem.DataKind,int)> -> _SOURCE_
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: java.lang.String getArtistName()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getPeerCertificates()> -> _SOURCE_
<com.android.browser.homepages.HomeProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: android.widget.SectionIndexer getIndexer()> -> _SOURCE_
<com.android.calendar.CalendarEventModel$ReminderEntry: int getMinutes()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaAdapter$ViewHolder getSelectedViewHolder()> -> _SOURCE_
<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: android.text.style.ImageSpan getMoreChip()> -> _SOURCE_
<android.telephony.SmsCbMessage: int getMessagePriority()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getFormattedAddress(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.http.impl.client.BasicCookieStore: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean getMessageWaitingIndicator()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()> -> _SOURCE_
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()> -> _SOURCE_
<com.android.deskclock.Alarms: long addAlarm(android.content.Context,com.android.deskclock.Alarm)> -> _SOURCE_
<android.content.res.StringBlock: java.lang.CharSequence get(int)> -> _SOURCE_
<android.app.WallpaperManager: int getDesiredMinimumWidth()> -> _SOURCE_
<com.android.internal.util.MemInfoReader: long getTotalSize()> -> _SOURCE_
<java.nio.Buffer: java.lang.String toString()> -> _SOURCE_
<java.util.Locale: java.lang.String getVariant()> -> _SOURCE_
<android.server.search.Searchables: java.util.ArrayList getSearchablesList()> -> _SOURCE_
<com.android.exchange.utility.SimpleIcsWriter: byte[] getBytes()> -> _SOURCE_
<com.android.exchange.adapter.CalendarSyncAdapter: java.lang.String getSyncKey()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getCipherSuite()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: long getRawContactId()> -> _SOURCE_
<android.view.View: float getY()> -> _SOURCE_
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getType(com.android.contacts.model.dataitem.DataKind,int)> -> _SOURCE_
<android.location.Address: java.lang.String getAddressLine(int)> -> _SOURCE_
<java.util.Scanner: java.lang.Object next()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTtys()> -> _SOURCE_
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()> -> _SOURCE_
<android.app.SearchableInfo: int getIconId()> -> _SOURCE_
<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> -> _SOURCE_
<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()> -> _SOURCE_
<com.android.providers.contacts.util.Clock: com.android.providers.contacts.util.Clock getInstance()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String encode()> -> _SOURCE_
<com.android.contacts.interactions.GroupNameDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String encodeBody()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableCollection values()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()> -> _SOURCE_
<java.io.FileDescriptor: int getInt$()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()> -> _SOURCE_
<com.android.vcard.VCardEntry$BirthdayData: java.lang.String toString()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPreferredPackages(int)> -> _SOURCE_
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getTitle()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: int getContactNameDisplayOrder()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableCollection build()> -> _SOURCE_
<com.android.exchange.utility.UriCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)> -> _SOURCE_
<android.os.Debug: int getGlobalClassInitCount()> -> _SOURCE_
<java.security.MessageDigestSpi: java.lang.Object clone()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getDefaultTextEncoding()> -> _SOURCE_
<java.security.cert.CertPathValidatorException: java.security.cert.CertPath getCertPath()> -> _SOURCE_
<com.android.providers.contacts.AbstractContactsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralNames: byte[] getEncoded()> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getCurrentPosition()> -> _SOURCE_
<com.google.common.collect.Multimaps$Values: java.util.Iterator iterator()> -> _SOURCE_
<java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()> -> _SOURCE_
<com.google.android.mms.pdu.SendConf: byte[] getTransactionId()> -> _SOURCE_
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getWholeText()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc build()> -> _SOURCE_
<android.emoji.EmojiFactory: int getMinimumAndroidPua()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getDirectoryResultLimit()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getNickNameList()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: int getHeaderFieldInt(java.lang.String,int)> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: int getCount()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getCommonName()> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: java.lang.String getTypeDescription()> -> _SOURCE_
<android.media.AudioService: int getMasterMaxVolume()> -> _SOURCE_
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)> -> _SOURCE_
<com.android.contacts.interactions.GroupCreationDialogFragment: com.android.contacts.interactions.GroupCreationDialogFragment$OnGroupCreatedListener getOnGroupCreatedListener()> -> _SOURCE_
<android.media.AudioManager$FocusEventHandlerDelegate: android.os.Handler getHandler()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesSent()> -> _SOURCE_
<android.widget.RemoteViews$BitmapCache: int getBitmapId(android.graphics.Bitmap)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()> -> _SOURCE_
<com.android.emailcommon.service.IAccountService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<com.android.exchange.ExchangeService$AccountObserver: java.lang.String getAccountKeyWhere()> -> _SOURCE_
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getAddressString(boolean)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: int getBluetoothState()> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String toHeaderString()> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: int getOpacity()> -> _SOURCE_
<java.net.URLConnection: boolean getDefaultUseCaches()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: java.lang.String toString()> -> _SOURCE_
<java.text.NumberFormat: int getMaximumFractionDigits()> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: int getOffset()> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadObject()> -> _SOURCE_
<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICID()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.content.pm.PackageInfoLite: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.net.Socket createSocket()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingRight()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: java.util.List getAsList()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider: java.lang.String getClientId(android.content.ContentResolver)> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentEncoding()> -> _SOURCE_
<java.util.IllegalFormatPrecisionException: int getPrecision()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()> android.permission.ACCESS_WIFI_STATE -> _SOURCE_|NETWORK_INFORMATION
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getActualState(android.content.Context)> -> _SOURCE_
<java.lang.ClassLoader: java.lang.ClassLoader access$000()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.ClipDrawable$ClipState: int getChangingConfigurations()> -> _SOURCE_
<java.net.DatagramSocket: boolean getReuseAddress()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalX(int,int)> -> _SOURCE_
<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToBnW(byte[],int)> -> _SOURCE_
<java.text.CollationElementIterator: int getMaxExpansion(int)> -> _SOURCE_
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> -> _SOURCE_
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()> -> _SOURCE_
<java.nio.DoubleToByteBufferAdapter: double get(int)> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoEcio()> -> _SOURCE_
<android.content.pm.PackageStats: java.lang.String toString()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.smil.TimeList getBegin()> -> _SOURCE_
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte getDescriptionCode()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.String getName()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: int getPosition()> -> _SOURCE_
<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,android.content.pm.PackageStats)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<com.android.providers.contacts.NameLookupBuilder: java.lang.String normalizeName(java.lang.String)> -> _SOURCE_
<android.widget.ExpandableListView: long getSelectedId()> -> _SOURCE_
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternal: int getEncoding()> -> _SOURCE_
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getViaPort()> -> _SOURCE_
<android.view.VelocityTracker$Estimator: float getXCoeff(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<org.apache.http.conn.HttpHostConnectException: org.apache.http.HttpHost getHost()> -> _SOURCE_
<com.android.emailcommon.service.IPolicyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: android.graphics.drawable.Drawable getBackground(int,boolean)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Object: byte[] getEncoded()> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()> -> _SOURCE_
<android.text.BoringLayout: int getHeight()> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.WRITE_SOCIAL_STREAM -> _SOURCE_
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.Authority getAuthority()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getHopTarget(int)> -> _SOURCE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: boolean getFeature(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.content.Intent: float getFloatExtra(java.lang.String,float)> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: boolean getNotLaunched(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: short getShort(int)> -> _SOURCE_
<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()> -> _SOURCE_
<java.util.Vector: java.lang.Object clone()> -> _SOURCE_
<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentLocation(java.lang.String)> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: java.util.ArrayList handlePaste()> -> _SOURCE_
<org.apache.http.message.BasicTokenIterator: java.lang.String nextToken()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: int size()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String)> -> _SOURCE_
<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: java.lang.String getString(android.content.res.TypedArray,int)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> -> _SOURCE_
<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilter getFilter()> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate: java.lang.String toString()> -> _SOURCE_
<java.util.EnumMap$EnumMapEntrySet$1: java.lang.Object get(java.util.MapEntry)> -> _SOURCE_
<com.android.browser.DeviceAccountLogin: java.lang.String[] getAccountNames()> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: java.util.Set elementSet()> -> _SOURCE_
<android.widget.Editor$SuggestionsPopupWindow: int getTextOffset()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getColumnNumber()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: long getConnectTime()> -> _SOURCE_
<android.database.CursorWrapper: int getPosition()> -> _SOURCE_
<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getTransferEncoding()> -> _SOURCE_
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.filterfw.core.GLFrame: int getTextureId()> -> _SOURCE_
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getParameters()> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: int getEriFileType()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<java.util.TreeMap: java.util.Map$Entry pollFirstEntry()> -> _SOURCE_
<android.support.v4.view.ViewCompatJellybeanMr1: int getLabelFor(android.view.View)> -> _SOURCE_
<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getGlobalProxy()> -> _SOURCE_
<com.android.browser.PieControl$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.drm.DrmUtils: byte[] readBytes(java.lang.String)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getLocalPath()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<java.lang.Integer: short shortValue()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getLabelView()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.RedirectHandler createRedirectHandler()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> -> _SOURCE_
<android.app.WallpaperManager: java.lang.String access$200()> -> _SOURCE_
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: java.lang.String getMimeTypeFromFileName(java.lang.String)> -> _SOURCE_
<com.android.settings.AccessibilitySettings: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<com.google.common.collect.MapMaker: java.lang.String toString()> -> _SOURCE_
<com.google.android.mms.ContentType: java.util.ArrayList getImageTypes()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet tailSet(java.lang.Object)> -> _SOURCE_
<android.widget.AdapterView: long getItemIdAtPosition(int)> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.content.Context getContext()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForIm()> -> _SOURCE_
<java.lang.SecurityManager: java.lang.Class[] getClassContext()> -> _SOURCE_
<java.nio.ShortToByteBufferAdapter: short get(int)> -> _SOURCE_
<android.text.DynamicLayout: int getTopPadding()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryAdapter: int getGroupCount()> -> _SOURCE_
<android.app.IUiModeManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.vcard.VCardConfig: int getNameOrderType(int)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getValuesPerSample()> -> _SOURCE_
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()> -> _SOURCE_
<com.android.mms.ui.UriImage: com.google.android.mms.pdu.PduPart getResizedImageAsPart(int,int,int)> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.Require: java.lang.String getOptionTag()> -> _SOURCE_
<java.util.jar.Manifest: java.util.Map getEntries()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxSizeScaleForPendingMmsAllowed()> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedAsMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.Provider access$102(java.security.KeyPairGenerator,java.security.Provider)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getHeaderNames()> -> _SOURCE_
<com.android.browser.BrowserSettings: android.content.SharedPreferences getPreferences()> -> _SOURCE_
<com.android.internal.location.ILocationProvider$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getLongitude()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)> -> _SOURCE_
<com.android.mms.model.SlideshowModel: java.util.ListIterator listIterator()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: boolean isEmail()> -> _SOURCE_
<android.widget.GridLayout$Axis: int[] getTrailingMargins()> -> _SOURCE_
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String signalPoll()> -> _SOURCE_
<android.app.ProgressDialog: int getSecondaryProgress()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getScheme()> -> _SOURCE_
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()> -> _SOURCE_
<android.view.animation.Animation: int getRepeatMode()> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification$NotificationInfo: java.lang.CharSequence formatBigMessage(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()> -> _SOURCE_
<android.view.KeyEvent: int getKeyboardDevice()> -> _SOURCE_
<com.android.server.am.UriPermissionOwner$ExternalToken: com.android.server.am.UriPermissionOwner getOwner()> -> _SOURCE_
<android.database.AbstractWindowedCursor: int getInt(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: java.lang.String getViaHost()> -> _SOURCE_
<com.android.settings.bluetooth.A2dpProfile: java.util.List getConnectedDevices()> -> _SOURCE_
<android.widget.ScrollView: int getMaxScrollAmount()> -> _SOURCE_
<com.android.phone.CdmaPhoneCallState: com.android.phone.CdmaPhoneCallState$PhoneCallState getPreviousCallState()> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: java.util.Set entrySet()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$Member: java.lang.String getDisplayName()> -> _SOURCE_
<gov.nist.javax.sip.header.AddressParametersHeader: java.lang.Object clone()> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: int getViewTypeCount()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()> -> _SOURCE_
<android.app.backup.IRestoreObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getDeclaredLength()> -> _SOURCE_
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison)> -> _SOURCE_
<android.animation.ObjectAnimator: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.month.SimpleWeekView: int getLastMonth()> -> _SOURCE_
<android.telephony.SmsMessage: boolean isMwiDontStore()> -> _SOURCE_
<com.android.emailcommon.service.IEmailService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERSetParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<android.nfc.Tag: android.nfc.Tag rediscover()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.util.List getProperties(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMeid()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.ViewManager getViewManager()> -> _SOURCE_
<com.android.contacts.model.RawContact: com.android.contacts.model.RawContact$NamedDataItem addNamedDataItemValues(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<gov.nist.core.NameValueList: java.util.Set keySet()> -> _SOURCE_
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)> -> _SOURCE_
<com.android.mms.util.BlobCache: byte[] lookup(long)> -> _SOURCE_
<org.apache.harmony.security.x509.OtherName: byte[] access$200(org.apache.harmony.security.x509.OtherName)> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()> -> _SOURCE_
<android.view.View: int getId()> -> _SOURCE_
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle respond(android.os.Bundle)> -> _SOURCE_
<com.android.mms.util.ThumbnailManager: android.graphics.Bitmap access$300()> -> _SOURCE_
<android.widget.ScrollBarDrawable: java.lang.String toString()> -> _SOURCE_
<android.view.View$6: java.lang.Float get(android.view.View)> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getExtendedAddress()> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)> -> _SOURCE_
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()> -> _SOURCE_
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()> -> _SOURCE_
<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.ParseException generateParseException()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<android.location.Geofence: java.lang.String toString()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: int getPendingAppTransition()> -> _SOURCE_
<android.preference.PreferenceActivity: android.widget.ListAdapter access$200(android.preference.PreferenceActivity)> -> _SOURCE_
<gov.nist.javax.sip.header.From: java.lang.String getTag()> -> _SOURCE_
<android.content.res.Resources: android.content.res.Resources getSystem()> -> _SOURCE_
<com.google.common.collect.ImmutableList: int hashCode()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] toByteArray()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault()> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: float get(java.lang.String,float)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getCNonce()> -> _SOURCE_
<android.widget.TabHost$TabSpec: java.lang.String getTag()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getPluginsPath()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.util.List getComponents()> -> _SOURCE_
<com.android.providers.contacts.MemoryCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<android.view.View: int getPaddingLeft()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getOriginalUrl()> -> _SOURCE_
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.BoundType upperBoundType()> -> _SOURCE_
<java.net.Proxy: java.lang.String toString()> -> _SOURCE_
<com.android.mms.util.DraftCache: boolean getSavingDraft()> -> _SOURCE_
<com.android.contacts.list.PhoneNumberPickerFragment: com.android.contacts.list.ContactListFilter getFilter()> -> _SOURCE_
<com.android.mms.data.Contact: android.net.Uri getUri()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> -> _SOURCE_
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay access$2000(android.net.wifi.p2p.WifiP2pDevice)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: long getExpirationTime()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccRecords getIccRecords()> -> _SOURCE_
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.MinSE: int getExpires()> -> _SOURCE_
<android.preference.RingtonePreference: int getRingtoneType()> -> _SOURCE_
<android.view.ViewConfiguration: int getHoverTapSlop()> -> _SOURCE_
<java.util.Calendar: int getActualMaximum(int)> -> _SOURCE_
<android.webkit.Plugin: java.lang.String getFileName()> -> _SOURCE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()> -> _SOURCE_
<android.service.dreams.IDreamService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: com.google.common.collect.Multiset multiset()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: java.lang.String toString()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getCdmaEriIconIndex()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)> -> _SOURCE_
<com.android.mms.dom.ElementImpl: short getNodeType()> -> _SOURCE_
<android.app.AlertDialog$Builder: android.content.Context getContext()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: java.util.Date getDate()> -> _SOURCE_
<android.app.SearchableInfo: int getLabelId()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneContext()> -> _SOURCE_
<java.text.NumberFormat: java.lang.Object clone()> -> _SOURCE_
<java.util.Formatter$FormatToken: int getArgIndex()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: byte[] getThumbnailPhotoBytes()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: long getDisconnectTime()> -> _SOURCE_
<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL,boolean)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardState: java.lang.String toString()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getWwwAuthenticate()> -> _SOURCE_
<com.android.server.power.DisplayPowerState: float getElectronBeamLevel()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getStartOffset()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: long getMessageSize()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: long[] getQueue()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getPassword()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()> -> _SOURCE_
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()> -> _SOURCE_
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor clear()> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()> -> _SOURCE_
<android.os.StrictMode$AndroidBlockGuardPolicy: int getPolicyMask()> -> _SOURCE_
<android.os.RemoteCallback: int hashCode()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)> -> _SOURCE_
<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getLabel()> -> _SOURCE_
<android.content.ContextWrapper: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getRingingCall()> -> _SOURCE_
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)> -> _SOURCE_
<android.animation.Keyframe$IntKeyframe: java.lang.Object getValue()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getSuffix()> -> _SOURCE_
<java.io.ObjectInputStream: float readFloat()> -> _SOURCE_
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<java.util.regex.PatternSyntaxException: java.lang.String getPattern()> -> _SOURCE_
<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)> -> _SOURCE_
<com.android.server.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getOpaque()> -> _SOURCE_
<com.android.music.MusicUtils: long getCurrentAudioId()> -> _SOURCE_
<android.widget.GridLayout$Alignment: android.widget.GridLayout$Bounds getBounds()> -> _SOURCE_
<android.view.VelocityTracker: float getXVelocity(int)> -> _SOURCE_
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()> -> _SOURCE_
<com.android.mms.ui.ManageSimMessages: android.database.Cursor access$102(com.android.mms.ui.ManageSimMessages,android.database.Cursor)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean isEriFileLoaded()> -> _SOURCE_
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.phone.CallerInfoCache$CacheEntry: java.lang.String toString()> -> _SOURCE_
<libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)> -> _SOURCE_
<android.view.ViewGroup: int getPersistentDrawingCache()> -> _SOURCE_
<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getText(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: javax.xml.parsers.DocumentBuilder newDocumentBuilder()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: int getCount()> -> _SOURCE_
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)> -> _SOURCE_
<com.android.internal.telephony.CallTracker: android.os.Message obtainNoPollCompleteMessage(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: int size()> -> _SOURCE_
<android.content.pm.ActivityInfo: java.lang.String toString()> -> _SOURCE_
<android.view.KeyCharacterMap: int getModifierBehavior()> -> _SOURCE_
<java.util.Date: int getDate()> -> _SOURCE_
<com.android.contacts.calllog.CallLogListItemViews: com.android.contacts.calllog.CallLogListItemViews createForTest(android.content.Context)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERPrintableString: java.lang.String getString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getActiveClientTransactionCount()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForArray: java.lang.String toString()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String lookupPrefix(java.lang.String)> -> _SOURCE_
<android.widget.ListPopupWindow: int getSoftInputMode()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getPointer()> -> _SOURCE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)> -> _SOURCE_
<java.text.ChoiceFormat: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<android.net.MobileDataStateTracker: boolean isAvailable()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getContentId()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: android.content.Context getThemedContext()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: int getCount()> -> _SOURCE_
<java.util.Calendar: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getNationalNumberPattern()> -> _SOURCE_
<java.net.Socket: int getSoTimeout()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getRootElementName()> -> _SOURCE_
<gov.nist.javax.sip.header.From: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: char BeginToken()> -> _SOURCE_
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> -> _SOURCE_
<android.net.rtp.RtpStream: int getLocalPort()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.io.File access$2200(com.android.server.pm.PackageManagerService,java.io.File)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getAuthUserName()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> -> _SOURCE_
<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: long getItemId(int)> -> _SOURCE_
<com.android.settings.widget.InvertedChartAxis: float convertToPoint(long)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()> -> _SOURCE_
<com.android.browser.BrowserSettings: float getInvertedContrast()> -> _SOURCE_
<android.webkit.CallbackProxy$ResultTransport: java.lang.Object getResult()> -> _SOURCE_
<android.graphics.NinePatch: int getHeight()> -> _SOURCE_
<android.view.View: int getMeasuredWidth()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: android.os.ParcelUuid[] getUuids()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()> -> _SOURCE_
<com.android.server.location.GeofenceState: double getDistanceToBoundary()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)> -> _SOURCE_
<java.lang.Number: short shortValue()> -> _SOURCE_
<java.nio.HeapByteBuffer: long getLong(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: java.lang.String getKindString()> -> _SOURCE_
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<org.apache.http.entity.StringEntity: long getContentLength()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getRegion()> -> _SOURCE_
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)> -> _SOURCE_
<android.text.DynamicLayout: int getEllipsisCount(int)> -> _SOURCE_
<android.webkit.WebViewClassic: int getBlockLeftEdge(int,int,float)> -> _SOURCE_
<com.android.contacts.detail.ActionsViewContainer: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.view.WindowInfo getWindowInfo(android.os.IBinder)> -> _SOURCE_
<java.net.URI: int getEffectivePort(java.lang.String,int)> -> _SOURCE_
<android.view.View: float getPivotY()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: com.android.emailcommon.mail.Body getBody()> -> _SOURCE_
<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard: int getDefaultCoordX()> -> _SOURCE_
<libcore.io.ForwardingOs: int getpid()> -> _SOURCE_
<android.webkit.WebView: int getProgress()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: int getPhoneType()> -> _SOURCE_
<android.drm.ProcessedData: java.lang.String getSubscriptionId()> -> _SOURCE_
<android.widget.TextView: android.text.method.WordIterator getWordIterator()> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> android.permission.READ_CONTACTS -> _SOURCE_|CONTACT_INFORMATION
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccountTypes(boolean)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getUseDoubleTree()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getCacheResponse()> -> _SOURCE_
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()> -> _SOURCE_
<com.android.browser.TitleBar: com.android.browser.UiController getUiController()> -> _SOURCE_
<java.net.URL: java.lang.String getPath()> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)> -> _SOURCE_
<android.widget.RemoteViews$BitmapReflectionAction: java.lang.String getActionName()> -> _SOURCE_
<java.lang.Float: short shortValue()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: int getInviteContactActionResId()> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String getDebugString()> -> _SOURCE_
<android.webkit.WebViewClassic$SelectionHandleAlpha: int getTargetAlpha()> -> _SOURCE_
<com.android.internal.telephony.AdnRecord: byte[] buildAdnString(int)> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object)> -> _SOURCE_
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilLayoutElementImpl: java.lang.String getType()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerName()> -> _SOURCE_
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<android.content.BroadcastReceiver: boolean getDebugUnregister()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: short getNodeType()> -> _SOURCE_
<android.media.AudioService$SetModeDeathHandler: int getPid()> -> _SOURCE_
<java.security.cert.CertPathValidator: java.security.Provider getProvider()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()> -> _SOURCE_
<java.util.Hashtable: java.util.Set keySet()> -> _SOURCE_
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()> -> _SOURCE_
<java.security.KeyStore$CallbackHandlerProtection: javax.security.auth.callback.CallbackHandler getCallbackHandler()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeqHeader()> -> _SOURCE_
<android.util.DisplayMetrics: java.lang.String toString()> -> _SOURCE_
<android.view.View: float getRotationY()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> -> _SOURCE_
<android.content.Context: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle close(java.lang.String,android.os.IBinder)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ManifestDigest getManifestDigest()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: int getSmallHashFromSha1(byte[])> -> _SOURCE_
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context getBaseContext()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollX()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<com.android.browser.NavTabScroller: int getScrollValue()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getDimensionCount()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServicePackageName()> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedRegistrationObjects()> -> _SOURCE_
<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.QueryController getQueryController()> -> _SOURCE_
<java.text.CollationKey: int compareTo(java.lang.Object)> -> _SOURCE_
<com.android.browser.search.DefaultSearchEngine: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isDataConnectivityPossible()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: gov.nist.core.NameValueList getParameters()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: int getItemViewType(int)> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: int getPort()> -> _SOURCE_
<com.android.mms.data.WorkingMessage: com.android.mms.model.SlideshowModel getSlideshow()> -> _SOURCE_
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()> -> _SOURCE_
<java.nio.SocketChannelImpl$SocketAdapter: java.io.InputStream getInputStream()> -> _SOURCE_
<android.app.Dialog: android.app.Activity getOwnerActivity()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox getMailboxForMessageId(android.content.Context,long)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)> -> _SOURCE_
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)> -> _SOURCE_
<java.util.MissingFormatWidthException: java.lang.String getFormatSpecifier()> -> _SOURCE_
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock writeLock()> -> _SOURCE_
<android.accounts.AccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)> -> _SOURCE_
<com.android.contacts.ContactSaveService: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.filterfw.core.FilterGraph: java.util.Set getFilters()> -> _SOURCE_
<android.database.MergeCursor: java.lang.String getString(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<com.android.internal.telephony.AdnRecordCache: java.util.ArrayList getRecordsIfLoaded(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$8: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.google.common.collect.ForwardingIterator: java.lang.Object next()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Field getReflectionField(java.io.ObjectStreamField)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledEdgeSlop()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.app.Activity getPUKEntryActivity()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.media.AudioManager: int getVibrateSetting(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollX()> -> _SOURCE_
<android.location.GpsSatellite: int getPrn()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticMiddleName()> -> _SOURCE_
<java.util.logging.Level: java.lang.String getLocalizedName()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyDetector: com.android.inputmethod.keyboard.Keyboard getKeyboard()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.header.SIPHeader getSIPHeader()> -> _SOURCE_
<android.app.ResultInfo: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.ProxySelector getProxySelector()> -> _SOURCE_
<android.content.res.Configuration: int getLayoutDirection()> -> _SOURCE_
<java.security.SignatureSpi: java.lang.Object clone()> -> _SOURCE_
<android.text.Layout: android.text.TextPaint getPaint()> -> _SOURCE_
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getId()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: java.lang.Object writeReplace()> -> _SOURCE_
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)> -> _SOURCE_
<com.android.contacts.util.ImageViewDrawableSetter: byte[] getCompressedImage()> -> _SOURCE_
<java.util.Hashtable: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()> -> _SOURCE_
<android.os.UserHandle: int getAppId(int)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.LimitedInputStream: int getRemaining()> -> _SOURCE_
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)> -> _SOURCE_
<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()> -> _SOURCE_
<android.webkit.WebSyncManager: int access$000()> -> _SOURCE_
<android.app.SearchableInfo: int getInputType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getWantClientAuth()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getOperatorNumeric()> -> _SOURCE_
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.view.View: float getRightFadingEdgeStrength()> -> _SOURCE_
<android.widget.RemoteViews$BitmapCache: android.graphics.Bitmap getBitmapForId(int)> -> _SOURCE_
<android.util.Property: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getWantClientAuth()> -> _SOURCE_
<java.net.NetworkInterface: byte[] getHardwareAddress()> -> _SOURCE_
<android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)> -> _SOURCE_
<android.database.MergeCursor: int getInt(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: boolean getNotifyPhoneCallState()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: android.widget.RemoteViews getViewAt(int)> -> _SOURCE_
<org.apache.http.message.BufferedHeader: int getValuePos()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: long getLong(int)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.android.settings.net.SummaryForAllUidLoader: android.net.NetworkStats loadInBackground()> -> _SOURCE_
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()> -> _SOURCE_
<com.android.server.wm.DragState: int getDragLayerLw()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMinor(int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.WarningHeader createWarningHeader(java.lang.String,int,java.lang.String)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getTabSize(int)> -> _SOURCE_
<com.android.mms.ui.AttachmentTypeSelectorAdapter: java.util.List getData(int,android.content.Context)> -> _SOURCE_
<com.android.vcard.VCardEntry$WebsiteData: java.lang.String getWebsite()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Comment createComment(java.lang.String)> -> _SOURCE_
<java.io.CharArrayWriter: char[] toCharArray()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getSecondArgument(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.ArrayList)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: short getShort(int)> -> _SOURCE_
<android.text.style.EasyEditSpan: int getSpanTypeId()> -> _SOURCE_
<android.net.TrafficStats: long getTotalTxPackets()> -> _SOURCE_
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()> -> _SOURCE_
<android.app.backup.BackupDataInput: int getDataSize()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.net.RouteInfo: android.net.LinkAddress getDestination()> -> _SOURCE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,long,boolean)> -> _SOURCE_
<java.util.Scanner: long nextLong()> -> _SOURCE_
<android.provider.CalendarContract$Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])> -> _SOURCE_
<android.database.MatrixCursor: byte[] getBlob(int)> -> _SOURCE_
<android.app.IUserSwitchObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPeerPort()> -> _SOURCE_
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)> -> _SOURCE_
<android.os.IVibratorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.lang.Object delegate()> -> _SOURCE_
<java.net.URL: java.lang.String getAuthority()> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])> -> _SOURCE_
<com.android.contacts.util.MemoryUtils: long getTotalMemorySize()> -> _SOURCE_
<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.util.MissingFormatArgumentException: java.lang.String getFormatSpecifier()> -> _SOURCE_
<java.nio.charset.Charset: java.lang.String toString()> -> _SOURCE_
<android.net.nsd.DnsSdTxtRecord: byte[] access$000(android.net.nsd.DnsSdTxtRecord)> -> _SOURCE_
<android.app.IActivityController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.filterfw.core.Frame: int incRefCount()> -> _SOURCE_
<gov.nist.javax.sip.header.ProxyRequireList: java.lang.Object clone()> -> _SOURCE_
<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)> -> _SOURCE_
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)> -> _SOURCE_
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)> -> _SOURCE_
<com.android.browser.BrowserSettings: int getRawTextZoom(int)> -> _SOURCE_
<java.io.ObjectStreamClass: long getConstructor()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.String getResourceBundleName()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()> -> _SOURCE_
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()> -> _SOURCE_
<android.preference.PreferenceActivity: android.widget.Button getNextButton()> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.HeaderIterator headerIterator()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()> -> _SOURCE_
<com.google.android.collect.Lists: java.util.ArrayList newArrayList()> -> _SOURCE_
<android.media.AudioManager: int getRingerMode()> -> _SOURCE_
<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph getGraph()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$EmailKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()> -> _SOURCE_
<java.security.KeyPairGenerator: java.lang.String getAlgorithm()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAndroidDataDir()> -> _SOURCE_
<org.apache.harmony.security.x509.DistributionPointName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.google.android.mms.pdu.SendConf: int getResponseStatus()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long)> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: int getHeight()> -> _SOURCE_
<com.android.phone.InCallScreen: com.android.phone.InCallControlState getUpdatedInCallControlState()> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: int getCount()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: long getHoldDurationMillis()> -> _SOURCE_
<android.view.MotionEvent: int getDeviceId()> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: java.lang.String getContactDisplayName(int)> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.SortedMultiset descendingMultiset()> -> _SOURCE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> -> _SOURCE_
<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getPackageName()> -> _SOURCE_
<java.util.TreeMap$NavigableSubMap: java.lang.Object readResolve()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String getNegativePrefix()> -> _SOURCE_
<android.database.CursorWrapper: int getCount()> -> _SOURCE_
<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quart$3: float getInterpolation(float)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getFileName()> -> _SOURCE_
<android.content.SyncManager: java.lang.String formatTime(long)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableMap build()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getMovementGranularities(java.lang.Object)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledOverflingDistance()> -> _SOURCE_
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance()> -> _SOURCE_
<com.android.mms.model.SlideModel: boolean isEmpty()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int getMoreKeyLabelFlags()> -> _SOURCE_
<android.view.View: int getPaddingStart()> -> _SOURCE_
<com.google.common.collect.MapMaker$NullComputingConcurrentMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: int getDeltaSeconds()> -> _SOURCE_
<gov.nist.javax.sip.header.ErrorInfo: java.lang.String encodeBody()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection values()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> -> _SOURCE_
<com.android.browser.Preloader: com.android.browser.Preloader getInstance()> -> _SOURCE_
<android.app.IThumbnailReceiver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()> -> _SOURCE_
<com.android.calendar.DayView: android.text.format.Time getSelectedTimeForAccessibility()> -> _SOURCE_
<java.io.SerializablePermission: java.lang.String getActions()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)> -> _SOURCE_
<android.webkit.CallbackProxy: android.webkit.WebViewClient getWebViewClient()> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: int distinctElements()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: int[] getStorageUsers(java.lang.String)> -> _SOURCE_
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)> -> _SOURCE_
<android.net.Proxy: java.lang.String getDefaultHost()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: int getLastX()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: int size()> -> _SOURCE_
<com.android.calendar.DayView: int getSelectedMinutesSinceMidnight()> -> _SOURCE_
<android.location.ICountryListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.view.PieItem: int getInnerRadius()> -> _SOURCE_
<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)> -> _SOURCE_
<com.google.common.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)> -> _SOURCE_
<android.content.IntentFilter$AuthorityEntry: int getPort()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: int getByteOffset()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getOpacity()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)> -> _SOURCE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String toString()> -> _SOURCE_
<android.text.style.RelativeSizeSpan: int getSpanTypeId()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getSIPVersion()> -> _SOURCE_
<com.google.android.mms.pdu.MultimediaMessagePdu: long getDate()> -> _SOURCE_
<com.android.mms.MmsApp: java.lang.String getCurrentCountryIso()> -> _SOURCE_
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<android.os.DropBoxManager$Entry$1: android.os.DropBoxManager$Entry createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastSoftIrqTime()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: java.util.Set getKnownPropertyNameSet()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String,char)> -> _SOURCE_
<com.android.browser.homepages.HomeProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.Long getAccountIdOrNull(com.android.providers.contacts.AccountWithDataSet)> -> _SOURCE_
<java.lang.ProcessManager$ProcessImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<org.apache.http.entity.InputStreamEntity: java.io.InputStream getContent()> -> _SOURCE_
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.BaseStatusBar$NotificationClicker makeClicker(android.app.PendingIntent,java.lang.String,java.lang.String,int)> -> _SOURCE_
<com.android.browser.TabControl: android.webkit.WebView getCurrentTopWebView()> -> _SOURCE_
<android.view.IWindow$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> -> _SOURCE_
<javax.crypto.Cipher: byte[] getIV()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: java.lang.String getVersionString()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: java.lang.String getViewTitle(android.view.View)> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getCurrentItemIndex(java.lang.Object)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: int getEnabled(int)> -> _SOURCE_
<android.graphics.NinePatch: int getDensity()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getTransport()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int,int)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy getAreaCodeMapStorage()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getFlat()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getNodeName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.io.FileDescriptor getFileDescriptor$()> -> _SOURCE_
<java.security.AlgorithmParameters: java.lang.String getAlgorithm()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()> -> _SOURCE_
<android.view.animation.AnimationSet: java.util.List getAnimations()> -> _SOURCE_
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()> -> _SOURCE_
<com.android.vcard.VCardEntry$AndroidCustomData: java.lang.String toString()> -> _SOURCE_
<android.app.ContextImpl$15: java.lang.Object createStaticService()> -> _SOURCE_
<com.android.systemui.screenshot.GlobalScreenshot$10: float getInterpolation(float)> -> _SOURCE_
<com.android.settings.Utils: java.lang.String getMeProfileName(android.content.Context,boolean)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticGivenName()> -> _SOURCE_
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getRingingCalls()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getRemoteStreamVolume()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)> -> _SOURCE_
<android.view.View: java.util.ArrayList getTouchables()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.String getAMPMString(int)> -> _SOURCE_
<com.android.calendar.extensions.AllInOneMenuExtensions: java.lang.Integer getExtensionMenuResource(android.view.Menu)> -> _SOURCE_
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<java.net.ServerSocket: int getSoTimeout()> -> _SOURCE_
<com.android.internal.telephony.cdma.sms.UserData: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: com.android.org.bouncycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)> -> _SOURCE_
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: android.text.Spannable getSpannable()> -> _SOURCE_
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)> -> _SOURCE_
<android.view.Surface: android.os.IBinder getBuiltInDisplay(int)> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()> -> _SOURCE_
<android.widget.DatePicker: long getMinDate()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getScrollY(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: int getPremiumSmsPermission(java.lang.String)> -> _SOURCE_
<com.android.music.QueryBrowserActivity: android.database.Cursor access$400(com.android.music.QueryBrowserActivity)> -> _SOURCE_
<com.android.browser.Tab: java.lang.String getOriginalUrl()> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: int getRetrieveStatus()> -> _SOURCE_
<android.app.LoadedApk: android.app.Application getApplication()> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.net.ProxySelector: java.net.ProxySelector getDefault()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getPort()> -> _SOURCE_
<java.nio.FloatArrayBuffer: float get()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String[] getIsimImpu()> -> _SOURCE_
<android.view.View: int getLabelFor()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getQop()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: double getDouble(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.UnmodifiableIterator iterator()> -> _SOURCE_
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getContactId(long)> -> _SOURCE_
<org.apache.harmony.security.x509.X509PublicKey: byte[] getEncoded()> -> _SOURCE_
<com.android.mms.ui.IconListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.calendar.Utils: int getDisplayColorFromColor(int)> -> _SOURCE_
<java.lang.Long: byte byteValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket()> -> _SOURCE_
<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBMPString: com.android.org.bouncycastle.asn1.DERBMPString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.Token: java.lang.String toString()> -> _SOURCE_
<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)> -> _SOURCE_
<java.nio.DirectByteBuffer: long getLong()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.widget.TextView: int getTopPaddingOffset()> -> _SOURCE_
<com.android.calendar.Event: long getStartMillis()> -> _SOURCE_
<com.android.contacts.group.GroupListItem: java.lang.String getTitle()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getDeviceSvn()> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)> -> _SOURCE_
<java.util.TimeZone: java.lang.Object clone()> -> _SOURCE_
<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: java.lang.String getEvent()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)> -> _SOURCE_
<com.android.browser.view.PieItem: java.util.List getItems()> -> _SOURCE_
<android.webkit.HTML5VideoFullScreen: int getBufferPercentage()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getButtonImageId(boolean)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getAbstractAttr()> -> _SOURCE_
<android.net.NetworkStats: int[] getUniqueUids()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getAllowUniversalAccessFromFileURLs()> -> _SOURCE_
<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: java.util.List getConnectableProfiles()> -> _SOURCE_
<android.support.v13.app.FragmentPagerAdapter: long getItemId(int)> -> _SOURCE_
<android.text.method.TextKeyListener: int getPrefs(android.content.Context)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSavedIpAddress()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<com.android.contacts.activities.GroupEditorActivity: com.android.contacts.util.DialogManager getDialogManager()> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemGenerationException: java.lang.Throwable getCause()> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)> -> _SOURCE_
<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.SessionExpiresHeader createSessionExpiresHeader(int)> -> _SOURCE_
<android.widget.ListPopupWindow: android.widget.ListView getListView()> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.WRITE_CONTACTS -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)> -> _SOURCE_
<java.io.ObjectInputStream: java.lang.Object readUnshared()> -> _SOURCE_
<java.math.MathContext: java.math.RoundingMode getRoundingMode()> -> _SOURCE_
<android.webkit.HTML5VideoViewProxy: android.webkit.WebViewClassic getWebView()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.widget.TextView: int getAutoLinkMask()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object getOrCompute(java.lang.Object)> -> _SOURCE_
<java.util.Random: float nextFloat()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultiset keys()> -> _SOURCE_
<android.content.IClipboard$Stub$Proxy: android.content.ClipDescription getPrimaryClipDescription()> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: long getExpiry()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getKey()> -> _SOURCE_
<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String getenv(java.lang.String)> -> _SOURCE_
<android.view.View: int getWidth()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()> -> _SOURCE_
<android.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)> -> _SOURCE_
<android.filterfw.core.Frame: int getRefCount()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindSipAddress(android.content.Context)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String getMessage()> -> _SOURCE_
<java.text.DecimalFormat: boolean isDecimalSeparatorAlwaysShown()> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDecimalFormatSymbolsLocales()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)> -> _SOURCE_
<com.android.server.location.PassiveProvider: java.lang.String getName()> -> _SOURCE_
<android.webkit.WebViewClassic: int getScaledNavSlop()> -> _SOURCE_
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)> -> _SOURCE_
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)> -> _SOURCE_
<com.android.mms.model.LayoutModel: int getLayoutHeight()> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: int getSupportedTypes()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getAudioTurnedOnTime(long,int)> -> _SOURCE_
<java.net.Proxy: java.net.SocketAddress address()> -> _SOURCE_
<java.net.CookieHandler: java.net.CookieHandler getDefault()> -> _SOURCE_
<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key getKey(int)> -> _SOURCE_
<javax.xml.validation.ValidatorHandler: boolean getFeature(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: gov.nist.javax.sip.header.MediaRange getMediaRange()> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: boolean isStateful()> -> _SOURCE_
<android.view.View: float getHorizontalScrollFactor()> -> _SOURCE_
<android.net.LinkAddress$1: android.net.LinkAddress createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int)> -> _SOURCE_
<android.hardware.input.IInputDevicesChangedListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: long getTimeStamp()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(int)> -> _SOURCE_
<android.widget.TextView: float getShadowDy()> -> _SOURCE_
<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)> -> _SOURCE_
<android.telephony.SignalStrength: int getLteDbm()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: int getHttpStatusCode()> -> _SOURCE_
<android.location.Address: double getLongitude()> -> _SOURCE_
<android.widget.DatePicker: boolean getSpinnersShown()> -> _SOURCE_
<java.util.regex.Matcher: java.lang.String group()> -> _SOURCE_
<com.android.phone.CallLogAsync: android.os.AsyncTask getLastOutgoingCall(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.util.ArrayList getMimeEntries(java.lang.String)> -> _SOURCE_
<java.security.Permission: java.security.PermissionCollection newPermissionCollection()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelView: java.lang.String getName()> -> _SOURCE_
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy: java.util.TreeSet getPossibleLengths()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: com.android.inputmethod.latin.ExpandableDictionary$Node getWordNode()> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer: int getDuration()> -> _SOURCE_
<android.text.Layout: float getLineRight(int)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: java.lang.String getCurrentPhotoFile()> -> _SOURCE_
<gov.nist.javax.sip.parser.Parser: java.lang.String sipVersion()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedWriterThreads()> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: long getPeriodStartTime(java.lang.String)> -> _SOURCE_
<android.view.View: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<com.android.internal.os.storage.ExternalStorageFormatter: android.os.storage.IMountService getMountService()> -> _SOURCE_
<java.util.regex.PatternSyntaxException: java.lang.String getDescription()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.util.List getDataItems()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|SYSTEM_SETTINGS
<android.widget.Editor$SuggestionsPopupWindow: int getVerticalLocalPosition(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground()> android.permission.WRITE_CONTACTS -> _SOURCE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.text.DynamicLayout: int getNumberOfBlocks()> -> _SOURCE_
<com.google.common.collect.BstPath: com.google.common.collect.BstPath getPrefix()> -> _SOURCE_
<com.android.internal.telephony.DriverCall: java.lang.String toString()> -> _SOURCE_
<java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceSvn()> -> _SOURCE_
<com.android.inputmethod.latin.SettingsValues: java.lang.String getInputAttributesDebugString()> -> _SOURCE_
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)> -> _SOURCE_
<com.google.common.collect.Lists$TwoPlusArrayList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.core.NameValueList: gov.nist.core.NameValue get(java.lang.Object)> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: boolean isSimLocked()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)> -> _SOURCE_
<com.android.emailcommon.mail.PackedString$Builder: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailData()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.String toString()> -> _SOURCE_
<android.os.AsyncTask: java.lang.Object access$400(android.os.AsyncTask,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.RestrictedState: java.lang.String toString()> -> _SOURCE_
<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<android.webkit.WebResourceResponse: java.lang.String getMimeType()> -> _SOURCE_
<android.net.LinkCapabilities: java.util.Set entrySet()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getEditContactActivityClassName()> -> _SOURCE_
<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getReason()> -> _SOURCE_
<android.provider.Settings$Global: java.lang.String getBluetoothInputDevicePriorityKey(java.lang.String)> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.Controller: int getDesiredThumbnailHeight(android.content.Context)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> -> _SOURCE_
<java.net.URLConnection: long getDate()> -> _SOURCE_
<android.widget.GridLayout$6: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint[] getListeningPoints()> -> _SOURCE_
<java.util.TreeSet: java.lang.Object lower(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: int getBasicConstraints()> -> _SOURCE_
<org.apache.harmony.security.x509.CRLNumber: byte[] getEncoded()> -> _SOURCE_
<android.support.v4.os.ParcelableCompat$CompatCreator: java.lang.Object createFromParcel(android.os.Parcel)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.Object clone()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getThumbnailPhoto()> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingLeft()> -> _SOURCE_
<java.util.GregorianCalendar: int getLeastMaximum(int)> -> _SOURCE_
<java.nio.charset.Charset: java.lang.String displayName()> -> _SOURCE_
<gov.nist.core.HostPort: int getPort()> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()> -> _SOURCE_
<com.android.mms.dom.smil.parser.SmilXmlParser: org.w3c.dom.smil.SMILDocument parse(java.io.InputStream)> -> _SOURCE_
<org.xml.sax.helpers.LocatorImpl: int getLineNumber()> -> _SOURCE_
<android.widget.AbsSpinner: int getCount()> -> _SOURCE_
<android.widget.ExpandableListConnector: long getItemId(int)> -> _SOURCE_
<android.location.Location: float getAccuracy()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getObbDir()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.lang.Long getRawContactId()> -> _SOURCE_
<android.net.Credentials: int getGid()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: short getFill()> -> _SOURCE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)> -> _SOURCE_
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: int getPort()> -> _SOURCE_
<com.android.inputmethod.latin.ResourceUtils: int getEnumValue(android.content.res.TypedArray,int,int)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.lang.Object get(int)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)> -> _SOURCE_
<android.filterfw.core.FieldPort: java.lang.Object getTarget()> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.String debugDump()> -> _SOURCE_
<java.nio.ShortArrayBuffer: short get()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: java.util.Set getParameterNames()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNodeNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])> -> _SOURCE_
<gov.nist.javax.sip.message.MessageObject: java.lang.String debugDump()> -> _SOURCE_
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)> -> _SOURCE_
<com.android.calendar.AbstractCalendarActivity: com.android.calendar.AsyncQueryService getAsyncQueryService()> -> _SOURCE_
<com.android.mms.ui.MessageUtils: int getAttachmentType(com.android.mms.model.SlideshowModel)> -> _SOURCE_
<android.view.View: int getNextFocusLeftId()> -> _SOURCE_
<com.android.internal.os.ProcessStats: float getTotalCpuPercent()> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccRecords getIccRecords()> -> _SOURCE_
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.widget.GridLayout$Axis: int[] getLocations()> -> _SOURCE_
<java.net.URLConnection: long getLastModified()> -> _SOURCE_
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket()> -> _SOURCE_
<java.nio.charset.Charset: java.util.Set aliases()> -> _SOURCE_
<com.android.internal.view.InputBindResult: java.lang.String toString()> -> _SOURCE_
<android.app.ContextImpl: android.content.Context getApplicationContext()> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: long getLong()> -> _SOURCE_
<org.apache.harmony.security.x509.ExtendedKeyUsage: java.util.List getExtendedKeyUsage()> -> _SOURCE_
<android.accounts.AccountAndUser: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getWordBeforeCursorIfAtEndOfWord(com.android.inputmethod.latin.SettingsValues)> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: java.lang.Object getCustomData()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> -> _SOURCE_
<com.android.internal.os.PkgUsageStats: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable,java.lang.Object)> -> _SOURCE_
<android.hardware.SerialPort: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.Set entrySet()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<java.nio.ShortToByteBufferAdapter: short get()> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: float[] getAnimationScales()> -> _SOURCE_
<com.android.providers.media.MediaProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<gov.nist.javax.sip.header.RecordRouteList: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.ApnSetting getApnSettingSync()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String toString()> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String,int)> -> _SOURCE_
<com.android.camera.ui.IndicatorControl: com.android.camera.ui.IndicatorButton addIndicator(android.content.Context,com.android.camera.IconListPreference)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.CSeqHeader createCSeqHeader(int,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: void getDataCallList(android.os.Message)> -> _SOURCE_
<java.net.Authenticator: java.net.URL getRequestingURL()> -> _SOURCE_
<android.webkit.WebView: float getScale()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getThreshold()> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.util.List getRoutes(java.util.List)> -> _SOURCE_
<com.android.ex.variablespeed.VariableSpeed: int getCurrentPosition()> -> _SOURCE_
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: boolean getRestrictBackground()> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.BrowserFrame getBrowserFrame()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()> -> _SOURCE_
<android.app.ActivityManager: int getLargeMemoryClass()> -> _SOURCE_
<com.android.internal.telephony.IccIoResult: com.android.internal.telephony.IccException getException()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> -> _SOURCE_
<android.view.View: android.view.HardwareLayer getHardwareLayer()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField)> -> _SOURCE_
<com.google.common.collect.AbstractLinkedIterator: java.lang.Object next()> -> _SOURCE_
<com.android.calendar.AsyncQueryServiceHelper$OperationInfo: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotAfter()> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getMessage()> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()> -> _SOURCE_
<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)> -> _SOURCE_
<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()> -> _SOURCE_
<java.security.MessageDigest: int getDigestLength()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> -> _SOURCE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> -> _SOURCE_
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> android.permission.READ_PHONE_STATE -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] getRandom()> -> _SOURCE_
<com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)> -> _SOURCE_
<gov.nist.javax.sip.header.AllowEvents: java.lang.String getEventType()> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String getClassloader()> -> _SOURCE_
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.Organization: java.lang.String getOrganization()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: boolean getMute()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getFlashMode()> -> _SOURCE_
<gov.nist.javax.sip.address.UserInfo: int getUserType()> -> _SOURCE_
<com.android.settings.bluetooth.BluetoothDevicePreference: com.android.settings.bluetooth.CachedBluetoothDevice getCachedDevice()> -> _SOURCE_
<android.app.ITransientNotification$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getChildId(int,int)> -> _SOURCE_
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()> -> _SOURCE_
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getRemoveOnCancelPolicy()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.util.List getPendingMmiCodes()> -> _SOURCE_
<javax.crypto.KeyAgreement: java.lang.String getAlgorithm()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDateHeader: java.util.Calendar getDate()> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()> -> _SOURCE_
<javax.crypto.KeyGenerator: java.security.Provider getProvider()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: com.android.emailcommon.provider.Account findExistingAccount(android.content.Context,long,java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: int getViewTypeCount()> -> _SOURCE_
<com.android.settings.Utils: java.lang.String getBatteryPercentage(android.content.Intent)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.String getSignatureAttribute()> -> _SOURCE_
<android.os.Bundle: long[] getLongArray(java.lang.String)> -> _SOURCE_
<com.android.browser.BrowserSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getPhoneticName(android.content.Context,com.android.contacts.model.Contact)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.os.IRemoteCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: int getCount()> -> _SOURCE_
<com.google.android.mms.pdu.ReadRecInd: int getReadStatus()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()> -> _SOURCE_
<android.os.Message: android.os.Bundle peekData()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getIMSI()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getIdAttribute()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: int notifyTypedAgainAndGetFrequency()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.mms.drm.DrmUtils: java.lang.String getConvertExtension(java.lang.String)> -> _SOURCE_
<javax.crypto.KeyAgreement: byte[] generateSecret()> -> _SOURCE_
<android.app.BackStackRecord: int getTransitionStyle()> -> _SOURCE_
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()> -> _SOURCE_
<libcore.net.http.HttpEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getRemotePort()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()> -> _SOURCE_
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> -> _SOURCE_
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)> -> _SOURCE_
<android.view.FocusFinder: int getWeightedDistanceFor(int,int)> -> _SOURCE_
<android.database.MatrixCursor: int getType(int)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceName(int)> -> _SOURCE_
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()> -> _SOURCE_
<java.security.cert.TrustAnchor: java.lang.String getCAName()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()> -> _SOURCE_
<java.util.TreeMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.RawContact: android.content.Context getContext()> -> _SOURCE_
<android.app.ContextImpl: int getThemeResId()> -> _SOURCE_
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemObject: java.lang.String getType()> -> _SOURCE_
<com.android.emailcommon.mail.Address: java.lang.String toHeader()> -> _SOURCE_
<android.widget.GridView: android.widget.Adapter getAdapter()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getKeyUsage()> -> _SOURCE_
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> -> _SOURCE_
<com.android.browser.view.ScrollerView: int getMaxScrollAmount()> -> _SOURCE_
<android.net.TrafficStats: long getMobileRxPackets()> -> _SOURCE_
<android.security.KeyStore: int getLastError()> -> _SOURCE_
<gov.nist.core.ParserCore: gov.nist.core.NameValue nameValue(char)> -> _SOURCE_
<android.os.IPermissionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.text.FieldPosition: int getEndIndex()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)> -> _SOURCE_
<com.android.internal.database.SortCursor: long getLong(int)> -> _SOURCE_
<org.apache.http.entity.BufferedHttpEntity: long getContentLength()> -> _SOURCE_
<java.util.Scanner: short nextShort()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.widget.Button getCancelButton()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: java.lang.String name()> -> _SOURCE_
<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<java.io.InputStream: long skip(long)> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.RSeq: long getSeqNumber()> -> _SOURCE_
<android.net.http.SslError: int getPrimaryError()> -> _SOURCE_
<android.os.CountDownTimer: long access$000(android.os.CountDownTimer)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()> -> _SOURCE_
<android.opengl.GLLogWrapper$PointerInfo: int getStride()> -> _SOURCE_
<android.app.ContextImpl: android.os.IBinder getActivityToken()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> -> _SOURCE_
<android.view.View: android.view.animation.Animation getAnimation()> -> _SOURCE_
<android.widget.GridLayout$5: int getAlignmentValue(android.view.View,int,int)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getEmailAddress()> -> _SOURCE_
<android.telephony.TelephonyManager: int getDataState()> -> _SOURCE_
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)> -> _SOURCE_
<android.widget.RemoteViewsService: java.lang.Object access$000()> -> _SOURCE_
<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])> -> _SOURCE_
<java.util.AbstractList: java.util.ListIterator listIterator(int)> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMinimumSlideElementDuration()> -> _SOURCE_
<android.database.MergeCursor: int getType(int)> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()> -> _SOURCE_
<java.security.KeyStore$PasswordProtection: char[] getPassword()> -> _SOURCE_
<java.nio.LongBuffer: int hashCode()> -> _SOURCE_
<com.android.mms.ui.SlideshowPresenter: int getLocation()> -> _SOURCE_
<java.net.Socket: int getSoLinger()> -> _SOURCE_
<android.view.IWindowSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.SystemService: android.os.SystemService$State getState(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getLoadWithOverviewMode()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int,int)> -> _SOURCE_
<com.android.exchange.adapter.GalParser: com.android.exchange.provider.GalResult getGalResult()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<android.text.DynamicLayout: int getLineTop(int)> -> _SOURCE_
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplicationIndex(int)> -> _SOURCE_
<com.android.deskclock.TimePicker: int getMinutes()> -> _SOURCE_
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()> -> _SOURCE_
<android.widget.ListPopupWindow: long getSelectedItemId()> -> _SOURCE_
<android.widget.TextView: int getMarqueeRepeatLimit()> -> _SOURCE_
<android.webkit.WebSettings: int getMinimumFontSize()> -> _SOURCE_
<android.telephony.SmsMessage: int getStatus()> -> _SOURCE_
<android.nfc.INfcAdapter$Stub$Proxy: int getState()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.util.Iterator getNameLookupKeys(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getMimeType()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String toString()> -> _SOURCE_
<com.google.android.mms.pdu.ReadRecInd: long getDate()> -> _SOURCE_
<javax.security.auth.x500.X500Principal: byte[] getEncoded()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getMinusSign()> -> _SOURCE_
<java.net.DefaultFileNameMap: java.lang.String getContentTypeFor(java.lang.String)> -> _SOURCE_
<android.location.ICountryDetector$Stub$Proxy: android.location.Country detectCountry()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getPerMill()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()> -> _SOURCE_
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()> -> _SOURCE_
<java.text.DateFormat: java.lang.String format(java.util.Date)> -> _SOURCE_
<android.view.View: int getScrollBarSize()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte[] wrap()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.util.Collection values()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)> -> _SOURCE_
<com.android.music.MusicUtils: long[] getAllSongs(android.content.Context)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getLevel()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getRingingPhone()> -> _SOURCE_
<java.security.Provider: double getVersion()> -> _SOURCE_
<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate getCertificate()> -> _SOURCE_
<com.android.internal.statusbar.StatusBarNotification: com.android.internal.statusbar.StatusBarNotification clone()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab getTabFromView(android.webkit.WebView)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: java.lang.String getDescription(int)> -> _SOURCE_
<com.android.mms.model.RegionModel: int getWidth()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeySpecParser: int getCode(java.lang.String,com.android.inputmethod.keyboard.internal.KeyboardCodesSet)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1SequenceParser parser()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountName()> -> _SOURCE_
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)> -> _SOURCE_
<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long)> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker: android.text.TextPaint access$100(com.android.systemui.statusbar.phone.Ticker)> -> _SOURCE_
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)> -> _SOURCE_
<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()> -> _SOURCE_
<android.widget.SimpleAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.ArrayList)> -> _SOURCE_
<com.android.vcard.VCardEntry$WebsiteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.google.common.collect.Lists$StringAsImmutableList: java.lang.Character get(int)> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.util.Date getLastModified()> -> _SOURCE_
<com.android.server.ServiceWatcher: int getBestVersion()> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: java.security.Provider getProvider(java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: int getContentClass()> -> _SOURCE_
<com.google.common.io.ByteStreams$4: java.io.InputStream getInput()> -> _SOURCE_
<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.util.Set elementSet()> -> _SOURCE_
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getLastAccessedTime()> -> _SOURCE_
<com.android.settings.PrivacySettings: int getHelpResource()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getLocalParty()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getDispositionType()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: int getSectionForPosition(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Indentation: java.lang.String getIndentation()> -> _SOURCE_
<org.apache.commons.codec.binary.Hex: byte[] decode(byte[])> -> _SOURCE_
<com.android.emailcommon.provider.Account: long getDefaultAccountId(android.content.Context)> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(android.content.ComponentName)> -> _SOURCE_
<android.content.ContentService: java.util.List getCurrentSyncs()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.util.List getPendingMmiCodes()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: java.lang.String restoreBodyTextWithMessageId(android.content.Context,long)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.String toString()> -> _SOURCE_
<android.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()> -> _SOURCE_
<android.app.WallpaperInfo: java.lang.String getPackageName()> -> _SOURCE_
<java.util.Calendar: java.lang.Object clone()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI parse()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.header.Via getViaHeader()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindGroupMembership(android.content.Context)> -> _SOURCE_
<com.android.browser.UrlInputView: android.widget.ListAdapter getAdapter()> -> _SOURCE_
<android.text.Layout: int getHeight()> -> _SOURCE_
<java.lang.reflect.Field: short getShort(java.lang.Object)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: java.lang.Object getState()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)> -> _SOURCE_
<android.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getOpacity()> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatSymbolsLocales()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction malformedInputAction()> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SOURCE_
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: int[] getNextIndexToLoad()> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker$Segment: android.text.StaticLayout getLayout(java.lang.CharSequence)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable)> -> _SOURCE_
<java.io.File: long getFreeSpace()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByIndex(int)> -> _SOURCE_
<android.content.pm.Signature: java.security.PublicKey getPublicKey()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: float getLabelBottom(com.android.settings.widget.ChartSweepView)> -> _SOURCE_
<java.util.Locale: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.Object clone()> -> _SOURCE_
<com.android.server.location.LocationProviderProxy: java.lang.String getName()> -> _SOURCE_
<com.android.contacts.calllog.CallTypeHelper: java.lang.CharSequence getCallTypeText(int)> -> _SOURCE_
<android.filterfw.core.GLFrame: float[] getFloats()> -> _SOURCE_
<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()> -> _SOURCE_
<android.widget.DatePicker: boolean getCalendarViewShown()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)> -> _SOURCE_
<java.util.Collections$CopiesList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.Utils: java.lang.String generateTag()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getNextToken()> -> _SOURCE_
<org.apache.harmony.security.x509.ORAddress$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri,android.database.Cursor)> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult()> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getLocalName(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Priority: java.lang.String getPriority()> -> _SOURCE_
<com.android.mms.model.MediaModel: boolean getMediaResizable()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)> -> _SOURCE_
<java.net.URISyntaxException: int getIndex()> -> _SOURCE_
<android.filterfw.geometry.Quad: java.lang.String toString()> -> _SOURCE_
<com.android.internal.database.SortCursor: byte[] getBlob(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getQOP()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getNthPreviousWord(java.lang.String,int)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getAfter()> -> _SOURCE_
<com.android.systemui.statusbar.policy.DateView: int getSuggestedMinimumWidth()> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getProtocolVersion()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getUseClientMode()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getPreviousSibling()> -> _SOURCE_
<com.android.settings.wifi.Summary: java.lang.String get(android.content.Context,android.net.NetworkInfo$DetailedState)> -> _SOURCE_
<java.lang.reflect.Array: int getInt(java.lang.Object,int)> -> _SOURCE_
<android.graphics.Insets: java.lang.String toString()> -> _SOURCE_
<com.google.common.base.Predicates: com.google.common.base.Predicate equalTo(java.lang.Object)> -> _SOURCE_
<java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneLabel()> -> _SOURCE_
<android.util.XmlPullAttributes: int getStyleAttribute()> -> _SOURCE_
<java.math.BigDecimal: byte byteValueExact()> -> _SOURCE_
<android.webkit.WebViewClassic: int getTitleHeight()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering nullsFirst()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.SubscriptionStateHeader createSubscriptionStateHeader(java.lang.String)> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getDirection()> -> _SOURCE_
<java.lang.reflect.Field: long getLong(java.lang.Object)> -> _SOURCE_
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()> -> _SOURCE_
<java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PChargingFunctionAddressesHeader createPChargingFunctionAddressesHeader()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.view.ViewConfiguration: int getJumpTapTimeout()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.util.Iterator getParameterNames()> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<com.android.exchange.adapter.MoveItemsParser: java.lang.String getNewServerId()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerInetAddress()> -> _SOURCE_
<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.CallIdHeader createCallIdHeader(java.lang.String)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: int[] getRtpPayloadTypes()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()> -> _SOURCE_
<android.content.ContentResolver: android.content.IContentService getContentService()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: boolean isEmpty()> -> _SOURCE_
<android.net.http.Headers: int getConnectionType()> -> _SOURCE_
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Message: int getFavoriteMessageCount(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getLineNumber()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getInstanceFollowRedirects()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructStatFs fstatfs(java.io.FileDescriptor)> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothClass getBtClass()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.util.LruCache access$1800(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<android.telephony.SmsCbLocation: int getCid()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> -> _SOURCE_
<gov.nist.javax.sip.header.From: java.lang.String encodeBody()> -> _SOURCE_
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmSMSDispatcher: java.lang.String getFormat()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: byte[] genExemptionBlob()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: android.widget.RemoteViews getLoadingView()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getMonths()> -> _SOURCE_
<com.android.internal.telephony.DataCallState$SetupResult: java.lang.String toString()> -> _SOURCE_
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()> -> _SOURCE_
<com.android.browser.ErrorConsoleView: int getShowState()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: android.content.Context getContext()> -> _SOURCE_
<android.app.ActivityOptions: java.lang.String getPackageName()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getAutoExposureLock()> -> _SOURCE_
<android.webkit.WebViewClassic: float getDefaultZoomScale()> -> _SOURCE_
<java.net.URI: java.lang.String getHost()> -> _SOURCE_
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.bluetooth.IBluetoothHeadsetPhone getBluetoothPhoneService()> -> _SOURCE_
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()> -> _SOURCE_
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getCurrentType(android.database.Cursor,com.android.contacts.model.dataitem.DataKind)> -> _SOURCE_
<java.util.zip.Deflater: long getBytesWritten()> -> _SOURCE_
<android.app.ListActivity: android.widget.ListView getListView()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> -> _SOURCE_
<android.location.Location: java.lang.String toString()> -> _SOURCE_
<android.location.LocationProvider: int getAccuracy()> -> _SOURCE_
<android.widget.GridLayout: boolean isColumnOrderPreserved()> -> _SOURCE_
<com.android.inputmethod.latin.InputPointers: int[] getXCoordinates()> -> _SOURCE_
<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()> -> _SOURCE_
<com.android.systemui.statusbar.policy.IntruderAlertView: android.view.View getChildAtPosition(android.view.MotionEvent)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$6: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo)> -> _SOURCE_
<com.google.common.collect.SortedIterables: java.util.Collection sortedCounts(java.util.Comparator,java.lang.Iterable)> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: java.lang.String getWord(int)> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: int getMaxDisplayPhotoSize()> -> _SOURCE_
<android.view.SurfaceView$4: android.view.Surface getSurface()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getPragma()> -> _SOURCE_
<android.content.ClipData$Item: java.lang.CharSequence getText()> -> _SOURCE_
<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)> -> _SOURCE_
<com.android.camera.ComboPreferences: long getLong(java.lang.String,long)> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String status()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.Multiset$Entry firstEntry()> -> _SOURCE_
<android.app.Activity: android.app.ActionBar getActionBar()> -> _SOURCE_
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getUserAgent()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: int getPhoneticNameStyle()> -> _SOURCE_
<android.content.ContentProviderProxy: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<android.text.DynamicLayout: int[] getBlockIndices()> -> _SOURCE_
<java.util.logging.Level: java.lang.String getResourceBundleName()> -> _SOURCE_
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()> -> _SOURCE_
<libcore.util.ZoneInfo: int getDSTSavings()> -> _SOURCE_
<java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)> -> _SOURCE_
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.widget.LinearLayout: int getShowDividers()> -> _SOURCE_
<com.android.emailcommon.mail.Multipart: com.android.emailcommon.mail.BodyPart getBodyPart(int)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()> -> _SOURCE_
<com.android.inputmethod.latin.ResourceUtils: float getFraction(android.content.res.TypedArray,int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: java.util.Calendar getJavaCal()> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView: long getLimitBytes()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Set userAliases()> -> _SOURCE_
<android.telephony.ServiceState: int getCssIndicator()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaders(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground()> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl$2: gov.nist.javax.sip.clientauthutils.UserCredentials getCredentials(javax.sip.ClientTransaction,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)> -> _SOURCE_
<java.util.Scanner: java.math.BigDecimal nextBigDecimal()> -> _SOURCE_
<android.location.IGpsStatusProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.lang.Math: int getExponent(double)> -> _SOURCE_
<java.util.WeakHashMap$Entry: java.lang.Object getValue()> -> _SOURCE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getLineInstance(java.util.Locale)> -> _SOURCE_
<android.os.IMessenger$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.header.MimeVersion: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<com.android.mms.data.Contact: android.net.Uri getPhoneUri()> -> _SOURCE_
<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()> -> _SOURCE_
<java.util.TimerTask: boolean isScheduled()> -> _SOURCE_
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()> -> _SOURCE_
<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfigurationLocked()> -> _SOURCE_
<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalY(int,int)> -> _SOURCE_
<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> android.permission.READ_SYNC_STATS -> _SOURCE_
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)> -> _SOURCE_
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> -> _SOURCE_
<com.android.browser.BaseUi: android.graphics.drawable.Drawable getFaviconDrawable(android.graphics.Bitmap)> -> _SOURCE_
<com.android.browser.Tab: java.lang.String getUrl()> -> _SOURCE_
<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getMessageWaitingIndicator()> -> _SOURCE_
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()> -> _SOURCE_
<java.security.Provider: java.util.Collection values()> -> _SOURCE_
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.net.WebAddress: int getPort()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Iterator createEntryIterator()> -> _SOURCE_
<android.webkit.DateSorter: int getIndex(long)> -> _SOURCE_
<com.android.internal.telephony.SmsHeader: java.lang.String toString()> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollY()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()> -> _SOURCE_
<java.io.File: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByName(java.lang.String)> -> _SOURCE_
<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: int[] access$100()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: int getTag()> -> _SOURCE_
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.lang.Object last()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: int getGroupSize(int)> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<android.widget.ListView: int getDividerHeight()> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)> -> _SOURCE_
<com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getFromTag()> -> _SOURCE_
<android.view.Gravity: int getAbsoluteGravity(int,int)> -> _SOURCE_
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: java.lang.String toString()> -> _SOURCE_
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String getPositiveSuffix()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getCustomRingtone()> -> _SOURCE_
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()> -> _SOURCE_
<org.apache.http.ProtocolVersion: int getMajor()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionCacheSize()> -> _SOURCE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getState()> -> _SOURCE_
<android.os.IHardwareService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.app.ActivityManager: java.util.Map getAllPackageLaunchCounts()> -> _SOURCE_
<android.preference.MultiCheckPreference: boolean getValue(int)> -> _SOURCE_
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()> -> _SOURCE_
<android.content.Intent: java.lang.Object clone()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: float getAnimationScale(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: long getDate()> -> _SOURCE_
<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()> -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String,java.util.Map)> -> _SOURCE_
<java.lang.Character: int getNumericValue(char)> -> _SOURCE_
<android.net.Uri: java.lang.String toSafeString()> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.mail.Multipart: int getCount()> -> _SOURCE_
<com.android.contacts.model.dataitem.WebsiteDataItem: java.lang.String getUrl()> -> _SOURCE_
<com.android.camera.ui.OtherSettingsPopup$OtherSettingsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getCollectionName()> -> _SOURCE_
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()> -> _SOURCE_
<java.io.EmulatedFields: byte get(java.lang.String,byte)> -> _SOURCE_
<android.view.View: int getHeight()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: int getCount()> -> _SOURCE_
<android.widget.ListPopupWindow: int getSelectedItemPosition()> -> _SOURCE_
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getAddress()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.TreeMultiset create(java.lang.Iterable)> -> _SOURCE_
<java.util.IdentityHashMap$1$1: java.lang.Object get(java.util.MapEntry)> -> _SOURCE_
<android.net.NetworkTemplate: int getMatchRule()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getBackgroundAlpha()> -> _SOURCE_
<com.android.phone.sip.SipSharedPreferences: int getProfilesCount()> -> _SOURCE_
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)> -> _SOURCE_
<android.media.DecoderCapabilities: java.util.List getAudioDecoders()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getAttributes()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)> -> _SOURCE_
<com.google.common.collect.ForwardingObject: java.lang.String toString()> -> _SOURCE_
<libcore.io.ForwardingOs: java.io.FileDescriptor socket(int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Authorization getAuthorization()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)> -> _SOURCE_
<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<com.android.browser.Tab: android.view.View getViewContainer()> -> _SOURCE_
<com.android.settings.AccountPreference: java.util.ArrayList getAuthorities()> -> _SOURCE_
<java.text.BreakIterator: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativeSuffix()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: com.android.inputmethod.latin.ExpandableDictionary$NextWord getBigramWord(java.lang.String,java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxExposureCompensation()> -> _SOURCE_
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)> -> _SOURCE_
<com.android.calendar.DayFragment: boolean isEventSelected()> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys: java.util.Iterator iterator()> -> _SOURCE_
<com.android.systemui.ExpandHelper$ViewScaler: float getHeight()> -> _SOURCE_
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection)> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getPostalCode()> -> _SOURCE_
<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()> -> _SOURCE_
<com.android.mms.transaction.Transaction: int getServiceId()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayWidth(int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.DuplicateNameValueList getMultiParameters()> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getSecureRandomService()> -> _SOURCE_
<javax.crypto.spec.SecretKeySpec: java.lang.String getFormat()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()> -> _SOURCE_
<android.media.ExifInterface: long getDateTime()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: long getExpires()> -> _SOURCE_
<android.os.IPowerManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getScrollX(java.lang.Object)> -> _SOURCE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: boolean getFeature(java.lang.String)> -> _SOURCE_
<android.view.LayoutInflater$FactoryMerger: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)> -> _SOURCE_
<org.apache.commons.io.output.ByteArrayOutputStream: byte[] toByteArray()> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmDataRoamingFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.exchange.ExchangeService: com.android.exchange.ExchangeService$AccountList access$600(android.content.Context,com.android.exchange.ExchangeService$AccountList)> -> _SOURCE_
<libcore.io.ForwardingOs: java.net.SocketAddress getsockname(java.io.FileDescriptor)> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: int getShuffleMode()> -> _SOURCE_
<com.android.mms.model.LayoutModel: int getLayoutWidth()> -> _SOURCE_
<android.widget.ListPopupWindow: android.view.View getAnchorView()> -> _SOURCE_
<com.android.settings.Settings$HeaderAdapter: int getItemViewType(int)> -> _SOURCE_
<java.math.BigDecimal: java.math.BigDecimal plus()> -> _SOURCE_
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getLineInstance()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: java.lang.String getString(int)> -> _SOURCE_
<org.xml.sax.SAXParseException: java.lang.String getPublicId()> -> _SOURCE_
<android.net.DhcpInfoInternal: java.lang.String toString()> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<android.text.style.CharacterStyle$Passthrough: android.text.style.CharacterStyle getUnderlying()> -> _SOURCE_
<com.android.contacts.editor.AggregationSuggestionEngine: android.os.Handler getHandler()> -> _SOURCE_
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()> -> _SOURCE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: java.lang.String getEfName()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothProfileManager: com.android.settings.bluetooth.LocalBluetoothProfile getProfileByName(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getNumFrequents()> -> _SOURCE_
<com.android.phone.CallNotifier: com.android.internal.telephony.Call$State getPreviousCdmaCallState()> -> _SOURCE_
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: long getItemId(int)> -> _SOURCE_
<libcore.net.url.FtpURLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getViewportOffsetY()> -> _SOURCE_
<gov.nist.javax.sip.header.UserAgent: java.lang.Object clone()> -> _SOURCE_
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getStreamItems()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getCreateContactActivityClassName()> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)> -> _SOURCE_
<com.android.contacts.list.DirectoryPartition: java.lang.String getDirectoryType()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.Object clone()> -> _SOURCE_
<java.security.Security$SecurityDoor: java.util.List getAliases(java.security.Provider$Service)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.inputmethod.keyboard.ProximityInfo: long getNativeProximityInfo()> -> _SOURCE_
<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)> -> _SOURCE_
<gov.nist.core.ThreadAuditor: java.lang.String toString()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)> -> _SOURCE_
<com.android.providers.media.MediaProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.String getSourceClassName()> -> _SOURCE_
<com.android.internal.database.SortCursor: int getCount()> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: java.lang.String getAddress()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getFormattedAddress()> -> _SOURCE_
<android.webkit.WebView$PrivateAccess: float getHorizontalScrollFactor()> -> _SOURCE_
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getTemporaryMetaData()> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()> -> _SOURCE_
<android.graphics.drawable.shapes.Shape: float getHeight()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)> -> _SOURCE_
<gov.nist.core.Host: java.net.InetAddress getInetAddress()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: int getPortCount()> -> _SOURCE_
<android.telephony.TelephonyManager: int getDataActivity()> -> _SOURCE_
<java.security.Security: java.security.Provider[] getProviders(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()> -> _SOURCE_
<android.widget.AbsListView: float getTopFadingEdgeStrength()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils: java.lang.String getSortKey(java.lang.String,int)> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateInstance()> -> _SOURCE_
<java.security.KeyStore: java.lang.String getDefaultType()> -> _SOURCE_
<com.android.emailcommon.service.IEmailServiceCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)> -> _SOURCE_
<android.view.View: int getScrollBarDefaultDelayBeforeFade()> -> _SOURCE_
<android.media.AudioService: int getMasterVolume()> -> _SOURCE_
<com.android.contacts.util.ExpirableCache: java.lang.Object getPossiblyExpired(java.lang.Object)> -> _SOURCE_
<com.android.mms.data.WorkingMessage: com.android.mms.data.Conversation getConversation()> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile openJarFile()> -> _SOURCE_
<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage loadDraft(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Conversation,java.lang.Runnable)> -> _SOURCE_
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()> -> _SOURCE_
<android.content.pm.PackageParser$ActivityIntentInfo: java.lang.String toString()> -> _SOURCE_
<java.util.logging.LogRecord: java.util.logging.Level getLevel()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method[] getMethods()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()> -> _SOURCE_
<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String waitForEvent()> -> _SOURCE_
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SOURCE_
<android.inputmethodservice.InputMethodService: int getBackDisposition()> -> _SOURCE_
<android.widget.RemoteViews$SetOnClickPendingIntent: java.lang.String getActionName()> -> _SOURCE_
<com.android.mms.transaction.ReadRecTransaction: int getType()> -> _SOURCE_
<com.android.contacts.util.ThemeUtils: int getSelectableItemBackground(android.content.res.Resources$Theme)> -> _SOURCE_
<android.graphics.Canvas: int getMaximumBitmapHeight()> -> _SOURCE_
<android.service.dreams.IDreamService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog: android.widget.ListView getListView()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getY()> -> _SOURCE_
<android.os.CountDownTimer: android.os.CountDownTimer start()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsDetail()> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: int getLimit()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.util.ArrayList getContentValues()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getPattern()> -> _SOURCE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)> -> _SOURCE_
<android.net.wifi.WifiInfo: boolean getMeteredHint()> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.Object getValueAsObject()> -> _SOURCE_
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)> -> _SOURCE_
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getCurrentSpanX()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getTextContent()> -> _SOURCE_
<com.android.phone.PhoneUtils: java.lang.String getCompactNameFromCallerInfo(com.android.internal.telephony.CallerInfo,android.content.Context)> -> _SOURCE_
<com.android.settings.bluetooth.PanProfile: int getOrdinal()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|SYSTEM_SETTINGS
<gov.nist.javax.sip.header.ContentLength: int getContentLength()> -> _SOURCE_
<android.view.View: int getBottomPaddingOffset()> -> _SOURCE_
<org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.util.DialogManager: android.app.Dialog onCreateDialog(int,android.os.Bundle)> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getCountry()> -> _SOURCE_
<android.widget.GridView: int getRequestedHorizontalSpacing()> -> _SOURCE_
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getQName(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getEsn()> -> _SOURCE_
<com.android.mms.model.LayoutModel: com.android.mms.model.RegionModel getTextRegion()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyDetector: int getTouchY(int)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: int getEmailType()> -> _SOURCE_
<android.text.BoringLayout: int getParagraphDirection(int)> -> _SOURCE_
<android.widget.TextView: int getBaseline()> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: float getQValue()> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getTargetPackage()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralNames$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.os.Handler getHandler()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimSpnLoaded: java.lang.String getEfName()> -> _SOURCE_
<org.apache.http.util.CharArrayBuffer: char[] buffer()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: float maxCharsPerByte()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints: int getGestureStrokeId()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getItemViewType(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()> -> _SOURCE_
<java.text.ParseException: int getErrorOffset()> -> _SOURCE_
<java.util.AbstractQueue: java.lang.Object remove()> -> _SOURCE_
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy getInstance()> -> _SOURCE_
<android.net.NetworkStatsHistory: int getIndexBefore(long)> -> _SOURCE_
<com.android.providers.contacts.util.Clock: long currentTimeMillis()> -> _SOURCE_
<com.android.contacts.util.ExpirableCache$GenerationalCachedValue: java.lang.Object getValue()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getWindowId(java.lang.Object)> -> _SOURCE_
<com.android.calendar.DayView: com.android.calendar.Event getNewEvent(int,long,int)> -> _SOURCE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues()> -> _SOURCE_
<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()> -> _SOURCE_
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String toString()> -> _SOURCE_
<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentLength: java.lang.String encodeBody()> -> _SOURCE_
<com.android.ex.chips.Queries$2: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()> -> _SOURCE_
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<android.support.v4.view.ViewPager: int getChildDrawingOrder(int,int)> -> _SOURCE_
<com.android.internal.widget.LockPatternView$Cell: java.lang.String toString()> -> _SOURCE_
<com.android.phone.sip.SipSharedPreferences: java.lang.String getSipCallOption()> -> _SOURCE_
<org.xml.sax.SAXParseException: int getLineNumber()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalY(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getInternalSubset()> -> _SOURCE_
<gov.nist.core.Host: java.lang.String encode()> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()> -> _SOURCE_
<com.android.browser.Preloader$PreloaderSession: android.webkit.WebView getWebView()> -> _SOURCE_
<java.net.URLConnection: boolean getDefaultAllowUserInteraction()> -> _SOURCE_
<com.android.contacts.vcard.ExportProcessor: int getType()> -> _SOURCE_
<com.google.android.mms.pdu.CharacterSets: java.lang.String getMimeName(int)> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()> -> _SOURCE_
<android.app.IStopUserCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()> -> _SOURCE_
<org.apache.http.impl.EnglishReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)> -> _SOURCE_
<com.android.providers.contacts.util.MemoryUtils: long getTotalMemorySize()> -> _SOURCE_
<java.util.Hashtable$HashtableEntry: java.lang.Object getValue()> -> _SOURCE_
<android.view.animation.BounceInterpolator: float getInterpolation(float)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getPhoto()> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: java.util.Set keySet()> -> _SOURCE_
<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)> -> _SOURCE_
<com.android.camera.Thumbnail: com.android.camera.Thumbnail loadFrom(java.io.File)> -> _SOURCE_
<android.app.ContextImpl: java.lang.String getPackageCodePath()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getContentId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEROctetStringParser: java.io.InputStream getOctetStream()> -> _SOURCE_
<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()> -> _SOURCE_
<com.android.browser.BaseUi: boolean isTitleBarShowing()> -> _SOURCE_
<android.widget.TextView: java.util.Locale getTextLocale()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: java.lang.String getAdjustedTime()> -> _SOURCE_
<libcore.internal.StringPool: java.lang.String get(char[],int,int)> -> _SOURCE_
<java.util.regex.PatternSyntaxException: int getIndex()> -> _SOURCE_
<com.android.server.WifiService: android.net.wifi.WifiInfo getConnectionInfo()> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)> -> _SOURCE_
<com.android.browser.view.PieItem: int getLevel()> -> _SOURCE_
<android.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()> -> _SOURCE_
<com.android.server.pm.UserManagerService: int[] getUserIds()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentLanguageHeader createContentLanguageHeader(java.util.Locale)> -> _SOURCE_
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri)> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: int getType()> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: long getItemId(int)> -> _SOURCE_
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getSync4()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getNeedClientAuth()> -> _SOURCE_
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)> -> _SOURCE_
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getPointer()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()> -> _SOURCE_
<com.android.providers.contacts.AbstractContactsProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()> -> _SOURCE_
<org.apache.harmony.security.x501.Name$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.Object getTag()> -> _SOURCE_
<android.database.CursorWrapper: boolean isClosed()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()> -> _SOURCE_
<android.view.View$7: java.lang.Float get(android.view.View)> -> _SOURCE_
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int standardSize()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getName()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine: java.lang.String getName()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()> -> _SOURCE_
<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getPidStats()> -> _SOURCE_
<android.widget.TextView: float getShadowRadius()> -> _SOURCE_
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.Menu getMenu()> -> _SOURCE_
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getBytesPerSample()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccCardApplicationStatus$AppType getCurrentUiccAppType()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()> -> _SOURCE_
<java.io.ObjectInputStream: double readDouble()> -> _SOURCE_
<com.android.settings.SoundSettings: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getValue()> -> _SOURCE_
<java.lang.Enum: java.lang.Class getDeclaringClass()> -> _SOURCE_
<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: android.text.Html$ImageGetter getImageGetter(android.content.Context)> -> _SOURCE_
<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()> -> _SOURCE_
<java.nio.HeapByteBuffer: short getShort()> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoDbm()> -> _SOURCE_
<android.view.View: int getVerticalScrollbarWidth()> -> _SOURCE_
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()> -> _SOURCE_
<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)> -> _SOURCE_
<android.preference.EditTextPreference: java.lang.String getText()> -> _SOURCE_
<java.nio.PipeImpl$PipeSinkChannel: java.io.FileDescriptor getFD()> -> _SOURCE_
<gov.nist.javax.sip.header.InReplyTo: java.lang.String encodeBody()> -> _SOURCE_
<com.android.vcard.VCardEntry$NicknameData: java.lang.String getNickname()> -> _SOURCE_
<java.util.Formatter$FormatToken: int getWidth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSendBufferSize()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getInternationalPrefix()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PAccessNetworkInfoHeader createPAccessNetworkInfoHeader()> -> _SOURCE_
<android.hardware.Sensor: float getResolution()> -> _SOURCE_
<android.filterfw.core.SerializedFrame: int[] getInts()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.Object clone()> -> _SOURCE_
<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)> -> _SOURCE_
<android.widget.GridLayout: int getOrientation()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getComment()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.String toGenericString()> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)> -> _SOURCE_
<java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.NameDistance: float getDistance(byte[],byte[])> -> _SOURCE_
<java.util.zip.Inflater: long getBytesRead()> -> _SOURCE_
<java.sql.Date: int getHours()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getX()> -> _SOURCE_
<android.net.NetworkInfo: int getType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey getInstance(org.apache.harmony.xnet.provider.jsse.OpenSSLKey)> -> _SOURCE_
<com.android.contacts.ContactPhotoManagerImpl$Request: java.lang.Object getKey()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints getGestureStrokeWithPreviewPoints()> -> _SOURCE_
<java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.vcard.VCardEntry$NoteData: java.lang.String toString()> -> _SOURCE_
<android.bluetooth.BluetoothClass: java.lang.String toString()> -> _SOURCE_
<org.apache.http.message.BufferedHeader: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getCount()> -> _SOURCE_
<java.net.URL: int getDefaultPort()> -> _SOURCE_
<android.location.GeocoderParams: java.util.Locale getLocale()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean getMessageWaitingIndicator()> -> _SOURCE_
<gov.nist.javax.sip.header.InReplyTo: java.lang.Object clone()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Insets getLayoutInsets()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getNonEmptyLine()> -> _SOURCE_
<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()> -> _SOURCE_
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: int getPort()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String encodeBody()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()> -> _SOURCE_
<gov.nist.core.StringTokenizer: java.lang.String getLine()> -> _SOURCE_
<android.view.View$9: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getContentSize(int)> -> _SOURCE_
<android.support.v4.view.ViewPager: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: long getFirstAtomicBucketMillis()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: long getDurationMillis()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object getLast()> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDeath()> -> _SOURCE_
<android.content.CursorLoader: android.database.Cursor loadInBackground()> -> _SOURCE_
<com.android.exchange.utility.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)> -> _SOURCE_
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)> -> _SOURCE_
<android.util.SparseLongArray: long get(int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: byte[] readFully(java.io.FileInputStream)> -> _SOURCE_
<android.webkit.WebViewClassic: int getWidth()> -> _SOURCE_
<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache create(int)> -> _SOURCE_
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()> -> _SOURCE_
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: int getCdmaEriIconIndex()> -> _SOURCE_
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)> -> _SOURCE_
<android.app.Activity: java.lang.String getLocalClassName()> -> _SOURCE_
<android.webkit.WebSettings: int getMinimumLogicalFontSize()> -> _SOURCE_
<android.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()> -> _SOURCE_
<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: int getContentAppWidgetId()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getProcessStats()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])> -> _SOURCE_
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)> -> _SOURCE_
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: boolean isEmpty()> -> _SOURCE_
<com.android.mms.dom.NamedNodeMapImpl: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request)> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getPhoneNumber()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<java.lang.Runtime: java.lang.Runtime getRuntime()> -> _SOURCE_
<android.view.ViewRootImpl: android.view.View getView()> -> _SOURCE_
<java.util.Formatter: java.lang.String toString()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: android.content.pm.UserInfo getUserInfo()> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()> -> _SOURCE_
<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()> -> _SOURCE_
<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()> -> _SOURCE_
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String[] getSecureContainerList()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getDeviceId()> -> _SOURCE_
<android.content.pm.IPackageMoveObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.soundrecorder.Recorder: int getMaxAmplitude()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCRLs()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver getAddressResolver()> -> _SOURCE_
<com.android.contacts.model.Contact: long getFirstWritableRawContactId(android.content.Context)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getViewTypeCount()> -> _SOURCE_
<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtPosition(float,float)> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: long getMessageSize()> -> _SOURCE_
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> -> _SOURCE_
<com.android.contacts.list.PhoneNumberListAdapter: com.android.contacts.list.ContactListItemView$PhotoPosition getPhotoPosition()> -> _SOURCE_
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String getLabel()> -> _SOURCE_
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getName()> -> _SOURCE_
<javax.crypto.Mac: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.PinListEntry: boolean getEnforcing()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: android.os.Parcelable getParcelableData(java.lang.Object)> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String toString()> -> _SOURCE_
<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntent(java.lang.String)> -> _SOURCE_
<com.android.mms.transaction.TransactionState: int getState()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getMonth()> -> _SOURCE_
<android.location.ICountryDetector$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getSystemId()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.lang.CharSequence access$700(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<android.hardware.display.IDisplayManager$Stub$Proxy: int[] getDisplayIds()> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: boolean isStale()> -> _SOURCE_
<com.android.exchange.adapter.Search$SearchParser: int getTotalResults()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$002(com.android.internal.telephony.cdma.RuimRecords,byte[])> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)> -> _SOURCE_
<android.view.View: int getScrollX()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.ContactPhotoManager getPhotoLoader()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField)> -> _SOURCE_
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> -> _SOURCE_
<java.math.BigInteger: double doubleValue()> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asList()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.util.Date getSentDate()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])> -> _SOURCE_
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()> -> _SOURCE_
<android.location.Criteria: int getVerticalAccuracy()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)> -> _SOURCE_
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getBase64(java.lang.String)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: java.lang.String getNodeName()> -> _SOURCE_
<com.android.contacts.editor.EventFieldEditorView: android.app.Dialog createDialog(android.os.Bundle)> -> _SOURCE_
<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)> -> _SOURCE_
<libcore.util.ZoneInfo: int getOffset(int,int,int,int,int,int)> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$SinglePressAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)> -> _SOURCE_
<android.widget.AbsListView: android.view.View getSelectedView()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()> -> _SOURCE_
<com.android.contacts.util.DataStatus: int getPresence()> -> _SOURCE_
<gov.nist.javax.sip.DialogTimeoutEvent: javax.sip.Dialog getDialog()> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getAlt()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getAttributeNames()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableSet createEntrySet()> -> _SOURCE_
<android.nfc.Tag: android.os.Bundle getTechExtras(int)> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName,int)> -> _SOURCE_
<android.location.IGpsStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object clone()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: void getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> -> _SOURCE_
<android.text.method.MetaKeyKeyListener: int getMetaState(long)> -> _SOURCE_
<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key[] getNearestKeys(int,int)> -> _SOURCE_
<com.android.server.power.DisplayPowerState$1: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortClient()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getRemovedCount(java.lang.Object)> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: int getCursorCapsMode(int,java.util.Locale,boolean)> -> _SOURCE_
<com.android.camera.Exif: int getOrientation(byte[])> -> _SOURCE_
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()> -> _SOURCE_
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)> -> _SOURCE_
<com.google.common.collect.BstOperations: com.google.common.collect.BstNode insertMax(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)> -> _SOURCE_
<com.android.inputmethod.latin.TargetApplicationGetter: android.content.pm.ApplicationInfo getCachedApplicationInfo(java.lang.String)> -> _SOURCE_
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getTitle()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()> -> _SOURCE_
<android.net.ConnectivityManager: boolean isNetworkSupported(int)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getPosition()> -> _SOURCE_
<android.view.GLES20Canvas: int getWidth()> -> _SOURCE_
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)> -> _SOURCE_
<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<android.view.TextureView: android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: com.android.emailcommon.mail.Body getBody()> -> _SOURCE_
<android.graphics.Rect: java.lang.String flattenToString()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()> -> _SOURCE_
<java.nio.IntArrayBuffer: int get()> -> _SOURCE_
<java.security.AccessControlException: java.security.Permission getPermission()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: long[] getLongIntArray(android.content.res.Resources,int)> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.Throwable getThrown()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)> -> _SOURCE_
<android.text.Layout: float getPrimaryHorizontal(int)> -> _SOURCE_
<com.android.music.MusicUtils: long getCurrentAlbumId()> -> _SOURCE_
<com.android.contacts.group.GroupListItem: java.lang.String getAccountType()> -> _SOURCE_
<com.android.settings.DataUsageSummary$CycleEditorFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)> -> _SOURCE_
<org.json.JSONTokener: java.lang.String toString()> -> _SOURCE_
<com.android.mms.model.SlideModel: java.lang.Object[] toArray()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceLanguageModeId()> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadResolve()> -> _SOURCE_
<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccFileHandler getIccFileHandler(int)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: java.util.concurrent.locks.Condition newCondition()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable)> -> _SOURCE_
<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)> -> _SOURCE_
<android.preference.PreferenceActivity: java.util.List getHeaders()> -> _SOURCE_
<android.net.NetworkStatsHistory: long getStart()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> -> _SOURCE_
<android.app.PendingIntent: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: int getAction()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: int getVersion()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificatePolicies: byte[] getEncoded()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getState()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType)> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.WebIconDatabase getWebIconDatabase()> -> _SOURCE_
<org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset getCharset(java.lang.String)> -> _SOURCE_
<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: long getTotalBytes()> -> _SOURCE_
<android.app.KeyguardManager: boolean isKeyguardLocked()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> -> _SOURCE_
<java.security.spec.ECFieldF2m: int getFieldSize()> -> _SOURCE_
<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)> -> _SOURCE_
<java.io.EmulatedFields: float get(java.lang.String,float)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getContentDisposition()> -> _SOURCE_
<java.math.BigInt: byte[] bigEndianMagnitude()> -> _SOURCE_
<android.view.IInputFilter$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: java.util.List getAllCellInfo()> -> _SOURCE_
<com.android.internal.telephony.cat.ComprehensionTlv: int getTag()> -> _SOURCE_
<android.net.NetworkPolicy: java.lang.String toString()> -> _SOURCE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(android.net.WebAddress)> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$2000(com.android.calendar.EventInfoFragment)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getCurrentItemIndex(java.lang.Object)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.list.ContactEntryListAdapter getAdapter()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ViewDelegate getViewDelegate()> -> _SOURCE_
<com.android.camera.ui.SharePopup$MySimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: int getLevel()> -> _SOURCE_
<android.filterfw.geometry.Quad: float getBoundingHeight()> -> _SOURCE_
<android.view.IDisplayContentChangeListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.storage.StorageManager: java.util.List access$000(android.os.storage.StorageManager)> -> _SOURCE_
<android.util.AtomicFile: byte[] readFully()> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.TextMessage geTextMessage()> -> _SOURCE_
<android.view.PointerIcon: float getHotSpotY()> -> _SOURCE_
<java.util.AbstractSequentialList: java.util.Iterator iterator()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)> -> _SOURCE_
<android.os.Environment: java.io.File getMediaStorageDirectory()> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: int getHopCount()> -> _SOURCE_
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> -> _SOURCE_
<android.app.ProgressDialog: boolean isIndeterminate()> -> _SOURCE_
<java.nio.ReadWriteHeapByteBuffer: byte[] protectedArray()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: java.lang.String getEfName()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebView$HitTestResult getHitTestResult()> -> _SOURCE_
<android.widget.AdapterView: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.util.AtomicFile: java.io.FileOutputStream startWrite()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.settings.bluetooth.HeadsetProfile: int getOrdinal()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getInterval()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ExpatLocator: java.lang.String getPublicId()> -> _SOURCE_
<java.util.logging.LogRecord: long getMillis()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509NameEntryConverter: boolean canBePrintable(java.lang.String)> -> _SOURCE_
<android.content.pm.ServiceInfo: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.ContactsActivity: android.app.Fragment getFragment(int)> -> _SOURCE_
<com.android.mms.model.MediaModel: int getBegin()> -> _SOURCE_
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()> -> _SOURCE_
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> -> _SOURCE_
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()> -> _SOURCE_
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)> -> _SOURCE_
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getHorizontalGap()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getContainerId()> -> _SOURCE_
<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getCellBroadcastSmsConfig(android.os.Message)> -> _SOURCE_
<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getWidth(int)> -> _SOURCE_
<gov.nist.javax.sip.header.CallInfo: java.lang.Object clone()> -> _SOURCE_
<com.android.phone.CallNotifier: boolean isRinging()> -> _SOURCE_
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)> -> _SOURCE_
<android.media.AudioManager: int getMode()> -> _SOURCE_
<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build()> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()> -> _SOURCE_
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> -> _SOURCE_
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,long)> -> _SOURCE_
<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)> -> _SOURCE_
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)> -> _SOURCE_
<android.security.KeyStore: android.security.KeyStore getInstance()> -> _SOURCE_
<com.google.common.collect.EmptyImmutableList: java.lang.Object get(int)> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object getNext(java.util.Iterator,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.SmsRawData: byte[] getBytes()> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountType()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: android.view.InputDevice getInputDevice(int)> -> _SOURCE_
<android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)> -> _SOURCE_
<android.net.ThrottleManager: java.lang.String getHelpUri()> -> _SOURCE_
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)> -> _SOURCE_
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)> -> _SOURCE_
<com.android.emailcommon.mail.Message: java.util.Date getInternalDate()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getMasterMaxVolume()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getNotifyWapMMSC()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> -> _SOURCE_
<com.google.common.collect.BstModificationResult: com.google.common.collect.BstNode getOriginalTarget()> -> _SOURCE_
<android.text.BoringLayout: float getLineMax(int)> -> _SOURCE_
<com.android.mms.ui.RecipientsEditor: int getRecipientCount()> -> _SOURCE_
<android.content.res.TypedArray: float getDimension(int,float)> -> _SOURCE_
<com.android.contacts.model.ContactLoader: com.android.contacts.model.Contact loadInBackground()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()> -> _SOURCE_
<java.io.File: java.lang.String getParent()> -> _SOURCE_
<android.inputmethodservice.Keyboard$Key: int[] parseCSV(java.lang.String)> -> _SOURCE_
<com.android.calendar.Utils: int getViewTypeFromIntentAndSharedPref(android.app.Activity)> -> _SOURCE_
<java.util.TreeMap: java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation)> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] access$000(org.apache.harmony.security.x509.AuthorityKeyIdentifier)> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getUri()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: int getPositionForSection(int)> -> _SOURCE_
<java.net.Authenticator: java.lang.String getRequestingHost()> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo: java.lang.String getLogMessageForNetworkError(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> -> _SOURCE_
<com.android.internal.telephony.DataCallState: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebSettings: int getUserAgent()> -> _SOURCE_
<com.android.camera.IconListPreference: int[] getImageIds()> -> _SOURCE_
<android.text.Annotation: java.lang.String getKey()> -> _SOURCE_
<com.android.contacts.list.ContactTileView: android.view.View$OnClickListener createClickListener()> -> _SOURCE_
<android.webkit.WebViewClassic$FocusTransitionDrawable: float getProgress()> -> _SOURCE_
<android.webkit.WebViewClassic: int getContentHeight()> -> _SOURCE_
<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()> -> _SOURCE_
<com.android.internal.app.IUsageStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.database.CursorWrapper: boolean isAfterLast()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getBulkEncryptionAlgorithm()> -> _SOURCE_
<android.media.AudioManager: int getStreamMaxVolume(int)> -> _SOURCE_
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()> -> _SOURCE_
<android.app.backup.IRestoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: long getItemId(int)> -> _SOURCE_
<com.google.common.collect.RegularImmutableSortedSet: com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean)> -> _SOURCE_
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()> -> _SOURCE_
<com.android.browser.SnapshotTab: long getId()> -> _SOURCE_
<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)> -> _SOURCE_
<com.android.vcard.VCardProperty: java.util.Collection getParameters(java.lang.String)> -> _SOURCE_
<javax.net.ssl.SSLEngine: int getPeerPort()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerHello: int getType()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: int getPhoneState()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList createAsList()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isDnsCheckDisabled()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getResponseChannel()> -> _SOURCE_
<java.lang.Class: java.lang.Object newInstance()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getDataCallList(android.os.Message)> -> _SOURCE_
<android.content.Loader: android.content.Context getContext()> -> _SOURCE_
<android.filterfw.core.SimpleFrame: float[] getFloats()> -> _SOURCE_
<android.net.wifi.WifiNative: int getBand()> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getLowerBound()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getPreloadEnabled()> -> _SOURCE_
<android.media.MediaRouter: int getRouteCount()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()> -> _SOURCE_
<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)> -> _SOURCE_
<android.location.Address: java.lang.String getSubLocality()> -> _SOURCE_
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> -> _SOURCE_
<android.net.TrafficStats: long getMobileRxBytes()> -> _SOURCE_
<android.nfc.Tag: android.nfc.INfcTag getTagService()> -> _SOURCE_
<android.database.MergeCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<org.apache.harmony.security.x509.DNParser: char getUTF8()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getBgPhone()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBMPString: com.android.org.bouncycastle.asn1.DERBMPString getInstance(java.lang.Object)> -> _SOURCE_
<com.android.vcard.VCardUtils: int getPhoneNumberFormat(int)> -> _SOURCE_
<com.android.vcard.VCardProperty: java.util.Map getParameterMap()> -> _SOURCE_
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AcceptLanguageHeader createAcceptLanguageHeader(java.util.Locale)> -> _SOURCE_
<android.content.SyncOperation: java.lang.String toString()> -> _SOURCE_
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getHomeButton()> -> _SOURCE_
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()> -> _SOURCE_
<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()> -> _SOURCE_
<android.telephony.CellIdentityGsm: java.lang.String toString()> -> _SOURCE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$TimeZoneDate getTimeZoneDateFromSystemTime(byte[],int)> -> _SOURCE_
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()> -> _SOURCE_
<gov.nist.javax.sip.header.AlertInfo: java.lang.String encodeBody()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getDataCallList(android.os.Message)> -> _SOURCE_
<com.android.calendar.Utils: int getDeclinedColorFromColor(int)> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getId(int)> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer flip()> -> _SOURCE_
<android.hardware.LegacySensorManager: int getSensors()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticMiddleName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getP()> -> _SOURCE_
<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()> -> _SOURCE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()> -> _SOURCE_
<com.google.common.base.Throwables: java.lang.String getStackTraceAsString(java.lang.Throwable)> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultTrustManager()> -> _SOURCE_
<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createLeaf(com.google.common.collect.BstNode)> -> _SOURCE_
<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.widget.LinearLayout: int getDividerWidth()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)> -> _SOURCE_
<java.util.AbstractList$SubAbstractList: java.lang.Object get(int)> -> _SOURCE_
<android.filterfw.GraphEnvironment: android.filterfw.core.GraphRunner getRunner(int,int)> -> _SOURCE_
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()> -> _SOURCE_
<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getMeid()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentEncoding: java.lang.String getEncoding()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getLookupKey()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String scanResults()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: boolean isKeyguardLocked()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalSize(int)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> android.permission.ACCESS_NETWORK_STATE -> _SOURCE_
<com.android.phone.PhoneGlobals: android.content.Intent createInCallIntent(boolean)> -> _SOURCE_
<org.apache.harmony.security.x509.IssuingDistributionPoint$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getSharedCost()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> -> _SOURCE_|SYNCHRONIZATION_DATA
<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5withoutLast()> -> _SOURCE_
<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String)> -> _SOURCE_
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()> -> _SOURCE_
<libcore.io.BlockGuardOs: java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress)> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: boolean isMusicActive()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getMaxPlayBufferCount()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata clearIntlNumberFormat()> -> _SOURCE_
<android.util.SparseArray: android.util.SparseArray clone()> -> _SOURCE_
<java.util.regex.Pattern: java.lang.String pattern()> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: android.os.Bundle getAppWidgetOptions(int)> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.String standardToString()> -> _SOURCE_
<com.android.settings.tts.TextToSpeechSettings: java.lang.String getCurrentKey()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getClassAttribute()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()> -> _SOURCE_
<android.media.RingtoneManager: boolean getStopPreviousRingtone()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERVisibleString: com.android.org.bouncycastle.asn1.DERVisibleString getInstance(java.lang.Object)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteFragment$ContactTileLoaderListener: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionary: java.util.ArrayList getWordsInner(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableCollection entries()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int)> -> _SOURCE_
<com.android.settings.net.NetworkPolicyEditor: int getPolicyCycleDay(android.net.NetworkTemplate)> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions: byte[] getEncoded()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getPhoneticName()> -> _SOURCE_
<android.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)> -> _SOURCE_
<android.webkit.ConsoleMessage: java.lang.String message()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet$Builder: com.google.common.collect.ImmutableCollection build()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock$Sync: java.lang.Thread getOwner()> -> _SOURCE_
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)> -> _SOURCE_
<org.apache.http.params.AbstractHttpParams: long getLongParameter(java.lang.String,long)> -> _SOURCE_
<com.android.internal.app.AlertController: int getIconAttributeResId(int)> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.QuickContactBadge getQuickContact()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Response createReliableProvisionalResponse(int)> -> _SOURCE_
<com.android.internal.statusbar.StatusBarIconList: com.android.internal.statusbar.StatusBarIcon getIcon(int)> -> _SOURCE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Message: int getFavoriteMessageCount(android.content.Context,long)> -> _SOURCE_
<java.text.NumberFormat: int getMaximumIntegerDigits()> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getSubInterfaces()> -> _SOURCE_
<android.util.NtpTrustedTime: long getCachedNtpTime()> -> _SOURCE_
<android.app.ContextImpl$12: java.lang.Object createService(android.app.ContextImpl)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconMode()> -> _SOURCE_
<com.android.mms.layout.LayoutManager: com.android.mms.layout.LayoutParameters getLayoutParameters()> -> _SOURCE_
<org.apache.harmony.xml.dom.EntityReferenceImpl: short getNodeType()> -> _SOURCE_
<android.app.LoadedApk: java.lang.String getPackageName()> -> _SOURCE_
<com.android.vcard.VCardEntry$NoteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> -> _SOURCE_
<com.android.mms.ui.Presenter: com.android.mms.ui.ViewInterface getView()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getQheaders()> -> _SOURCE_
<gov.nist.core.StringTokenizer: java.util.Vector getLines()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()> -> _SOURCE_
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()> -> _SOURCE_
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> -> _SOURCE_
<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)> -> _SOURCE_
<org.apache.harmony.security.x509.AlgorithmIdentifier$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> -> _SOURCE_
<javax.sip.IOExceptionEvent: java.lang.String getTransport()> -> _SOURCE_
<com.android.phone.sip.SipSharedPreferences: java.lang.String getPrimaryAccount()> -> _SOURCE_
<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()> -> _SOURCE_
<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)> -> _SOURCE_
<android.database.AbstractCursor: android.net.Uri getNotificationUri()> -> _SOURCE_
<com.android.internal.telephony.Connection: java.lang.String getOrigDialString()> -> _SOURCE_
<java.util.TimeZone: java.util.TimeZone getDefault()> -> _SOURCE_
<android.content.pm.VerificationParams: int getOriginatingUid()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getLidState()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: int getCount()> -> _SOURCE_
<android.mtp.MtpStorage: long getReserveSpace()> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.Runnable getDelegatedTask()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> -> _SOURCE_
<android.app.IBackupAgent$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.ClientTransaction handleChallenge(javax.sip.message.Response,javax.sip.ClientTransaction,javax.sip.SipProvider,int)> -> _SOURCE_
<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()> -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getContentEncoding()> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: com.android.emailcommon.mail.Address[] getFrom()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: int hashCode()> -> _SOURCE_
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.AddressList getAddressList()> -> _SOURCE_
<android.preference.MultiCheckPreference: boolean[] getValues()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.widget.Button getSubmitButton()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getExclusiveQueuedThreads()> -> _SOURCE_
<android.webkit.CallbackProxy$UploadFileMessageData: android.webkit.CallbackProxy$UploadFile getUploadFile()> -> _SOURCE_
<com.android.contacts.editor.AggregationSuggestionEngine: int getSuggestedContactCount()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtrees: java.util.List getSubtrees()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getDestinationId()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getCategory()> -> _SOURCE_
<android.widget.LinearLayout: int getDividerPadding()> -> _SOURCE_
<android.app.ActivityManager: int getLauncherLargeIconSize()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticFamilyName()> -> _SOURCE_
<java.net.Socks4Message: int getCommandOrResult()> -> _SOURCE_
<gov.nist.javax.sip.header.Supported: java.lang.String getOptionTag()> -> _SOURCE_
<android.view.DragEvent: android.content.ClipData getClipData()> -> _SOURCE_
<android.text.Layout: int getParagraphRight(int)> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getDefaultTargetPort()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage: android.view.View getTargetView(android.view.ContextMenu$ContextMenuInfo)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getTabCount()> -> _SOURCE_
<android.net.wifi.WifiStateMachine: java.util.List syncGetConfiguredNetworks(com.android.internal.util.AsyncChannel)> -> _SOURCE_
<android.widget.Toast: int getDuration()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: java.util.List getInstalledProviders()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.content.Context getContext()> -> _SOURCE_
<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Lists: java.util.ArrayList newArrayList()> -> _SOURCE_
<android.content.IntentSender: java.lang.String getCreatorPackage()> -> _SOURCE_
<com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.Object clone()> -> _SOURCE_
<com.android.calendar.month.SimpleWeekView: int getFirstMonth()> -> _SOURCE_
<java.io.File: long getUsableSpace()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getCacheControl()> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getLoadFields()> -> _SOURCE_
<java.nio.ServerSocketChannelImpl: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: long getEventTime()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()> -> _SOURCE_
<java.net.NetworkInterface: java.lang.String getDisplayName()> -> _SOURCE_
<java.net.JarURLConnection: java.net.URL getJarFileURL()> -> _SOURCE_
<java.lang.Class: java.lang.String getSimpleName()> -> _SOURCE_
<android.webkit.WebViewClassic$PrivateHandler: android.content.Context getContext()> -> _SOURCE_
<android.graphics.Bitmap: int getDefaultDensity()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)> -> _SOURCE_
<java.nio.ByteOrder: java.lang.String toString()> -> _SOURCE_
<android.widget.AbsListView: int getSolidColor()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()> -> _SOURCE_
<android.widget.CalendarView: boolean getShowWeekNumber()> -> _SOURCE_
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)> -> _SOURCE_
<android.view.InputDevice: java.lang.String getDescriptor()> -> _SOURCE_
<android.app.ExpandableListActivity: long getSelectedPosition()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> -> _SOURCE_
<android.widget.Spinner: int getGravity()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfacePairs()> -> _SOURCE_
<java.lang.Short: short shortValue()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> -> _SOURCE_
<com.google.common.collect.Lists$ReverseList: java.util.List getForwardList()> -> _SOURCE_
<java.util.AbstractMap$SimpleEntry: java.lang.String toString()> -> _SOURCE_
<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()> -> _SOURCE_
<android.os.storage.IMountServiceListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: int getInstallStatus()> -> _SOURCE_
<com.android.contacts.editor.AggregationSuggestionEngine$RawContact: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getLocalPort()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getUseWebViewBackgroundForOverscrollBackground()> -> _SOURCE_
<com.android.exchange.adapter.AbstractSyncAdapter: android.content.ContentProviderResult[] safeExecute(java.lang.String,java.util.ArrayList)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> -> _SOURCE_
<android.app.ActivityThread: android.os.Looper getLooper()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: int getPkeyContext()> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.MANAGE_ACCOUNTS -> _SOURCE_|ACCOUNT_INFORMATION
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()> -> _SOURCE_
<android.content.res.CompatibilityInfo: java.lang.String toString()> -> _SOURCE_
<com.android.mms.data.Conversation: long getDate()> -> _SOURCE_
<android.text.util.Rfc822Token: java.lang.String getComment()> -> _SOURCE_
<android.content.res.ColorStateList: int getDefaultColor()> -> _SOURCE_
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()> -> _SOURCE_
<libcore.util.ZoneInfo: java.lang.String toString()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RAckHeader createRAckHeader(long,long,java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.GestureRecorder$Gesture$MotionEventRecord: java.lang.String toJson()> -> _SOURCE_
<android.widget.PopupWindow: int getInputMethodMode()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: org.w3c.dom.events.EventTarget getCurrentTarget()> -> _SOURCE_
<java.util.IdentityHashMap$2$1: java.lang.Object get(java.util.MapEntry)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()> -> _SOURCE_
<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: java.lang.Object writeReplace()> -> _SOURCE_
<android.net.EthernetDataTracker: int getDefaultGatewayAddr()> -> _SOURCE_
<android.app.Fragment: int getId()> -> _SOURCE_
<android.widget.RemoteViews$SetEmptyView: java.lang.String getActionName()> -> _SOURCE_
<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)> -> _SOURCE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)> -> _SOURCE_
<android.telephony.CellSignalStrengthGsm: int getDbm()> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys$1$1: int getCount()> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<android.filterfw.core.NativeFrame: float[] getFloats()> -> _SOURCE_
<com.android.browser.XLargeUi: int getContentWidth()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.MinSE: java.lang.String encodeBody()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getTokens()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpConnectionMetrics getMetrics()> -> _SOURCE_
<android.telephony.SignalStrength: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getNonce()> -> _SOURCE_
<gov.nist.javax.sip.header.Warning: java.lang.String getAgent()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions getExtensions()> -> _SOURCE_
<android.view.View: int getLayoutDirection()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getFrom()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> -> _SOURCE_
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()> -> _SOURCE_
<android.net.Uri: java.util.Set getQueryParameterNames()> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration elements()> -> _SOURCE_
<java.security.KeyPair: java.security.PrivateKey getPrivate()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: int getRetransmitTimer()> -> _SOURCE_
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.lang.String getAccountType()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getMsisdn()> -> _SOURCE_
<android.view.View: java.util.ArrayList getFocusables(int)> -> _SOURCE_
<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: java.lang.String namespace()> -> _SOURCE_
<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getContactsCount()> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.ContactMatcher: java.util.List pickBestMatches(int)> -> _SOURCE_
<android.view.MotionEvent: int getPointerId(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerAddress()> -> _SOURCE_
<com.android.inputmethod.latin.InputPointers: int[] getPointerIds()> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaAsuLevel()> -> _SOURCE_
<android.webkit.WebSettings: boolean getAllowFileAccess()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: int getCurrentEnabledStateLPr(java.lang.String,int)> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> -> _SOURCE_
<org.apache.http.client.methods.HttpOptions: java.lang.String getMethod()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: java.lang.String getUri()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: java.lang.String toString()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: long getItemId(int)> -> _SOURCE_
<android.view.Choreographer: long getFrameDelay()> -> _SOURCE_
<android.widget.PopupWindow: int getWidth()> -> _SOURCE_
<android.location.Location: java.lang.String getProvider()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String encodeMessage()> -> _SOURCE_
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()> -> _SOURCE_
<com.google.common.collect.ForwardingIterator: java.lang.Object delegate()> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification: long getSmsThreadId(android.content.Context,android.net.Uri)> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$100(com.android.internal.telephony.cdma.RuimRecords)> -> _SOURCE_
<java.util.zip.ZipFile: java.lang.String getName()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getAuthor()> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: boolean isStateful()> -> _SOURCE_
<android.location.Location: double getLatitude()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: java.lang.String[] getProjection(boolean)> -> _SOURCE_
<java.lang.System: java.lang.String getenv(java.lang.String)> -> _SOURCE_
<org.apache.commons.io.LineIterator: java.lang.Object next()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getNavigationMode()> -> _SOURCE_
<android.database.CursorWrapper: java.lang.String[] getColumnNames()> -> _SOURCE_
<java.net.Socket: int getPort()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)> -> _SOURCE_
<android.content.IOnPrimaryClipChangedListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.database.MatrixCursor: long getLong(int)> -> _SOURCE_
<java.util.SimpleTimeZone: int getRawOffset()> -> _SOURCE_
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxMessageCountPerThread()> -> _SOURCE_
<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<java.net.InetAddress: byte[] getAddress()> -> _SOURCE_
<java.security.Provider: java.util.Set entrySet()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)> -> _SOURCE_
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientOptions()> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.DeviceOrientationService getDeviceOrientationService()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: int getBeginConstraints()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: int getMinute()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERPrintableString: com.android.org.bouncycastle.asn1.DERPrintableString getInstance(java.lang.Object)> -> _SOURCE_
<com.android.mms.data.Conversation: com.android.mms.data.ContactList getRecipients()> -> _SOURCE_
<com.google.android.mms.pdu.PduHeaders: int getOctet(int)> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()> -> _SOURCE_
<android.content.BroadcastReceiver: int getResultCode()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()> -> _SOURCE_
<android.webkit.HTML5VideoView: int getTextureName()> -> _SOURCE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.camera.ui.ZoomControl: android.widget.ImageView addImageView(android.content.Context,int)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()> -> _SOURCE_
<android.widget.CalendarView: long getMinDate()> -> _SOURCE_
<java.lang.Enum$1: java.lang.Object create(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getIccSerialNumber()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Set createEntrySet()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimMdnLoaded: java.lang.String getEfName()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> -> _SOURCE_
<java.security.PrivilegedActionException: java.lang.Exception getException()> -> _SOURCE_
<android.nfc.NfcActivityManager: android.net.Uri[] getUris()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Collection values()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<org.json.JSONStringer: org.json.JSONStringer object()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: int hashCode()> -> _SOURCE_
<android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastIrqTime()> -> _SOURCE_
<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()> -> _SOURCE_
<android.webkit.WebViewClassic: int getViewHeight()> -> _SOURCE_
<com.android.vcard.VCardUtils: java.lang.String getPhoneTypeString(java.lang.Integer)> -> _SOURCE_
<android.view.ViewConfiguration: int getKeyRepeatDelay()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownHeight()> -> _SOURCE_
<com.android.server.NetworkManagementService: int getInterfaceRxThrottle(java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredInternationalPrefix()> -> _SOURCE_
<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteSignalStrenght()> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getViewAt(int)> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getOrCreateAccountIdInTransaction(com.android.providers.contacts.AccountWithDataSet)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: long getDurationMillis()> -> _SOURCE_
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getSubtitle()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getDbm()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)> -> _SOURCE_
<android.widget.CalendarView$WeeksAdapter: int getCount()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getCountry()> -> _SOURCE_
<android.util.NtpTrustedTime: long getCacheCertainty()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: java.util.Iterator iterator()> -> _SOURCE_
<android.media.AudioService$ScoClient: android.os.IBinder getBinder()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: int getBondState()> -> _SOURCE_
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.settings.vpn2.VpnSettings: int getHelpResource()> -> _SOURCE_
<org.apache.harmony.security.x509.CRLDistributionPoints: byte[] getEncoded()> -> _SOURCE_
<android.widget.FrameLayout: boolean getMeasureAllChildren()> -> _SOURCE_
<android.app.DownloadManager$CursorTranslator: int getInt(int)> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: int getViewTypeCount()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int)> -> _SOURCE_
<android.os.Bundle: float[] getFloatArray(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: boolean getSaveFormData()> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: int getWidth()> -> _SOURCE_
<android.drm.DrmInfoRequest: java.lang.String getMimeType()> -> _SOURCE_
<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.Header[] getFooters()> -> _SOURCE_
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()> -> _SOURCE_
<java.net.DatagramSocket: boolean getBroadcast()> -> _SOURCE_
<com.google.common.collect.Sets$CartesianSet$Axis: java.lang.Object getForIndex(int)> -> _SOURCE_
<android.media.MediaPlayer: java.lang.String getStringParameter(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.Object getExtensionAccessInfo()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<libcore.net.http.Challenge: java.lang.String toString()> -> _SOURCE_
<android.view.MotionEvent: int getToolType(int)> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)> -> _SOURCE_
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()> -> _SOURCE_
<android.view.View: android.graphics.Insets getOpticalInsets()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()> -> _SOURCE_
<com.android.providers.contacts.aggregation.ContactAggregator: long onRawContactInsert(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getPeerPrincipal()> -> _SOURCE_
<android.widget.GridLayout$1: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String getPositivePrefix()> -> _SOURCE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String encode()> -> _SOURCE_
<android.view.View: float getRotationX()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: int getSecond()> -> _SOURCE_
<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)> -> _SOURCE_
<android.content.CursorLoader: android.net.Uri getUri()> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.lang.Class findClass(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getUuid()> -> _SOURCE_
<android.view.HardwareLayer: int getHeight()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: long getDataEnd()> -> _SOURCE_
<com.android.vcard.VCardEntry$AndroidCustomData: java.util.List getDataList()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getFullDisplayName(android.view.inputmethod.InputMethodSubtype,android.content.res.Resources)> -> _SOURCE_
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)> -> _SOURCE_
<android.app.SearchableInfo: int getImeOptions()> -> _SOURCE_
<java.util.IllegalFormatFlagsException: java.lang.String getFlags()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub$Proxy: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<gov.nist.javax.sip.header.Indentation: int getCount()> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: boolean isStreaming()> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: int getCount()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence inflateUsing(android.content.Context,android.content.ContentValues)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String getDatabaseName()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: int getTransportState()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding()> -> _SOURCE_
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getCurrentPosition()> -> _SOURCE_
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> _SOURCE_
<com.android.settings.Settings: android.widget.Button getNextButton()> -> _SOURCE_
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources getResources()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()> -> _SOURCE_
<com.android.browser.SnapshotTab$LoadData: android.database.Cursor doInBackground(java.lang.Void[])> -> _SOURCE_
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getServiceProviderName()> -> _SOURCE_
<android.widget.TextView: float getTextSize()> -> _SOURCE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()> -> _SOURCE_
<com.google.android.mms.pdu.EncodedStringValue: int getCharacterSet()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter$TabletCalendarItemBackgrounds: int[] getBackgrounds()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethod()> -> _SOURCE_
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Cubic$3: float getInterpolation(float)> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification$NotificationInfo: long getTime()> -> _SOURCE_
<java.security.Signature: java.security.Provider access$002(java.security.Signature,java.security.Provider)> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: java.lang.String standardToString()> -> _SOURCE_
<libcore.io.ForwardingOs: boolean isatty(java.io.FileDescriptor)> -> _SOURCE_
<gov.nist.javax.sip.header.Warning: int getCode()> -> _SOURCE_
<com.google.common.collect.BstModificationResult: com.google.common.collect.BstNode getChangedTarget()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getName()> -> _SOURCE_
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int getWakeups(int)> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$1300(android.net.sip.SipAudioCall)> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: long getArtistId()> -> _SOURCE_
<dalvik.system.DexFile: java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader)> -> _SOURCE_
<java.nio.DirectByteBuffer: byte get(int)> -> _SOURCE_
<org.kxml2.io.KXmlParser: char[] getTextCharacters(int[])> -> _SOURCE_
<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()> -> _SOURCE_
<android.database.MergeCursor: byte[] getBlob(int)> -> _SOURCE_
<com.android.mms.MmsConfig: int getRecipientLimit()> -> _SOURCE_
<java.util.zip.Deflater: long getBytesRead()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPremiumRate()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtree$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String getBuffer()> -> _SOURCE_
<com.android.settings.SecuritySettings: int getHelpResource()> -> _SOURCE_
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)> -> _SOURCE_
<android.telephony.SmsMessage: int getStatusOnIcc()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()> -> _SOURCE_
<android.app.Activity: android.app.Application getApplication()> -> _SOURCE_
<android.net.http.Connection: boolean getCanPersist()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.header.ContactList: java.lang.Object clone()> -> _SOURCE_
<junit.framework.ComparisonFailure: java.lang.String getExpected()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMapForRead(org.apache.harmony.xml.dom.NodeImpl)> -> _SOURCE_
<android.view.View: int getTextDirection()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getCategory(int)> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.phone.CallFeaturesSetting: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<com.android.mms.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: java.util.ArrayList getTypedWordAndPreviousSuggestions(java.lang.CharSequence,com.android.inputmethod.latin.SuggestedWords)> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[])> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatus(android.content.SyncStorageEngine$AuthorityInfo)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getData(int)> -> _SOURCE_
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()> -> _SOURCE_
<com.android.browser.TabControl: long getNextId()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: int hashCode()> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getLastHeader(java.lang.String)> -> _SOURCE_
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)> -> _SOURCE_
<java.util.jar.Manifest: java.lang.Object clone()> -> _SOURCE_
<android.net.TrafficStats: long getTxBytes(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<java.net.HttpURLConnection: java.lang.String getRequestMethod()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.core.NameValueList: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String toString()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getActions(java.lang.Object)> -> _SOURCE_
<android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<libcore.net.http.ResponseHeaders: int getContentLength()> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: android.content.Intent getRedirectIntent()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: int hashCode()> -> _SOURCE_
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)> -> _SOURCE_
<libcore.io.MemoryMappedFile: long size()> -> _SOURCE_
<com.android.providers.contacts.AbstractContactsProvider: com.android.providers.contacts.ContactsTransaction getCurrentTransaction()> -> _SOURCE_
<android.widget.ViewAnimator: android.view.View getCurrentView()> -> _SOURCE_
<android.view.ViewConfiguration: int getScrollBarSize()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMAddrParam()> -> _SOURCE_
<com.android.browser.Controller: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<org.apache.http.entity.BufferedHttpEntity: java.io.InputStream getContent()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering usingToString()> -> _SOURCE_
<android.database.MatrixCursor: int getCount()> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.view.ViewGroup: java.util.ArrayList access$400(android.view.ViewGroup)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean getMainCountryForCode()> -> _SOURCE_
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getOrdinal()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<com.android.emailcommon.provider.Account: long getInboxId(android.content.Context,long)> -> _SOURCE_
<java.text.FieldPosition: int getBeginIndex()> -> _SOURCE_
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)> -> _SOURCE_
<com.android.mms.model.SlideshowModel: org.w3c.dom.smil.SMILDocument toSmilDocument()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult implFlush(java.nio.CharBuffer)> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()> -> _SOURCE_
<java.nio.DirectByteBuffer: int protectedArrayOffset()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: int getEncryptionState()> -> _SOURCE_
<com.android.internal.util.StateMachine: int getLogRecSize()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String encodeBody()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String encode()> -> _SOURCE_
<android.service.wallpaper.IWallpaperEngine$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorUtils: java.util.List getSavedAccounts()> -> _SOURCE_
<libcore.icu.CollationKeyICU: byte[] toByteArray()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()> -> _SOURCE_
<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILMediaElement createMediaElement(java.lang.String,org.w3c.dom.smil.SMILDocument,java.lang.String)> -> _SOURCE_
<android.text.style.TextAppearanceSpan: int getTextSize()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object peek()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getFields()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)> android.permission.USE_SIP -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()> -> _SOURCE_
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumHeight()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString()> -> _SOURCE_
<com.android.systemui.screenshot.GlobalScreenshot$5: float getInterpolation(float)> -> _SOURCE_
<gov.nist.javax.sip.header.MimeVersion: int getMinorVersion()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)> -> _SOURCE_
<android.location.Address: java.lang.String getCountryCode()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getEntities()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.SortedSet elementSet()> -> _SOURCE_
<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getReadFd()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getParent()> -> _SOURCE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity: java.lang.String getCallOrigin()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerFilesystemPath(java.lang.String)> -> _SOURCE_
<android.animation.AnimatorSet: long getDuration()> -> _SOURCE_
<android.app.IActivityController$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getFixedFontFamily()> -> _SOURCE_
<com.android.contacts.GroupMetaData: java.lang.String getAccountName()> -> _SOURCE_
<android.content.Intent: int getIntExtra(java.lang.String,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()> -> _SOURCE_
<android.webkit.ZoomManager: float getDefaultMaxZoomScale()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)> -> _SOURCE_
<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)> -> _SOURCE_
<com.android.providers.telephony.SmsProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)> -> _SOURCE_
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer get(long[],int,int)> -> _SOURCE_
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMImplementationImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getEngine()> -> _SOURCE_
<android.webkit.WebViewClassic: float getScale()> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaEcio()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: int getPhoneType()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: float getWindowDuration()> -> _SOURCE_
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> -> _SOURCE_
<android.app.ActivityThread: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<com.android.internal.policy.PolicyManager: android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl onCreateInputMethodInterface()> -> _SOURCE_
<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation get(long)> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()> -> _SOURCE_
<com.android.browser.AddBookmarkPage$FolderAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<java.util.zip.Deflater: int getTotalOut()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternalParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getUseWideViewPort()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getIccSerialNumber()> -> _SOURCE_
<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()> -> _SOURCE_
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs(int)> -> _SOURCE_
<com.android.contacts.vcard.ProcessorBase: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<com.android.providers.contacts.ContactDirectoryManager: java.util.Set getDirectoryProviderPackages(android.content.pm.PackageManager)> -> _SOURCE_
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)> -> _SOURCE_
<android.view.IRotationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)> -> _SOURCE_
<android.net.wifi.ScanResult$1: android.net.wifi.ScanResult createFromParcel(android.os.Parcel)> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String getTitle()> -> _SOURCE_
<android.app.SearchableInfo: int getVoicePromptTextId()> -> _SOURCE_
<com.android.internal.location.ILocationProvider$Stub$Proxy: int getStatus(android.os.Bundle)> -> _SOURCE_
<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String[] getColumnNames()> -> _SOURCE_
<javax.security.auth.callback.PasswordCallback: java.lang.String getPrompt()> -> _SOURCE_
<com.android.mms.data.Contact: java.util.List getByPhoneUris(android.os.Parcelable[])> -> _SOURCE_
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getCurrentItem()> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMinor()> -> _SOURCE_
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)> -> _SOURCE_
<com.android.calendar.month.SimpleWeeksAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.app.ActivityManager: android.graphics.Bitmap getTaskTopThumbnail(int)> -> _SOURCE_
<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()> -> _SOURCE_
<org.apache.http.client.methods.HttpHead: java.lang.String getMethod()> -> _SOURCE_
<com.android.browser.Bookmarks: android.database.Cursor queryCombinedForUrl(android.content.ContentResolver,java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: int getRilRadioTechnology(int)> -> _SOURCE_
<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: int getCount()> -> _SOURCE_
<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getOOBInline()> -> _SOURCE_
<java.net.URI: java.lang.String getQuery()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: int getNumberPresentation()> -> _SOURCE_
<android.app.ContextImpl: java.lang.String getPackageResourcePath()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> -> _SOURCE_
<com.android.internal.telephony.IccCardStatus: java.lang.String toString()> -> _SOURCE_
<android.net.rtp.RtpStream: int getRemotePort()> -> _SOURCE_
<java.lang.Package: java.lang.String getName()> -> _SOURCE_
<android.webkit.CacheManager: java.io.File access$000()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.Mailbox getMailbox()> -> _SOURCE_
<com.android.exchange.ExchangeService$2: void loadAttachment(long,boolean)> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.Object clone()> -> _SOURCE_
<android.content.SyncManager: long access$3000()> -> _SOURCE_
<com.android.browser.BaseUi: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$EventKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()> -> _SOURCE_
<com.android.contacts.model.dataitem.NicknameDataItem: java.lang.String getName()> -> _SOURCE_
<android.widget.TextView: android.text.TextPaint getPaint()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: javax.net.ssl.SSLSocket getSSLSocket()> -> _SOURCE_
<android.text.style.AlignmentSpan$Standard: int getSpanTypeId()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIntegrityProtected()> -> _SOURCE_
<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Level getLevel()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: long calculateLastDate(android.content.ContentValues)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getIndex()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.SecurityClientHeader createSecurityClientHeader()> -> _SOURCE_
<android.webkit.WebViewClassic: int getBaseLayer()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getDirectoryType()> -> _SOURCE_
<org.apache.http.ProtocolVersion: int getMinor()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()> -> _SOURCE_
<android.view.MotionEvent: float getSize(int)> -> _SOURCE_
<dalvik.system.BlockGuard$BlockGuardPolicyException: int getPolicyViolation()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RAckHeader createRAckHeader(int,int,java.lang.String)> -> _SOURCE_
<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])> -> _SOURCE_
<com.android.server.usb.UsbDeviceManager: java.lang.String access$400()> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: java.lang.String getLabel()> -> _SOURCE_
<android.content.res.TypedArray: int getInteger(int,int)> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getDataType(int)> -> _SOURCE_
<android.widget.AbsSpinner: int getChildWidth(android.view.View)> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getToIndex()> -> _SOURCE_
<com.android.calendar.event.EditEventView$TitleAdapter: int getCount()> -> _SOURCE_
<com.android.internal.telephony.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)> -> _SOURCE_
<android.view.View: java.lang.Object getTag()> -> _SOURCE_
<com.android.contacts.model.ContactLoader: boolean getLoadStreamItems()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> -> _SOURCE_
<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.util.Date getNotAfter()> -> _SOURCE_
<android.telephony.NeighboringCellInfo: java.lang.String toString()> -> _SOURCE_
<java.util.AbstractMap: java.util.Set keySet()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: gov.nist.javax.sip.header.Protocol getSentProtocol()> -> _SOURCE_
<java.text.NumberFormat: java.lang.String format(double)> -> _SOURCE_
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: long getExpirationTime()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object remove()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceLanguageId()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String access$400(byte[])> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwnam(java.lang.String)> -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)> -> _SOURCE_
<com.google.common.collect.ImmutableList: java.lang.Object writeReplace()> -> _SOURCE_
<com.android.browser.PreloadController: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: long getSelectedTime()> -> _SOURCE_
<com.android.browser.WebStorageSizeManager$WebKitAppCacheInfo: long getAppCacheSizeBytes()> -> _SOURCE_
<org.xml.sax.helpers.LocatorImpl: java.lang.String getPublicId()> -> _SOURCE_
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()> -> _SOURCE_
<android.view.MotionEvent: float getOrientation(int)> -> _SOURCE_
<java.util.LinkedList: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getSubjectUniqueID()> -> _SOURCE_
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderProperties getProperties()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getExtendedHeader(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: byte[] getDisplayPhotoBytes()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)> -> _SOURCE_
<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(android.content.Context,int,boolean)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getButtonDescription()> -> _SOURCE_
<com.google.common.collect.Maps$1: java.lang.Object getValue()> -> _SOURCE_
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()> -> _SOURCE_
<android.location.Address: java.lang.String getUrl()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: int getHopCount()> -> _SOURCE_
<android.widget.TextView: int getGravity()> -> _SOURCE_
<com.android.server.wm.DisplayContent: int getDisplayId()> -> _SOURCE_
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.LocalBluetoothManager getInstance(android.content.Context)> -> _SOURCE_
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: java.lang.String getTime()> -> _SOURCE_
<com.android.internal.telephony.SmsResponse: java.lang.String toString()> -> _SOURCE_
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()> -> _SOURCE_
<org.apache.commons.io.IOUtils: java.util.List readLines(java.io.Reader)> -> _SOURCE_
<android.preference.ListPreference: java.lang.CharSequence getEntry()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERNumericString: byte[] getOctets()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet keySet()> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadObjectNoData()> -> _SOURCE_
<com.google.common.base.Throwables: java.util.List getCausalChain(java.lang.Throwable)> -> _SOURCE_
<com.android.internal.telephony.Connection: boolean isRinging()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getMultiParameterNames()> -> _SOURCE_
<android.content.SyncManager: long access$3700()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: android.os.Parcelable getParcelableData(java.lang.Object)> -> _SOURCE_
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.util.IdentityHashMap: java.util.Set keySet()> -> _SOURCE_
<android.location.Criteria: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object get(java.util.Iterator,int)> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodWriteReplace()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: int getViaPort()> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$CallSettings getCallSettings()> -> _SOURCE_
<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getAccessibilityRootNode()> -> _SOURCE_
<java.io.File: java.lang.String getPath()> -> _SOURCE_
<android.telephony.CellInfo: boolean isRegistered()> -> _SOURCE_
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getMenuButton()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getMinute()> -> _SOURCE_
<android.database.BulkCursorNative: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getText()> -> _SOURCE_
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)> -> _SOURCE_
<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()> -> _SOURCE_
<com.android.providers.telephony.MmsSmsDatabaseHelper: com.android.providers.telephony.MmsSmsDatabaseHelper getInstance(android.content.Context)> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: byte[] getExtnValue()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Base64: byte[] decode(byte[])> -> _SOURCE_
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> _SOURCE_
<android.view.View: int getBottom()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: java.lang.String toString()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getColumn()> -> _SOURCE_
<com.android.browser.BookmarksLoader: android.net.Uri addAccount(android.net.Uri,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getStripRepeat()> -> _SOURCE_
<com.android.mms.util.CacheManager: com.android.mms.util.BlobCache getCache(android.content.Context,java.lang.String,int,int,int)> -> _SOURCE_
<com.android.contacts.vcard.NotificationImportExportListener: android.app.Notification constructFinishNotification(android.content.Context,java.lang.String,java.lang.String,android.content.Intent)> -> _SOURCE_
<android.app.Activity: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getPrlVersion()> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: int getColumnNumber()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: int getNumberPresentation()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: int getRetryCount()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: java.lang.Object getChild(int,int)> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account access$200(com.android.common.contacts.BaseEmailAddressAdapter)> -> _SOURCE_
<android.view.ViewConfiguration: int getScrollBarFadeDuration()> -> _SOURCE_
<android.text.style.LocaleSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: int getDisplayNameSourceForMimeTypeId(int)> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetDisplayName(java.lang.String)> -> _SOURCE_
<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)> -> _SOURCE_
<java.nio.LongArrayBuffer: long get()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Timer: int getCountLocked(int)> -> _SOURCE_
<android.net.wifi.WifiStateMachine: java.util.List syncGetScanResultsList()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIServer()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object get(java.util.Iterator,int,java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getApplicationData()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalOrientation(int)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getColumn()> -> _SOURCE_
<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()> android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.ServiceRoute: java.lang.String encodeBody()> -> _SOURCE_
<com.android.calendar.month.SimpleWeeksAdapter: long getItemId(int)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getActualState(android.content.Context)> -> _SOURCE_
<android.media.TimedText: android.graphics.Rect getBounds()> -> _SOURCE_
<com.android.exchange.adapter.Parser: int nextToken()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getCallId()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Group: java.lang.String getName()> -> _SOURCE_
<java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean isDnsCheckDisabled()> -> _SOURCE_
<org.apache.http.message.ParserCursor: java.lang.String toString()> -> _SOURCE_
<com.android.mms.ui.UriImage: int getWidth()> -> _SOURCE_
<android.filterfw.core.NativeBuffer: int getElementSize()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getEarlyDialogId()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleX()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getNextWaitingApn()> -> _SOURCE_
<android.os.Debug: int getGlobalGcInvocationCount()> -> _SOURCE_
<android.app.Fragment: android.app.Activity getActivity()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getDirectorySearchMode()> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()> -> _SOURCE_
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document newDocument()> -> _SOURCE_
<com.android.internal.telephony.SmsUsageMonitor$ShortCodePatternMatcher: int getNumberCategory(java.lang.String)> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: int getDisplayWidth()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getColumn()> -> _SOURCE_
<com.google.common.collect.SingletonImmutableList: java.lang.Object get(int)> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getEncoded()> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmDbm()> -> _SOURCE_
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getSystemId()> -> _SOURCE_
<com.android.internal.telephony.cat.IconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()> -> _SOURCE_
<java.util.jar.Manifest: int getMainAttributesEnd()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String getVolumeState(java.lang.String)> -> _SOURCE_
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)> android.permission.CHANGE_WIFI_STATE -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: int getCurrentUserId()> -> _SOURCE_
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getMessageChannel()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getDomain()> -> _SOURCE_
<android.webkit.PluginManager: java.lang.String[] getPluginDirectories()> -> _SOURCE_
<android.util.LongSparseArray: java.lang.Object get(long)> -> _SOURCE_
<android.text.style.BulletSpan: int getLeadingMargin(boolean)> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()> -> _SOURCE_
<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String encodeBody()> -> _SOURCE_
<com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup: com.android.inputmethod.latin.makedict.FusionDictionary$WeightedString getShortcut(java.lang.String)> -> _SOURCE_
<android.widget.LinearLayout: int getVirtualChildCount()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getLocalName()> -> _SOURCE_
<java.lang.UnsafeByteSequence: byte[] toByteArray()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeId(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getPositiveValue()> -> _SOURCE_
<android.os.Parcel: java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)> -> _SOURCE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getReceivedBytesCount()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()> -> _SOURCE_
<android.content.ContentProviderOperation: java.lang.String toString()> -> _SOURCE_
<android.widget.ArrayAdapter: long getItemId(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getItemCount()> -> _SOURCE_
<com.android.mms.transaction.NotificationTransaction: int getType()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getFullNameStyle()> -> _SOURCE_
<com.android.internal.view.IInputMethodSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.widget.AbsListView: int getCheckedItemCount()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: int getChildrenCount(int)> -> _SOURCE_
<android.database.IContentObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.app.ExpandableListActivity: long getSelectedId()> -> _SOURCE_
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: java.util.Collection getCachedDevicesCopy()> -> _SOURCE_
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)> android.permission.READ_CALENDAR -> _SOURCE_|CALENDAR_INFORMATION
<android.net.Uri$OpaqueUri: java.util.List getPathSegments()> -> _SOURCE_
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> -> _SOURCE_
<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLServerSocket createSSLServerSocket(int,int,java.net.InetAddress)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: java.lang.String getBackgroundColor()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: java.lang.String standardToString()> -> _SOURCE_
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceSvn()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)> -> _SOURCE_
<android.text.Layout: int getLineBaseline(int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getParserPointer()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<android.location.Address: java.lang.String getCountryName()> -> _SOURCE_
<android.view.MotionEvent: float getTouchMinor(int)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)> -> _SOURCE_
<android.widget.HeaderViewListAdapter: long getItemId(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getRUIMOperatorNumeric()> -> _SOURCE_
<android.location.LocationRequest: float getSmallestDisplacement()> -> _SOURCE_
<com.android.mms.data.ContactList: int getPresenceResId()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String[] fileList()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardId: java.lang.String toString()> -> _SOURCE_
<com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()> -> _SOURCE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)> -> _SOURCE_
<com.android.settings.IconPreferenceScreen: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<android.net.wifi.WpsInfo: java.lang.String toString()> -> _SOURCE_
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()> -> _SOURCE_
<com.android.phone.InCallTouchUi: int getTouchUiHeight()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker: int getDayOfMonth()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getButtonImageId(boolean)> -> _SOURCE_
<android.app.ActivityManagerNative: android.os.IBinder asBinder()> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getHint()> -> _SOURCE_
<android.filterfw.geometry.Rectangle: float getWidth()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getEmailFrom()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)> -> _SOURCE_
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()> -> _SOURCE_
<android.view.Surface$CompatibleCanvas: int getWidth()> -> _SOURCE_
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()> -> _SOURCE_
<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getRegion()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()> -> _SOURCE_
<android.hardware.Sensor: int getMinDelay()> -> _SOURCE_
<java.io.OutputStreamWriter: java.lang.String getEncoding()> -> _SOURCE_
<com.google.common.collect.MapMaker$RemovalNotification: com.google.common.collect.MapMaker$RemovalCause getCause()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.security.Permission getPermission()> -> _SOURCE_
<com.android.mms.util.SmileyParser$Smileys: int getSmileyResource(int)> -> _SOURCE_
<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: int getPkeyContext()> -> _SOURCE_
<android.app.ApplicationThreadNative: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.ViewGroup$ChildListForAccessibility: android.view.View getChildAt(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getPartitionCount()> -> _SOURCE_
<com.android.ex.chips.RecipientChip: java.lang.CharSequence getOriginalText()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticFamilyName()> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getContinueExistingPeriodicTasksAfterShutdownPolicy()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskTopThumbnail(int)> -> _SOURCE_
<android.app.IWallpaperManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()> -> _SOURCE_
<android.widget.TextView$Marquee: float getScroll()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getDataSet()> -> _SOURCE_
<android.hardware.input.KeyboardLayout: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cat.CommandParams: com.android.internal.telephony.cat.AppInterface$CommandType getCommandType()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.String getSignature(java.lang.Class)> -> _SOURCE_
<com.android.server.MountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()> -> _SOURCE_
<com.google.common.base.Optional$Present: java.lang.Object get()> -> _SOURCE_
<com.android.contacts.list.PhoneNumberListAdapter: java.lang.CharSequence getUnknownNameText()> -> _SOURCE_
<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.ParseException generateParseException()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> -> _SOURCE_
<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormat: boolean isParseIntegerOnly()> -> _SOURCE_
<android.content.ContentProvider: java.lang.String getReadPermission()> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker$Segment: java.lang.CharSequence getText()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getCacheDir()> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()> -> _SOURCE_
<java.util.Hashtable: java.lang.String toString()> -> _SOURCE_
<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)> -> _SOURCE_
<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPrivateKey)> -> _SOURCE_
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> -> _SOURCE_
<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.Message: int length()> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPeerPort()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: int getSize()> -> _SOURCE_
<android.media.AudioService: int getStreamMaxVolume(int)> -> _SOURCE_
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: java.security.interfaces.RSAPublicKey getRSAPublicKey()> -> _SOURCE_
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)> -> _SOURCE_
<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)> -> _SOURCE_
<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getParentNode()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isClosed()> -> _SOURCE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getReasonCode()> -> _SOURCE_
<android.os.UserHandle: int getSharedAppGid(int)> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: java.util.Comparator comparator()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()> -> _SOURCE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()> -> _SOURCE_
<java.text.MessageFormat: java.lang.String toPattern()> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getCallDetailIntentProvider(com.android.contacts.calllog.CallLogAdapter,int,long,int)> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object getLast(java.util.Iterator)> -> _SOURCE_
<android.media.IRemoteVolumeObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelView: float getExpandedHeight()> -> _SOURCE_
<com.android.providers.contacts.PhotoStore: long getTotalSize()> -> _SOURCE_
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> -> _SOURCE_
<java.util.Scanner: java.util.Locale locale()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.util.List getAllCellInfo()> -> _SOURCE_
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)> -> _SOURCE_
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()> -> _SOURCE_
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)> -> _SOURCE_
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)> -> _SOURCE_
<java.text.DateFormat: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getY(int)> -> _SOURCE_
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.view.View: int getMeasuredWidthAndState()> -> _SOURCE_
<com.android.mms.ui.SlideshowEditor: com.android.mms.model.RegionModel getTextRegion()> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> -> _SOURCE_
<java.security.MessageDigest: java.security.Provider getProvider()> -> _SOURCE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.util.Set createEntrySet()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getPhoneticNameTextView()> -> _SOURCE_
<com.android.inputmethod.latin.LocaleUtils: int getMatchLevel(java.lang.String,java.lang.String)> -> _SOURCE_
<android.widget.GridLayout$Axis: android.widget.GridLayout$PackedMap getGroupBounds()> -> _SOURCE_
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()> -> _SOURCE_
<com.android.providers.contacts.AbstractContactsProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()> -> _SOURCE_
<gov.nist.javax.sip.header.MaxForwards: int getMaxForwards()> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.ActivityOptions: int getStartX()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<android.graphics.Point: java.lang.String toString()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.android.contacts.ContactsApplication: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getEncryptionAlgorithm()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getServerCertificates()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryInstrumentation(java.lang.String,int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: com.android.internal.policy.impl.keyguard.KeyguardSecurityView getSecurityView()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()> -> _SOURCE_
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.nio.CharSequenceAdapter: char get()> -> _SOURCE_
<android.filterfw.core.NativeFrame: int[] getInts()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent: android.net.Uri save(android.content.Context)> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> -> _SOURCE_
<java.net.URI: java.lang.String toASCIIString()> -> _SOURCE_
<java.util.HashSet: java.lang.Object clone()> -> _SOURCE_
<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCache getInstance()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getDataMimeType(long)> -> _SOURCE_
<android.telephony.CellIdentityGsm: int getPsc()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: int getViewTypeCount()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)> -> _SOURCE_
<java.security.spec.ECFieldFp: int getFieldSize()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl access$400(com.android.server.sip.SipSessionGroup,javax.sip.RequestEvent,android.net.sip.ISipSessionListener,javax.sip.ServerTransaction,int)> -> _SOURCE_
<com.android.phone.PhoneUtils: android.graphics.drawable.Drawable getProviderIcon(android.content.Context,android.content.Intent)> -> _SOURCE_
<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice getPrimaryDisplayDeviceLocked()> -> _SOURCE_
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.net.Socket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: int getPhoneType()> -> _SOURCE_
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()> -> _SOURCE_
<java.nio.BaseByteBuffer: char getChar(int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getStarts(int)> -> _SOURCE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()> -> _SOURCE_
<com.android.browser.NavTabScroller: int getRelativeChildTop(int)> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getNormalizedBitmap(android.graphics.Bitmap,int,boolean)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBluetoothOnTime(long,int)> -> _SOURCE_
<java.security.Signature$SignatureImpl: byte[] engineSign()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)> -> _SOURCE_
<android.widget.GridLayout: int getColumnCount()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()> -> _SOURCE_
<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getAddress()> -> _SOURCE_
<com.android.internal.telephony.IccServiceTable: java.lang.String toString()> -> _SOURCE_
<java.text.StringCharacterIterator: int getBeginIndex()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: boolean isStateful()> -> _SOURCE_
<com.android.browser.TabScrollView$TabLayout: int getChildDrawingOrder(int,int)> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager: java.util.List splitIntoFtsTokens(java.lang.String)> -> _SOURCE_
<java.beans.PropertyChangeEvent: java.lang.Object getPropagationId()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String getTempContainerId()> -> _SOURCE_
<com.android.mms.util.Recycler$SmsRecycler: int getMessageLimit(android.content.Context)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet headSet(java.lang.Object)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String[] getSharedPreference(android.content.Context,java.lang.String,java.lang.String[])> -> _SOURCE_
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.RDN[] getRDNs()> -> _SOURCE_
<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int,java.net.InetAddress)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: int getUserActivityCount(int,int)> -> _SOURCE_
<android.media.AudioService$ScoClient: int getPid()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetDisplayName(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<com.android.calendar.event.EditEventHelper: java.util.LinkedHashSet getAddressesFromList(java.lang.String,com.android.common.Rfc822Validator)> -> _SOURCE_
<android.os.Debug: int getGlobalExternalFreedCount()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<org.json.JSONObject: java.lang.String checkName(java.lang.String)> -> _SOURCE_
<com.android.settings.wifi.WifiSettings: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardCodesSet: int getCode(java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale,java.lang.String)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLSession getSession()> -> _SOURCE_
<android.view.animation.Transformation: float getAlpha()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentTypeHeader createContentTypeHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.mms.model.SlideModel: com.android.mms.model.ImageModel getImage()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> -> _SOURCE_
<android.telephony.SmsCbLocation: java.lang.String getPlmn()> -> _SOURCE_
<android.content.pm.ProviderInfo: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getNeedInitialFocus()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: java.util.Enumeration getIds()> -> _SOURCE_
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getNamespace(java.lang.String)> -> _SOURCE_
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()> -> _SOURCE_
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.util.List getConnectedHealthDevices()> -> _SOURCE_
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.lang.String encodeBody()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getLocalCertificates()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(android.accounts.AccountManagerService$UserAccounts,java.lang.String)> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList reverse()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getRingingCall()> -> _SOURCE_
<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()> -> _SOURCE_
<android.security.Credentials: android.security.Credentials getInstance()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getLoopbackAddress()> -> _SOURCE_
<java.text.NumberFormat: java.lang.String format(long)> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.net.Uri getCallUri(java.lang.String)> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getEmergency()> -> _SOURCE_
<android.preference.PreferenceActivity: android.preference.PreferenceActivity$Header access$400(android.preference.PreferenceActivity)> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<android.content.Intent: android.content.Intent cloneFilter()> -> _SOURCE_
<android.support.v4.view.ViewCompat$HCViewCompatImpl: int getLayerType(android.view.View)> -> _SOURCE_
<android.drm.DrmUtils$ExtendedMetadataParser: java.util.Iterator iterator()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.ReferredBy: java.lang.String encodeBody()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap build()> -> _SOURCE_
<android.content.ClipData$Item: android.net.Uri getUri()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.Object clone()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getDataActivity()> -> _SOURCE_
<libcore.util.ZoneInfo: int getRawOffset()> -> _SOURCE_
<android.util.EventLog: java.lang.String getTagName(int)> -> _SOURCE_
<android.content.res.TypedArray: boolean getBoolean(int,boolean)> -> _SOURCE_
<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressFactoryImpl: javax.sip.address.Address createAddress()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isSecure()> -> _SOURCE_
<java.util.Currency: java.lang.String toString()> -> _SOURCE_
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()> -> _SOURCE_
<com.android.mms.transaction.DefaultRetryScheme: int getRetryLimit()> -> _SOURCE_
<java.nio.LongToByteBufferAdapter: long get()> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo getWordInfo(int)> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: java.lang.String[] constructSearchArgs(java.lang.String[],long,long)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()> android.permission.READ_PHONE_STATE -> _SOURCE_|UNIQUE_IDENTIFIER
<gov.nist.javax.sip.message.SIPMessage: int getSize()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getSipUri()> -> _SOURCE_
<android.media.AudioService: int getMode()> -> _SOURCE_
<java.text.ParsePosition: int getIndex()> -> _SOURCE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: java.lang.String encodeBody()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getKeyIdentifier()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.net.Socket accept()> -> _SOURCE_
<android.widget.AbsListView: int getFooterViewsCount()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)> -> _SOURCE_
<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()> -> _SOURCE_
<android.view.ViewGroup: int getChildCount()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getIdAttributeResourceValue(int)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()> -> _SOURCE_
<com.google.common.collect.Range: java.lang.Comparable lowerEndpoint()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String[] getRowColumns(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[])> -> _SOURCE_
<android.view.View: android.os.IBinder getWindowToken()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String)> -> _SOURCE_
<java.net.Socket: int getSendBufferSize()> -> _SOURCE_
<android.os.Environment: java.io.File getSystemSecureDirectory()> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.security.MessageDigest: byte[] digest(byte[])> -> _SOURCE_
<com.android.emailcommon.mail.Folder: java.lang.String toString()> -> _SOURCE_
<com.android.vcard.VCardUtils: java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String)> -> _SOURCE_
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()> -> _SOURCE_
<java.util.zip.Inflater: int getRemaining()> -> _SOURCE_
<android.os.ICancellationSignal$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: short get(java.lang.String,short)> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: int getOpacity()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getCurrentSpan()> -> _SOURCE_
<android.net.NetworkInfo: java.lang.String getReason()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> android.permission.ACCESS_WIFI_STATE -> _SOURCE_
<android.database.sqlite.SQLiteDirectCursorDriver: java.lang.String toString()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getExampleNumber()> -> _SOURCE_
<com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: java.lang.String getDescriptionForKey(android.content.Context,com.android.inputmethod.keyboard.Keyboard,com.android.inputmethod.keyboard.Key,boolean)> -> _SOURCE_
<android.net.SntpClient: long getNtpTimeReference()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothProfileManager: com.android.settings.bluetooth.PbapServerProfile getPbapProfile()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getViaHostPort()> -> _SOURCE_
<android.nfc.tech.NfcB: android.nfc.Tag getTag()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Object getDefaultValue()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable[] toArray()> -> _SOURCE_
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: int getTypeRank(int)> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment: android.content.pm.PackageManager getPackageManager()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSelectorView: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)> -> _SOURCE_
<com.google.common.collect.Count: int getAndAdd(int)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getJavaScriptEnabled()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()> -> _SOURCE_
<android.net.ProxyProperties: java.lang.String getExclusionList()> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: int getDeliveryReport()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getInviteContactActionLabel(android.content.Context)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getNextSibling()> -> _SOURCE_
<android.media.SoundPool: int load(android.content.Context,int,int)> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)> -> _SOURCE_
<com.android.camera.ComboPreferences: java.util.Map getAll()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getFromIndex()> -> _SOURCE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getIccSerialNumber()> -> _SOURCE_
<gov.nist.core.Token: java.lang.String toString()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.database.Cursor getCursor(int)> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encode(java.lang.StringBuffer)> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getWidth()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoLevel()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getActiveApnHost(java.lang.String)> -> _SOURCE_
<gov.nist.core.GenericObjectList: gov.nist.core.GenericObject first()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object)> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: int getCodePointBeforeCursor()> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)> -> _SOURCE_
<android.filterfw.core.ProgramPort: java.lang.String toString()> -> _SOURCE_
<java.nio.IntBuffer: int hashCode()> -> _SOURCE_
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer reset()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)> -> _SOURCE_
<java.util.Locale: java.lang.String getLanguage()> -> _SOURCE_
<java.security.cert.CertificateFactorySpi: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: void getVisibleWindowsForDisplay(int,java.util.List)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getParameterNames()> -> _SOURCE_
<android.content.res.Resources: android.content.res.AssetManager getAssets()> -> _SOURCE_
<java.lang.Package: java.lang.String toString()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(int)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact getMyContactHeader()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getFactoryResetHomeUrl(android.content.Context)> -> _SOURCE_
<android.view.AccessibilityInteractionController$PrivateHandler: java.lang.String getMessageName(android.os.Message)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getTransport()> -> _SOURCE_
<com.android.ex.chips.Queries$1: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.telephony.RetryManager: java.lang.String toString()> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int,int)> -> _SOURCE_
<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getDisplayName()> -> _SOURCE_
<com.android.vcard.VCardEntry$BirthdayData: boolean isEmpty()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap$SerializedForm: java.lang.Object readResolve()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.message.MultipartMimeContent getMultipartMimeContent()> -> _SOURCE_
<android.provider.Settings$Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)> -> _SOURCE_
<gov.nist.core.StringTokenizer: java.lang.String getNextToken(char)> -> _SOURCE_
<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.animation.Animation: float getScaleFactor()> -> _SOURCE_
<com.android.contacts.test.InjectedServices: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.location.LocationRequest: int getQuality()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()> -> _SOURCE_
<com.android.uiautomator.core.QueryController: java.lang.String getCurrentActivityName()> -> _SOURCE_
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: int getEriFileVersion()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactsDatabaseHelper getThreadActiveDatabaseHelperForTest()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()> -> _SOURCE_
<com.android.vcard.VCardBuilder: java.lang.String toString()> -> _SOURCE_
<com.android.settings.DataUsageSummary$DataUsageAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<java.math.BigInteger: int getLowestSetBit()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getRemainingPostDialString()> -> _SOURCE_
<android.widget.AbsListView: int getTranscriptMode()> -> _SOURCE_
<android.drm.DrmRights: java.lang.String getSubscriptionId()> -> _SOURCE_
<com.android.contacts.util.ContactBadgeUtil: java.lang.CharSequence getSocialDate(com.android.contacts.util.StreamItemEntry,android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)> -> _SOURCE_
<android.view.View: int getImportantForAccessibility()> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String[] getValueNames()> -> _SOURCE_
<android.widget.Scroller: int getStartX()> -> _SOURCE_
<android.os.UserHandle: int getCallingUserId()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getColumnNumber()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()> -> _SOURCE_
<android.view.ViewDebug: long getViewRootImplCount()> -> _SOURCE_
<android.widget.ZoomButtonsController: android.view.View getZoomControls()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: android.content.Context getContext()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> -> _SOURCE_
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getPrefix()> -> _SOURCE_
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNumber()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMap$SerializedForm: java.lang.Object readResolve()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: long getExpirationTime()> -> _SOURCE_
<android.view.IInputFilter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerAddress()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)> -> _SOURCE_
<com.android.vcard.VCardUtils: java.lang.String getPropertyNameForIm(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()> -> _SOURCE_
<android.os.Parcel: java.lang.CharSequence readCharSequence()> -> _SOURCE_
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()> -> _SOURCE_
<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(java.lang.String,int)> -> _SOURCE_
<java.util.Scanner: java.io.IOException ioException()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)> -> _SOURCE_
<com.google.android.mms.pdu.SendReq: int getReadReport()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab newTab()> -> _SOURCE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getHost()> -> _SOURCE_
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanStart(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object get(int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: short getRestart()> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: int getEndOffset()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: long getContactId()> -> _SOURCE_
<android.app.SharedPreferencesImpl: java.util.Map getAll()> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastIoWaitTime()> -> _SOURCE_
<android.view.KeyEvent: int getMaxKeyCode()> -> _SOURCE_
<com.android.mms.data.Contact: int getPresenceResId()> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getBoundary()> -> _SOURCE_
<android.widget.AdapterView: int getLastVisiblePosition()> -> _SOURCE_
<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()> -> _SOURCE_
<java.lang.System: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getPostalList()> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: int getSocketTimeout()> -> _SOURCE_
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(android.widget.GridLayout$Alignment,boolean)> -> _SOURCE_
<android.view.MotionEvent: float getY()> -> _SOURCE_
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()> -> _SOURCE_
<com.android.mms.model.SlideModel: int getDuration()> -> _SOURCE_
<android.content.Entity: android.content.ContentValues getEntityValues()> -> _SOURCE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: java.lang.String toString()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: short getNodeType()> -> _SOURCE_
<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)> -> _SOURCE_
<com.android.deskclock.AlarmPreference: android.net.Uri getAlert()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile access$2600(javax.sip.header.HeaderAddress)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: java.lang.String readLine()> -> _SOURCE_
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()> -> _SOURCE_
<com.android.phone.CallTime: long getCallDuration(com.android.internal.telephony.Call)> -> _SOURCE_
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getQueueLength()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcActivatingState access$1200(com.android.internal.telephony.DataConnection)> -> _SOURCE_
<android.os.DropBoxManager$Entry: java.io.InputStream getInputStream()> -> _SOURCE_
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> -> _SOURCE_
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()> -> _SOURCE_
<android.hardware.SystemSensorManager$ListenerDelegate: java.lang.Object getListener()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)> -> _SOURCE_
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getCallWaiting(android.os.Message)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$HandlerParams: android.os.UserHandle getUser()> -> _SOURCE_
<com.android.internal.policy.impl.ShortcutManager: android.content.Intent getIntent(android.view.KeyCharacterMap,int,int)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.Multiset$Entry lastEntry()> -> _SOURCE_
<android.widget.Spinner: int getBaseline()> -> _SOURCE_
<com.android.mms.MmsApp: android.drm.DrmManagerClient getDrmManagerClient()> -> _SOURCE_
<android.app.ActivityOptions: int getStartHeight()> -> _SOURCE_
<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getItemPosition(java.lang.Object)> -> _SOURCE_
<android.view.View$8: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.message.ListMap: gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: int getUnreadCountByMailboxType(android.content.Context,int)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()> -> _SOURCE_
<java.util.Date: int getTimezoneOffset()> -> _SOURCE_
<com.android.browser.homepages.HomeProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,int)> -> _SOURCE_
<com.android.mms.util.AddressUtils: java.lang.String getFrom(android.content.Context,android.net.Uri)> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.app.KeyguardManager getKeyguardManager()> -> _SOURCE_
<gov.nist.javax.sip.header.Reason: int getCause()> -> _SOURCE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeName()> -> _SOURCE_
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)> -> _SOURCE_
<android.view.InputDevice: android.os.Vibrator getVibrator()> -> _SOURCE_
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMultipart: java.lang.String getPreamble()> -> _SOURCE_
<com.android.calendar.CalendarUtils: android.content.SharedPreferences getSharedPreferences(android.content.Context,java.lang.String)> -> _SOURCE_
<android.widget.TextView: float getRightFadingEdgeStrength()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ExtensionHeader createMinSEHeader(int)> -> _SOURCE_
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])> -> _SOURCE_
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate: byte[] getEncoded()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)> -> _SOURCE_
<java.util.jar.Attributes: java.util.Collection values()> -> _SOURCE_
<android.text.style.StyleSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: long getTimestamp()> -> _SOURCE_
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: int getViewWidth()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.lang.String getName()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: boolean isStateful()> -> _SOURCE_
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> -> _SOURCE_
<org.json.JSONStringer: org.json.JSONStringer endArray()> -> _SOURCE_
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.accounts.AccountManager$Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<javax.crypto.Cipher: byte[] doFinal()> -> _SOURCE_
<java.util.jar.JarVerifier: java.security.cert.Certificate[] getCertificates(java.lang.String)> -> _SOURCE_
<android.webkit.ZoomManager: float getZoomOverviewScale()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()> -> _SOURCE_
<org.apache.http.message.BasicRequestLine: java.lang.String getUri()> -> _SOURCE_
<com.android.phone.PhoneGlobals: com.android.phone.PhoneGlobals getInstanceIfPrimary()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteRsrq()> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.WRITE_CONTACTS -> _SOURCE_
<android.content.ContentValues: java.util.Set keySet()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: int getWidgetPageIndex(android.view.View)> -> _SOURCE_
<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest()> -> _SOURCE_
<javax.crypto.Mac: byte[] doFinal()> -> _SOURCE_
<com.android.settings.vpn2.VpnSettings$VpnPreference: com.android.internal.net.VpnProfile getProfile()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.MmiCode$State getState()> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String,float)> -> _SOURCE_
<com.android.contacts.model.account.AccountTypeWithDataSet: java.lang.String toString()> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: int getCount()> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer put(java.nio.ShortBuffer)> -> _SOURCE_
<android.widget.ProgressBar: int getSecondaryProgress()> -> _SOURCE_
<java.security.cert.CertStore: java.lang.String getDefaultType()> -> _SOURCE_
<java.util.Properties: java.util.Enumeration propertyNames()> -> _SOURCE_
<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.content.Context getContext()> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getCurrentType(android.content.ContentValues,com.android.contacts.model.dataitem.DataKind)> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)> -> _SOURCE_
<java.nio.DoubleBuffer: int hashCode()> -> _SOURCE_
<android.view.View: int getRawLayoutDirection()> -> _SOURCE_
<android.provider.Settings$System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)> -> _SOURCE_
<android.telephony.SmsCbEtwsInfo: int getWarningType()> -> _SOURCE_
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplication(int)> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)> -> _SOURCE_
<java.net.Socket: int getTrafficClass()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingBottom()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()> -> _SOURCE_
<android.provider.MediaStore$Video$Media: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<javax.net.ssl.SSLEngineResult: java.lang.String toString()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getAlpha()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordHistoryLength()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getEventType()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespace(java.lang.String)> -> _SOURCE_
<java.lang.StackTraceElement: int getLineNumber()> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)> -> _SOURCE_
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()> -> _SOURCE_
<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getOriginatingIOI()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MimeVersionHeader createMimeVersionHeader(int,int)> -> _SOURCE_
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()> -> _SOURCE_
<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()> -> _SOURCE_
<android.view.KeyEvent: int getModifiers()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object getLast()> -> _SOURCE_
<com.android.exchange.AbstractSyncService: void <init>(android.content.Context,com.android.emailcommon.provider.Mailbox)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.ASN1Primitive getObject()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: int getViewGroupLabelResId()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getDisplayPhoto()> -> _SOURCE_
<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)> -> _SOURCE_
<libcore.net.http.RawHeaders: int getResponseCode()> -> _SOURCE_
<android.preference.Preference: int getLayoutResource()> -> _SOURCE_
<android.content.pm.Signature: byte[] toByteArray()> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.view.View: android.graphics.Bitmap getDrawingCache()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: java.security.Provider getProvider()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentFragmentImpl: short getNodeType()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERSetParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<com.android.internal.telephony.cat.ResultException: java.lang.String toString()> -> _SOURCE_
<java.text.DateFormat: java.util.Calendar getCalendar()> -> _SOURCE_
<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()> -> _SOURCE_
<android.app.Fragment: boolean getRetainInstance()> -> _SOURCE_
<com.android.settings.widget.InvertedChartAxis: float[] getTickPoints()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.LocalBluetoothAdapter getBluetoothAdapter()> -> _SOURCE_
<android.security.KeyStore: long getmtime(java.lang.String)> -> _SOURCE_
<com.android.calendar.agenda.AgendaFragment: long getLastShowEventId()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean)> -> _SOURCE_
<android.telephony.ServiceState: int getNetworkId()> -> _SOURCE_
<android.location.ICountryListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xml.dom.EntityReferenceImpl: java.lang.String getNodeName()> -> _SOURCE_
<android.media.AudioManager: boolean isMusicActive()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeCanonical()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: int getHash()> -> _SOURCE_
<com.android.settings.wifi.AccessPoint: java.lang.String getSecurityString(boolean)> -> _SOURCE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)> -> _SOURCE_
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()> -> _SOURCE_
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.CellLocation getCellLocation()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferMaxSize()> -> _SOURCE_
<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher getInstance(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccCard getIccCard()> -> _SOURCE_
<android.net.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration syncGetWifiApConfiguration()> -> _SOURCE_
<android.app.SearchManager: java.util.List getGlobalSearchActivities()> -> _SOURCE_
<android.app.IThumbnailRetriever$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine2()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity: com.android.contacts.detail.ContactDetailFragment getDetailFragment()> -> _SOURCE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> -> _SOURCE_
<com.android.browser.Tab: long getId()> -> _SOURCE_
<java.net.DatagramPacket: int getLength()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneType()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie2: int[] getPorts()> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallIdHeader()> -> _SOURCE_
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getRealm()> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: int getDepth()> -> _SOURCE_
<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager getInstance(android.content.Context)> -> _SOURCE_
<java.util.FormatFlagsConversionMismatchException: char getConversion()> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getRetrieveText()> -> _SOURCE_
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: int getVersion()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: boolean getVisible()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getContentLocation()> -> _SOURCE_
<java.text.NumberFormat: int hashCode()> -> _SOURCE_
<android.view.DragEvent: boolean getResult()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranch()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getDisabledSystemInputMethods()> -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.String toString()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()> -> _SOURCE_
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()> -> _SOURCE_
<android.widget.NumberPicker$AccessibilityNodeProviderImpl: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getInsertedRawContactIds()> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getUpdatedSyncStates()> -> _SOURCE_
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()> -> _SOURCE_
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()> -> _SOURCE_
<com.android.providers.calendar.CalendarDatabaseHelper: com.android.providers.calendar.CalendarDatabaseHelper getInstance(android.content.Context)> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailLabel()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<gov.nist.javax.sip.header.MinExpires: int getExpires()> -> _SOURCE_
<java.util.DuplicateFormatFlagsException: java.lang.String getFlags()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$ElementSet: java.lang.Object first()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Set getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: int getStateCount()> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: java.util.Set elementSet()> -> _SOURCE_
<java.lang.Short: java.lang.String toString()> -> _SOURCE_
<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getLocalName(int)> -> _SOURCE_
<com.android.providers.calendar.CalendarCache: java.lang.String readDataLocked(android.database.sqlite.SQLiteDatabase,java.lang.String)> -> _SOURCE_
<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getUserAgentString()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimFileHandler: java.lang.String getEFPath(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$7: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)> -> _SOURCE_
<com.android.mms.ui.QuickContactDivot: int getPosition()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getSubject()> -> _SOURCE_
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: long getContentLength()> -> _SOURCE_
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)> -> _SOURCE_
<javax.sip.RequestEvent: javax.sip.Dialog getDialog()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeName()> -> _SOURCE_
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()> -> _SOURCE_
<android.view.Display: java.lang.String getAddress()> -> _SOURCE_
<android.view.DragEvent: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: boolean isWildCard()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction findSubscribeTransaction(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.ListeningPointImpl)> -> _SOURCE_
<android.hardware.input.InputManager: int[] getInputDeviceIds()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getDriverCalls()> -> _SOURCE_
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()> -> _SOURCE_
<android.hardware.Camera$Parameters: float getExposureCompensationStep()> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getEmailGateway()> -> _SOURCE_
<android.support.v13.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)> -> _SOURCE_
<com.google.common.base.Optional$Absent: java.lang.Object get()> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: long getStatusUpdateTime()> -> _SOURCE_
<java.security.CodeSigner: java.lang.String toString()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()> -> _SOURCE_
<java.text.DateFormat: java.text.NumberFormat getNumberFormat()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getSubscriberNumber()> -> _SOURCE_
<com.android.browser.TabControl: int getCurrentPosition()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> -> _SOURCE_
<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbAccessory getCurrentAccessory()> -> _SOURCE_
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sign()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)> -> _SOURCE_
<gov.nist.javax.sip.parser.Parser: java.text.ParseException createParseException(java.lang.String)> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String number()> -> _SOURCE_
<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon)> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: org.w3c.dom.Element getBaseElement()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.lang.Object blockingLock()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)> -> _SOURCE_
<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()> -> _SOURCE_
<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()> -> _SOURCE_
<com.android.mms.ui.ChipsRecipientAdapter: int getItemLayout()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getSrc()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset descendingMultiset()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int[] getState()> -> _SOURCE_
<android.provider.Settings$Global: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)> -> _SOURCE_
<android.widget.AbsListView: int getTopPaddingOffset()> -> _SOURCE_
<java.lang.StringBuilder: java.lang.StringBuilder reverse()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDERSubStream()> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemWriter: int getOutputSize(com.android.org.bouncycastle.util.io.pem.PemObject)> -> _SOURCE_
<com.android.contacts.editor.GroupMembershipView$GroupSelectionItem: long getGroupId()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedIdentity: java.lang.String encodeBody()> -> _SOURCE_
<android.content.ContentProviderProxy: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getDimension(int)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getFirstChild()> -> _SOURCE_
<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.javax.sip.address.GenericURI getParameterAsURI(java.lang.String)> -> _SOURCE_
<android.location.Address: android.os.Bundle getExtras()> -> _SOURCE_
<java.lang.Double: boolean isInfinite()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> -> _SOURCE_
<org.apache.http.message.BasicRequestLine: java.lang.String getMethod()> -> _SOURCE_
<android.content.res.AssetManager$AssetInputStream: int getAssetInt()> -> _SOURCE_
<android.text.format.Time: java.lang.String getCurrentTimezone()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ServerTransaction getNewServerTransaction(javax.sip.message.Request)> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.ProxyProperties getProxy()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PProfileKey: java.lang.String encodeBody()> -> _SOURCE_
<java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.security.cert.CertPath: java.lang.String getType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getLocalPrincipal()> -> _SOURCE_
<com.android.server.BatteryService: int getBatteryLevel()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: int getHoldCount()> -> _SOURCE_
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getCallId()> -> _SOURCE_
<java.lang.ProcessManager$ProcessImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<gov.nist.javax.sip.header.RecordRoute: java.lang.String encodeBody()> -> _SOURCE_
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()> -> _SOURCE_
<android.telephony.SmsCbMessage: java.lang.String toString()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyLog()> -> _SOURCE_
<java.lang.Package: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getLastChild()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: java.lang.Object writeReplace()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()> -> _SOURCE_
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.database.MatrixCursor: float getFloat(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMFileHandler: java.lang.String getEFPath(int)> -> _SOURCE_
<java.util.jar.Manifest: java.util.jar.Manifest$Chunk getChunk(java.lang.String)> -> _SOURCE_
<java.security.KeyStore$SecretKeyEntry: javax.crypto.SecretKey getSecretKey()> -> _SOURCE_
<android.view.GLES20Canvas: int getMaximumBitmapHeight()> -> _SOURCE_
<com.android.server.MountService: java.lang.String getSecureContainerPath(java.lang.String)> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.util.List getAllCellInfo()> -> _SOURCE_
<com.android.internal.telephony.test.ModelInterpreter: java.lang.String[] splitCommands(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isResponseAvailable(int)> -> _SOURCE_
<com.android.mms.ui.AttachmentTypeSelectorAdapter$AttachmentListItem: int getCommand()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getPlaybackStream()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: byte get()> -> _SOURCE_
<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()> -> _SOURCE_
<android.widget.GridLayout$7: int getSizeInCell(android.view.View,int,int)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(int)> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)> -> _SOURCE_
<android.view.ViewConfiguration: int getMinimumFlingVelocity()> -> _SOURCE_
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)> android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<com.android.uiautomator.core.UiDevice: int getDisplayRotation()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()> -> _SOURCE_
<android.text.method.TextKeyListener$NullKeyListener: android.text.method.TextKeyListener$NullKeyListener getInstance()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: int size()> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()> -> _SOURCE_
<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()> -> _SOURCE_
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)> -> _SOURCE_
<com.android.contacts.interactions.ImportExportDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object getChild(java.lang.Object,int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getStale()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getTabSize(int)> -> _SOURCE_
<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: org.apache.harmony.security.x509.Extensions getCrlEntryExtensions()> -> _SOURCE_
<android.drm.DrmUtils: byte[] readBytes(java.io.File)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.Set access$1002(com.android.ex.chips.BaseRecipientAdapter,java.util.Set)> -> _SOURCE_
<com.android.contacts.model.Contact: android.net.Uri getLookupUri()> -> _SOURCE_
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)> -> _SOURCE_
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()> -> _SOURCE_
<android.webkit.ZoomManager: float getDefaultScale()> -> _SOURCE_
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()> -> _SOURCE_
<android.os.ServiceManagerNative: android.os.IBinder asBinder()> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.os.Debug: int getThreadExternalAllocCount()> -> _SOURCE_
<android.support.v4.view.ViewCompat$JBViewCompatImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.widget.PopupMenu: android.view.Menu getMenu()> -> _SOURCE_
<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: short getNodeType()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> -> _SOURCE_
<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToRGB(byte[],int,boolean)> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: java.lang.String getString(int)> -> _SOURCE_
<java.text.Format: java.lang.Object parseObject(java.lang.String)> -> _SOURCE_
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int)> -> _SOURCE_
<android.text.style.SubscriptSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERT61String: com.android.org.bouncycastle.asn1.DERT61String getInstance(java.lang.Object)> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()> -> _SOURCE_
<com.android.exchange.adapter.PingParser: int getSyncStatus()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet headSet(java.lang.Comparable,boolean)> -> _SOURCE_
<com.android.exchange.ExchangeService: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager(boolean,int)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)> -> _SOURCE_
<com.google.android.mms.util.AbstractCache: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.List getCurrentSyncs(int)> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity: android.content.Intent getCallSettingsIntent()> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String getModule()> -> _SOURCE_
<java.util.GregorianCalendar: int getMinimum(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)> -> _SOURCE_
<java.nio.CharToByteBufferAdapter: char get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump()> -> _SOURCE_
<java.security.Permission: java.lang.String getName()> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearItalianLeadingZero()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<java.lang.Class: java.lang.Object[] getEnumConstants()> -> _SOURCE_
<android.nfc.NdefMessage: int getByteArrayLength()> -> _SOURCE_
<com.android.server.wm.WindowState: long getInputDispatchingTimeoutNanos()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getVoiceMessageCount()> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getRawIpSourceAddress()> -> _SOURCE_
<java.nio.DirectByteBuffer: double getDouble(int)> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.String getLoggerName()> -> _SOURCE_
<org.xml.sax.SAXException: java.lang.String toString()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)> -> _SOURCE_
<com.android.contacts.GroupMetaData: long getGroupId()> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: java.lang.String getSchemeString(java.lang.String,int,java.lang.String)> -> _SOURCE_
<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getSentByField()> -> _SOURCE_
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getBackButton()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getTitle()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.google.android.mms.pdu.ReadOrigInd: long getDate()> -> _SOURCE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> -> _SOURCE_
<com.android.camera.Thumbnail: com.android.camera.Thumbnail createThumbnail(byte[],int,int,android.net.Uri)> -> _SOURCE_
<com.android.internal.widget.ILockSettings$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.widget.LockPatternView$Cell: int getRow()> -> _SOURCE_
<android.os.IUpdateLock$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.math.BigInteger: java.math.BigInteger shiftLeftOneBit()> -> _SOURCE_
<com.android.calendar.CalendarController: long getDateFlags()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getMultiplier()> -> _SOURCE_
<java.util.TreeSet: java.lang.Object clone()> -> _SOURCE_
<android.widget.GridLayout$4: int getAlignmentValue(android.view.View,int,int)> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()> -> _SOURCE_
<android.view.ActionMode: boolean getTitleOptionalHint()> -> _SOURCE_
<java.util.Currency: java.lang.String getDisplayName()> -> _SOURCE_
<com.android.server.wm.WindowState: int getSurfaceLayer()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> -> _SOURCE_
<java.util.TreeMap: java.util.Set entrySet()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.ReplacesHeader createReplacesHeader(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)> -> _SOURCE_
<com.android.inputmethod.latin.DicTraverseSession: long getSession()> -> _SOURCE_
<android.preference.PreferenceManager: int getSharedPreferencesMode()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Set entrySet()> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.VIBRATE -> _SOURCE_
<android.view.FocusFinder: android.view.FocusFinder getInstance()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> -> _SOURCE_
<com.android.mms.util.SimpleCache: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.phone.PhoneUtils: java.lang.CharSequence getProviderLabel(android.content.Context,android.content.Intent)> -> _SOURCE_
<com.android.mms.util.PduLoaderManager: com.android.mms.util.ItemLoadedFuture getPdu(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)> -> _SOURCE_
<android.filterfw.core.Filter: int getSleepDelay()> -> _SOURCE_
<android.view.View: boolean draw(android.graphics.Canvas,android.view.ViewGroup,long)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPreviewFrameRate()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getMaxScrollX(java.lang.Object)> -> _SOURCE_
<java.util.Currency: java.lang.String getCurrencyCode()> -> _SOURCE_
<com.android.mms.util.Recycler: int getMessageMinLimit()> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action getAction()> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: byte[] getBuffer()> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen)> -> _SOURCE_
<com.google.common.collect.Range: java.lang.String toString()> -> _SOURCE_
<java.math.BigInteger: java.math.BigInteger not()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.net.url.FileURLConnection: int getContentLength()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Cubic$2: float getInterpolation(float)> -> _SOURCE_
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.CharSequence getDisplayName(android.content.Context,com.android.contacts.model.Contact)> -> _SOURCE_
<dalvik.system.BlockGuard$BlockGuardPolicyException: java.lang.String getMessage()> -> _SOURCE_
<java.net.URI: java.net.URI normalize()> -> _SOURCE_
<java.lang.BootClassLoader: java.lang.BootClassLoader getInstance()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getChildCount(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()> -> _SOURCE_
<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.util.NtpTrustedTime: long currentTimeMillis()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getState()> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: java.lang.ThreadLocal getTransactionHolder()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getType()> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectActivityLeaks()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getStandardFontFamily()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebSettings getSettings()> -> _SOURCE_
<java.net.DatagramSocket: int getTrafficClass()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.list.ContactListFilter: java.lang.String getId()> -> _SOURCE_
<android.content.Intent: java.lang.String toInsecureString()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()> -> _SOURCE_
<android.speech.tts.TextToSpeech: java.util.List getEngines()> -> _SOURCE_
<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongValueReference: java.lang.Object get()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPort()> -> _SOURCE_
<android.widget.Toast: int getYOffset()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getViewportHeight()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getOrganizationList()> -> _SOURCE_
<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()> -> _SOURCE_
<java.security.Provider: java.lang.String getName()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.MappingFileProvider: java.lang.String getFileName(int,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.BaseMenuPresenter: int getId()> -> _SOURCE_
<java.net.Socket: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxImageWidth()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getTransportParam()> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableCollatorLocales()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: double getDouble(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.message.SIPMessage getSIPMessage()> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()> -> _SOURCE_
<android.widget.AdapterViewAnimator: int getWindowSize()> -> _SOURCE_
<android.content.ContentProvider$Transport: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDefaultDreamComponent()> -> _SOURCE_
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()> -> _SOURCE_
<android.widget.SimpleAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: android.telephony.CellLocation getCellLocation()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.Token: java.lang.String toString()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()> -> _SOURCE_
<java.util.Vector: java.lang.Object get(int)> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: android.view.animation.Animation createForceHideEnterAnimation(boolean)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> -> _SOURCE_
<com.android.contacts.editor.RawContactEditorView: long getRawContactId()> -> _SOURCE_
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.BaseStatusBar$H createHandler()> -> _SOURCE_
<com.android.browser.Controller: android.webkit.WebView getCurrentWebView()> -> _SOURCE_
<android.database.sqlite.SQLiteConnectionPool: java.lang.String toString()> -> _SOURCE_
<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getOpacity()> -> _SOURCE_
<android.view.Window: android.view.Window$Callback getCallback()> -> _SOURCE_
<java.net.HttpURLConnection: java.lang.String getContentEncoding()> -> _SOURCE_
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getAdjustedTextZoom(int)> -> _SOURCE_
<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String getPackage()> -> _SOURCE_
<com.android.vcard.VCardSourceDetector: int getEstimatedType()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: com.google.common.collect.Multiset keys()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getItemLayout()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset$SerializedForm: java.lang.Object readResolve()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv newServiceStatsLocked()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<android.app.IInstrumentationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)> -> _SOURCE_
<com.android.settings.Utils: int getTetheringLabel(android.net.ConnectivityManager)> -> _SOURCE_
<com.android.systemui.statusbar.GestureRecorder$Gesture$TagRecord: java.lang.String toJson()> -> _SOURCE_
<android.widget.GridView: int getStretchMode()> -> _SOURCE_
<android.app.DownloadManager$CursorTranslator: long getLong(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: long getExpirationTime()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getCertainty()> -> _SOURCE_
<com.google.android.mms.pdu.ReadOrigInd: int getReadStatus()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: int[] getPorts()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_
<android.webkit.WebViewClassic: float computeReadingLevelScale(float)> -> _SOURCE_
<android.net.NetworkQuotaInfo: long getHardLimitBytes()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List intlNumberFormats()> -> _SOURCE_
<com.android.mms.model.TextModel: int getCharset()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: short getShort(int)> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AlertException: javax.net.ssl.SSLException getReason()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String toLocalizedPattern()> -> _SOURCE_
<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])> -> _SOURCE_
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getLastChild()> -> _SOURCE_
<java.lang.reflect.Field: double getDouble(java.lang.Object)> -> _SOURCE_
<com.android.contacts.ContactPresenceIconUtil: android.graphics.drawable.Drawable getPresenceIcon(android.content.Context,int)> -> _SOURCE_
<com.android.internal.telephony.cat.ResultException: com.android.internal.telephony.cat.ResultCode result()> -> _SOURCE_
<com.android.server.am.UsageStatsService: byte[] readFully(java.io.FileInputStream)> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String getStackName()> -> _SOURCE_
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()> -> _SOURCE_
<com.android.mms.model.MediaModel: java.lang.String getTag()> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCompanyName()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: java.lang.String getNodeName()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getData()> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String[] getHeader(java.lang.String)> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment: int getHelpResource()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()> -> _SOURCE_
<org.apache.http.impl.client.BasicCredentialsProvider: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getExtensionValue(java.lang.String)> -> _SOURCE_
<java.util.logging.Level: java.lang.String getName()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getButtonId()> -> _SOURCE_
<android.os.StrictMode: int getThreadPolicyMask()> -> _SOURCE_
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> -> _SOURCE_
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getWindowId(java.lang.Object)> -> _SOURCE_
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJsonLocked()> -> _SOURCE_
<com.android.internal.database.SortCursor: float getFloat(int)> -> _SOURCE_
<java.security.Security$SecurityDoor: java.security.Provider$Service getService(java.security.Provider,java.lang.String)> -> _SOURCE_
<android.location.GpsSatellite: float getSnr()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdn()> -> _SOURCE_
<com.android.systemui.statusbar.policy.BluetoothController: java.util.Set getBondedBluetoothDevices()> -> _SOURCE_
<java.util.jar.JarFile: java.util.jar.Manifest getManifest()> -> _SOURCE_
<java.lang.Integer: double doubleValue()> -> _SOURCE_
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()> -> _SOURCE_
<android.os.Parcel: byte[] createByteArray()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getUnrecognizedHeaders()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()> -> _SOURCE_
<android.app.SearchableInfo: int getHintId()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher negate()> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getUaProfUrl()> -> _SOURCE_
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()> -> _SOURCE_
<com.android.providers.contacts.DataRowHandlerForEmail: int getTypeRank(int)> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageName()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: android.telephony.CellLocation getCellLocation()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.EntityResolver getEntityResolver()> -> _SOURCE_
<android.text.Layout: int getLineForVertical(int)> -> _SOURCE_
<android.view.ViewGroup: int getDescendantFocusability()> -> _SOURCE_
<com.android.server.WifiService: android.os.Messenger getWifiStateMachineMessenger()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[])> -> _SOURCE_
<com.android.server.WifiService: java.lang.String getConfigFile()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> -> _SOURCE_
<com.android.server.power.DisplayPowerState$2: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()> -> _SOURCE_
<java.util.logging.LogManager: java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String)> -> _SOURCE_
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getDisplayName()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()> -> _SOURCE_
<android.app.IThumbnailRetriever$Stub$Proxy: android.graphics.Bitmap getThumbnail(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERApplicationSpecific: byte[] getContents()> -> _SOURCE_
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()> -> _SOURCE_
<com.android.mms.ui.MessageUtils: java.lang.String getMessageDetails(android.content.Context,android.database.Cursor,int)> -> _SOURCE_
<java.util.jar.Attributes$Name: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: com.android.org.bouncycastle.asn1.DERBitString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.util.SparseLongArray: long get(int,long)> -> _SOURCE_
<java.lang.reflect.Array: float getFloat(java.lang.Object,int)> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getPrefix()> -> _SOURCE_
<libcore.io.MemoryMappedFile: libcore.io.BufferIterator bigEndianIterator()> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()> -> _SOURCE_
<java.text.DecimalFormat: java.util.Currency getCurrency()> -> _SOURCE_
<android.filterfw.core.Frame: int getCapacity()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetProvider: android.content.ComponentName getComponentName(android.content.Context)> -> _SOURCE_
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> -> _SOURCE_
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()> -> _SOURCE_
<com.android.browser.homepages.RequestHandler: byte[] htmlEncode(java.lang.String)> -> _SOURCE_
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()> -> _SOURCE_
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)> -> _SOURCE_
<com.android.calendarcommon2.RecurrenceProcessor$DaySet: boolean get(android.text.format.Time,int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getMobile()> -> _SOURCE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()> -> _SOURCE_
<com.android.mms.ui.ConversationListItem: boolean isChecked()> -> _SOURCE_
<java.io.EmulatedFields$ObjectSlot: java.lang.Object getFieldValue()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: int getYear()> -> _SOURCE_
<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|SMS_MMS
<java.net.ServerSocket: boolean getReuseAddress()> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()> -> _SOURCE_
<com.android.internal.location.ILocationProvider$Stub$Proxy: com.android.internal.location.ProviderProperties getProperties()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()> -> _SOURCE_
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.net.url.FtpHandler: int getDefaultPort()> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable getCause()> -> _SOURCE_
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getUriString()> -> _SOURCE_
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)> -> _SOURCE_
<com.android.server.net.NetworkPolicyManagerService: int getUidPolicy(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encode()> -> _SOURCE_
<android.os.Handler: android.os.Looper getLooper()> -> _SOURCE_
<com.google.common.collect.ImmutableSet: int hashCode()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float[] mapPointFromViewToParent(android.view.View,float,float)> -> _SOURCE_
<android.webkit.WebViewClassic: int computeMaxScrollX()> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: short getTimeType()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri getPackageUri()> -> _SOURCE_
<libcore.io.ForwardingOs: int getsockoptInt(java.io.FileDescriptor,int,int)> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: int getSystemId()> -> _SOURCE_
<java.security.cert.CertStore: java.security.cert.CertStoreParameters getCertStoreParameters()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getLine()> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String encodeBody()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: com.android.contacts.widget.IndexerListAdapter$Placement getItemPlacementInSection(int)> -> _SOURCE_
<java.lang.Float: double doubleValue()> -> _SOURCE_
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.ContactsBinaryDictionary getContactsDictionary()> -> _SOURCE_
<android.view.IOnKeyguardExitResult$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.DropBoxManager$Entry: java.lang.String getText(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumber(java.lang.String)> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint8()> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.Object getKey()> -> _SOURCE_
<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeValue()> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: boolean getBaseBegin()> -> _SOURCE_
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()> -> _SOURCE_
<java.util.HashMap$HashIterator: java.util.HashMap$HashMapEntry nextEntry()> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastUserTime()> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.IntentHandler getIntentHandler()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: int getCdmaEriIconMode()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> -> _SOURCE_
<com.android.settings.WirelessSettings: int getHelpResource()> -> _SOURCE_
<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getAttributeCount()> -> _SOURCE_
<com.android.settings.accounts.AccountPreferenceBase: java.lang.CharSequence getLabelForType(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int standardSetCount(java.lang.Object,int)> -> _SOURCE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String toOIDString()> -> _SOURCE_
<com.android.server.display.LogicalDisplay: int getDisplayIdLocked()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getDefaultCharset()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: gov.nist.javax.sip.address.UserInfo getUserInfo()> -> _SOURCE_
<android.hardware.Sensor: int getHandle()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDateHeader: java.lang.Object clone()> -> _SOURCE_
<android.text.Layout: float getLineMax(int)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getAdapterConnectionState()> -> _SOURCE_
<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int)> -> _SOURCE_
<libcore.io.StructLinger: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebViewClassic: android.content.Context getContext()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: android.widget.ImageView getDelete()> -> _SOURCE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getActiveApnHost(java.lang.String)> -> _SOURCE_
<com.android.contacts.calllog.ClearCallLogDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.settings.bluetooth.A2dpProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.lang.ref.Reference: java.lang.Object get()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getAlpha()> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory$1: java.security.cert.X509Certificate[] getAcceptedIssuers()> -> _SOURCE_
<android.support.v4.view.ViewCompatHC: long getFrameTime()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> -> _SOURCE_
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession(android.os.Looper)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()> -> _SOURCE_
<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)> -> _SOURCE_
<java.util.TreeMap$Node: java.lang.Object getKey()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CallTracker getCallTracker()> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableCalendarLocales()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getAuthType(boolean)> -> _SOURCE_
<android.filterfw.core.Filter: java.util.Collection getInputPorts()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.String toURI()> -> _SOURCE_
<com.android.mms.data.ContactList: java.lang.String[] getNumbers(boolean)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: short getFillDefault()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String)> -> _SOURCE_
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()> -> _SOURCE_
<java.util.StringTokenizer: java.lang.Object nextElement()> -> _SOURCE_
<com.android.systemui.ExpandHelper$ViewScaler: int getNaturalHeight(int)> -> _SOURCE_
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimLiLoaded: java.lang.String getEfName()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()> -> _SOURCE_
<com.android.providers.contacts.ContactDirectoryManager$DirectoryInfo: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: long getItemId(int)> -> _SOURCE_
<android.app.ActivityManager$TaskThumbnails: android.graphics.Bitmap getSubThumbnail(int)> -> _SOURCE_
<java.net.URLConnection: boolean getUseCaches()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()> -> _SOURCE_
<com.android.browser.BookmarkUtils: android.net.Uri getBookmarksUri(android.content.Context)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()> -> _SOURCE_
<android.media.AudioManager: int getDevicesForStream(int)> -> _SOURCE_
<org.apache.james.mime4j.field.address.Group: java.lang.String toString()> -> _SOURCE_
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxForPath(android.content.Context,long,java.lang.String)> -> _SOURCE_
<java.security.cert.PKIXParameters: java.util.Date getDate()> -> _SOURCE_
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.app.DialogFragment: android.app.Dialog getDialog()> -> _SOURCE_
<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView: int getWrongPasswordStringId()> -> _SOURCE_
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNoInternationalDialling()> -> _SOURCE_
<com.android.inputmethod.latin.LocaleUtils: java.lang.String getMatchLevelSortedString(int)> -> _SOURCE_
<android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: boolean getMobileDataEnabled()> -> _SOURCE_
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()> -> _SOURCE_
<android.animation.Animator: android.animation.Animator clone()> -> _SOURCE_
<com.android.contacts.util.DataStatus: java.lang.CharSequence getTimestampLabel(android.content.Context)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)> -> _SOURCE_
<com.android.mms.dom.smil.SmilLayoutElementImpl: org.w3c.dom.smil.SMILRootLayoutElement getRootLayout()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Component getParent()> -> _SOURCE_
<android.os.storage.StorageManager$StorageEvent: android.os.Message getMessage()> -> _SOURCE_
<android.animation.ValueAnimator: int getCurrentAnimationsCount()> -> _SOURCE_
<android.widget.FastScroller: android.widget.SectionIndexer getSectionIndexer()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.GET_ACCOUNTS -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: int getStatus(android.os.Bundle)> -> _SOURCE_
<android.os.Process: int getUidForPid(int)> -> _SOURCE_
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardViewBase$1: int getOpacity()> -> _SOURCE_
<com.android.browser.TabControl: int getTabCount()> -> _SOURCE_
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.lang.String getTimeString()> -> _SOURCE_
<com.android.mms.util.ImageCacheService: byte[] getBytes(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Hex: byte[] decode(byte[])> -> _SOURCE_
<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()> -> _SOURCE_
<com.android.mms.MmsApp: android.telephony.TelephonyManager getTelephonyManager()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)> -> _SOURCE_
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForPhone()> -> _SOURCE_
<android.media.MediaScanner: android.media.MediaScanner$FileEntry makeEntryFor(java.lang.String)> -> _SOURCE_
<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean getIccRecordsLoaded()> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: boolean isStateful()> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.view.View: int getVerticalFadingEdgeLength()> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.app.PendingIntent getSendSmsFromNotificationPendingIntent(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getPreloadAlwaysPreferenceString(android.content.Context)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String encode()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)> -> _SOURCE_
<android.webkit.WebViewClassic: int getProgress()> -> _SOURCE_
<com.android.phone.InCallUiState: com.android.phone.InCallUiState$ProgressIndicationType getProgressIndication()> -> _SOURCE_
<android.view.GLES20Canvas: int getDisplayListSize(int)> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerCount(android.view.MotionEvent)> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String strerror(int)> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getResourceText(android.content.Context,java.lang.String,int,java.lang.String)> -> _SOURCE_
<android.animation.Keyframe: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Set elementSet()> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])> -> _SOURCE_
<android.webkit.ZoomManager: int getDocumentAnchorX()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getAllCellInfo()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getInetAddress()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeType(int)> -> _SOURCE_
<com.android.server.dreams.DreamManagerService: android.content.ComponentName[] getDreamComponents()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getLaunches(int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: com.android.internal.widget.LockPatternUtils getLockPatternUtils()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCount()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()> -> _SOURCE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getContentCharset(org.apache.http.params.HttpParams)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getAccountType()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonyPlmn()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: java.util.ArrayList getSmsCbProgramData()> -> _SOURCE_
<java.lang.Class: java.lang.Class[] getClasses()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.browser.search.SearchEngines: java.util.List getSearchEngineInfos(android.content.Context)> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isOutputShutdown()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object clone()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getResponseMessage()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.lang.Object delegate()> -> _SOURCE_
<com.android.camera.CameraPreference: java.lang.String getTitle()> -> _SOURCE_
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)> -> _SOURCE_
<android.media.AudioService: int getRemoteStreamVolume()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.server.WifiService: android.net.wifi.WifiConfiguration getWifiApConfiguration()> -> _SOURCE_
<com.android.contacts.model.RawContact: com.android.contacts.model.account.AccountType getAccountType()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()> -> _SOURCE_
<android.filterfw.geometry.Quad: android.filterfw.geometry.Rectangle boundingBox()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks()> -> _SOURCE_
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getForegroundCall()> -> _SOURCE_
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.DefaultMapStorage: java.lang.String getDescription(int)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: boolean loadPreferences()> -> _SOURCE_
<javax.sip.TimeoutEvent: javax.sip.Timeout getTimeout()> -> _SOURCE_
<android.view.MotionEvent: int getPointerCount()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<java.lang.Character: byte getDirectionality(int)> -> _SOURCE_
<android.preference.Preference: boolean getPersistedBoolean(boolean)> -> _SOURCE_
<android.content.pm.PackageParser$ServiceIntentInfo: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getPositionDescription()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getUseFixedViewport()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getOpacity()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getMaxMessageSize()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getActivePhoneType()> -> _SOURCE_
<java.net.PlainDatagramSocketImpl: int getTimeToLive()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<java.util.TreeSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)> -> _SOURCE_
<android.os.Message: java.lang.String toString()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView$3: int getFailedAttempts()> -> _SOURCE_
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String encodeBody()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String debugDump(int)> -> _SOURCE_
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.Header getVersionHeader()> -> _SOURCE_
<android.widget.Spinner$DialogPopup: int getHorizontalOffset()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String encode()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean getCallForwardingIndicator()> -> _SOURCE_
<android.widget.NumberPicker: int getMaxValue()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.String getSchemeName()> -> _SOURCE_
<android.location.Address: double getLatitude()> -> _SOURCE_
<android.webkit.WebViewClassic$PrivateHandler: android.os.Looper getUiLooper()> -> _SOURCE_
<android.net.NetworkInfo: java.lang.String getTypeName()> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> -> _SOURCE_
<com.android.browser.BaseUi: android.webkit.WebView getWebView()> -> _SOURCE_
<android.view.ViewConfiguration: int getDoubleTapSlop()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$602(com.android.calendar.EventInfoFragment,android.database.Cursor)> -> _SOURCE_
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()> -> _SOURCE_
<android.app.backup.IRestoreSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.telephony.SignalStrength: int getLevel()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> -> _SOURCE_
<android.content.ComponentName: java.lang.String flattenToString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.routing.HttpRoute getRoute()> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment: com.android.contacts.editor.BaseRawContactEditorView getRawContactEditorView(long)> -> _SOURCE_
<org.apache.harmony.luni.internal.util.TimezoneGetter: org.apache.harmony.luni.internal.util.TimezoneGetter getInstance()> -> _SOURCE_
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()> -> _SOURCE_
<java.text.DateFormat: java.util.TimeZone getTimeZone()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> -> _SOURCE_
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)> -> _SOURCE_
<java.util.ArrayList: java.lang.Object clone()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin(int)> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getContentTransferEncoding()> -> _SOURCE_
<android.preference.Preference: boolean getShouldDisableView()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: java.lang.String restoreIntroTextWithMessageId(android.content.Context,long)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: android.view.View getContent()> -> _SOURCE_
<android.animation.ValueAnimator: long getStartDelay()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: java.lang.Object get()> -> _SOURCE_
<com.android.emailcommon.provider.Account: long getAccountIdFromUuid(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)> -> _SOURCE_
<android.bluetooth.IBluetoothManagerCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getReceiveBufferSize()> -> _SOURCE_
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()> -> _SOURCE_
<android.app.PendingIntent: int getCreatorUid()> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmLimitFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView$10: float getInterpolation(float)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getActualState(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()> -> _SOURCE_
<com.android.settings.CryptKeeper: java.lang.Object onRetainNonConfigurationInstance()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaderNames()> -> _SOURCE_
<android.view.ViewTreeObserver$CopyOnWriteArray$Access: java.lang.Object get(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: int getHash()> -> _SOURCE_
<java.lang.System$SystemEnvironment: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource()> -> _SOURCE_
<android.view.KeyEvent: int getSource()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.Set access$1000(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread getThread()> -> _SOURCE_
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.lang.String standardToString()> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])> -> _SOURCE_
<com.android.mms.data.ContactList: java.lang.String[] getNumbers()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)> -> _SOURCE_
<com.android.browser.Controller: android.app.Activity getActivity()> -> _SOURCE_
<com.android.server.AppWidgetService: java.util.List getInstalledProviders()> -> _SOURCE_
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: int getCountryCode()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|SYSTEM_SETTINGS
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()> -> _SOURCE_
<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int,android.content.Context)> -> _SOURCE_
<com.google.common.io.ByteStreams$5: java.io.InputStream getInput()> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getRemainingPostDialString()> -> _SOURCE_
<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.ToneSettings getToneSettings()> -> _SOURCE_
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()> -> _SOURCE_
<com.android.emailcommon.TrafficFlags: int getSmtpFlags(android.content.Context,com.android.emailcommon.provider.Account)> -> _SOURCE_
<android.media.AudioService: int getLastAudibleStreamVolume(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object)> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)> -> _SOURCE_
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableCollection build()> -> _SOURCE_
<java.security.Provider: java.lang.String getInfo()> -> _SOURCE_
<com.android.internal.telephony.cat.CatResponseMessage: com.android.internal.telephony.cat.CommandDetails getCmdDetails()> -> _SOURCE_
<com.google.android.mms.util.PduCacheEntry: com.google.android.mms.pdu.GenericPdu getPdu()> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getLocalizedMessage()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState getPersoSubState()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanTime(long,int)> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()> -> _SOURCE_
<android.content.SyncStorageEngine: int getPendingOperationCount()> -> _SOURCE_
<android.content.pm.PathPermission: java.lang.String getReadPermission()> -> _SOURCE_
<gov.nist.javax.sip.header.SubscriptionState: int getRetryAfter()> -> _SOURCE_
<android.text.util.Rfc822Token: java.lang.String getName()> -> _SOURCE_
<org.json.JSONObject: int getInt(java.lang.String)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: boolean isChallengeShowing()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter$CombinedCursor: com.android.browser.SuggestionsAdapter$SuggestItem getItem()> -> _SOURCE_
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)> -> _SOURCE_
<android.net.TrafficStats: int getThreadStatsTag()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)> -> _SOURCE_
<com.android.contacts.TypePrecedence: int getTypePrecedence(java.lang.String,int)> -> _SOURCE_
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: double getDouble()> -> _SOURCE_
<android.view.View$8: java.lang.Float get(android.view.View)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PAssertedServiceHeader createPAssertedServiceHeader()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: org.w3c.dom.Node getRelatedNode()> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: java.lang.String getName()> -> _SOURCE_
<com.android.mms.model.MediaModel: java.lang.String getContentType()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: int getAudioSessionId()> -> _SOURCE_
<android.net.NetworkPolicyManager: boolean getRestrictBackground()> -> _SOURCE_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)> -> _SOURCE_
<android.filterfw.core.Frame: int decRefCount()> -> _SOURCE_
<android.content.res.Resources: float getFraction(int,int,int)> -> _SOURCE_
<com.android.exchange.adapter.AbstractSyncAdapter: android.content.ContentProviderOperation operationToContentProviderOperation(com.android.exchange.adapter.AbstractSyncAdapter$Operation,int)> -> _SOURCE_
<java.io.ByteArrayOutputStream: byte[] toByteArray()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()> -> _SOURCE_
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMajor()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)> -> _SOURCE_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()> -> _SOURCE_
<org.apache.http.util.CharArrayBuffer: char[] toCharArray()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.EntityReference createEntityReference(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: int getDataVersion()> -> _SOURCE_
<com.android.inputmethod.latin.ResizableIntArray: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1EncodableVector: com.android.org.bouncycastle.asn1.ASN1Encodable get(int)> -> _SOURCE_
<javax.sip.DialogTerminatedEvent: javax.sip.Dialog getDialog()> -> _SOURCE_
<libcore.io.ForwardingOs: java.io.FileDescriptor dup(java.io.FileDescriptor)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getChildCount(java.lang.Object)> -> _SOURCE_
<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger getServerLogger()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: java.lang.String getCdmaEriText(int,int)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getAccountTypeAndDataSetString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<java.util.TreeSet: java.util.NavigableSet headSet(java.lang.Object,boolean)> -> _SOURCE_
<android.content.ContentValues: java.util.Set valueSet()> -> _SOURCE_
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()> -> _SOURCE_
<android.widget.PopupWindow: android.view.View getContentView()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getByRawContactId(java.lang.Long)> -> _SOURCE_
<libcore.net.http.HttpEngine: libcore.net.http.RequestHeaders getRequestHeaders()> -> _SOURCE_
<android.widget.TextView: int getLineAtCoordinate(float)> -> _SOURCE_
<com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri resolveAttachmentIdToContentUri(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()> -> _SOURCE_
<com.android.mms.TempFileProvider: java.lang.String getScrapPath(android.content.Context,java.lang.String)> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getCacheMode()> -> _SOURCE_
<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()> android.permission.BLUETOOTH -> _SOURCE_|BLUETOOTH_INFORMATION
<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler getDTDHandler()> -> _SOURCE_
<java.util.HashMap: java.util.Iterator newValueIterator()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)> -> _SOURCE_
<java.net.URLStreamHandler: int getDefaultPort()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeNamespace()> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getSubjectPublicKey()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Any: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getScanMode()> -> _SOURCE_
<javax.crypto.CipherSpi: byte[] engineWrap(java.security.Key)> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$MyAdapter: long getItemId(int)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Typeface getTypeface()> -> _SOURCE_
<android.widget.CursorAdapter: int getCount()> -> _SOURCE_
<java.nio.IntBuffer: java.lang.Object array()> -> _SOURCE_
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)> -> _SOURCE_
<android.os.WorkSource: int get(int)> -> _SOURCE_
<android.view.HardwareRenderer$GlRenderer: long getFrameCount()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.text.Layout: int getOffsetToRightOf(int)> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: int getInt(int)> -> _SOURCE_
<com.android.internal.util.MemInfoReader: long getCachedSize()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: int getConnectTimeout()> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.CommonNicknameCache: java.lang.String[] loadNicknameClusters(java.lang.String)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: int getCount()> -> _SOURCE_
<libcore.io.NioBufferIterator: byte readByte()> -> _SOURCE_
<com.android.internal.statusbar.IStatusBar$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: boolean getIccLockEnabled()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive getObject()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: int getResultCode()> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getEventType()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getBaseType()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$900(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)> -> _SOURCE_
<android.net.TrafficStats: long getTotalRxPackets()> -> _SOURCE_
<com.android.contacts.model.RawContact: long getContactId()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getBuiltInZoomControls()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService: android.content.SharedPreferences getWidgetState(android.content.Context,int)> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: android.content.Intent getInputLanguageSelectionIntent(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.xml.dom.CDATASectionImpl: short getNodeType()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.LazyEncodedSequence: java.util.Enumeration getObjects()> -> _SOURCE_
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getComponentEnabledSetting(android.content.ComponentName,int)> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.USE_CREDENTIALS -> _SOURCE_|ACCOUNT_INFORMATION
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> -> _SOURCE_
<android.text.style.ScaleXSpan: int getSpanTypeId()> -> _SOURCE_
<java.security.cert.Certificate: java.lang.String getType()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getAllowAttachAudio()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$AsMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.telephony.ServiceState: boolean getRoaming()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)> -> _SOURCE_
<android.graphics.Bitmap: int getWidth()> -> _SOURCE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String getSchemeName()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getNavDump()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)> -> _SOURCE_
<android.net.ProxyProperties: int getPort()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getGroupId(int)> -> _SOURCE_
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.accounts.IAccountManagerResponse$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> -> _SOURCE_
<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> -> _SOURCE_
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClassic getBackForwardList()> -> _SOURCE_
<com.android.providers.media.MediaProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: short getShort(int)> -> _SOURCE_
<java.util.Scanner: double nextDouble()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: int getSortOrder()> -> _SOURCE_
<android.view.DragEvent: float getX()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.database.Cursor getCursor(int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RequireHeader createRequireHeader(java.lang.String)> -> _SOURCE_
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: android.content.Context getContext()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getAntibanding()> -> _SOURCE_
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.VibratorUtils: com.android.inputmethod.latin.VibratorUtils getInstance(android.content.Context)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: android.view.View getScrollingIndicator()> -> _SOURCE_
<java.net.JarURLConnection: java.util.jar.Attributes getAttributes()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUniversalString: com.android.org.bouncycastle.asn1.DERUniversalString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: android.os.IBinder getFocusedWindowToken()> -> _SOURCE_
<com.android.vcard.VCardEntry$NicknameData: boolean isEmpty()> -> _SOURCE_
<java.security.cert.CertStore: java.lang.String getType()> -> _SOURCE_
<com.android.browser.view.BasePieView: android.widget.Adapter getAdapter()> -> _SOURCE_
<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getPreferred(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.content.IContentService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object remove()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: long getLabelValue()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningServices(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump(int)> -> _SOURCE_
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getPostcode()> -> _SOURCE_
<android.drm.DrmRights: java.lang.String getAccountId()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack getStack()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.settings.users.UserUtils: android.graphics.drawable.Drawable getUserIcon(android.os.UserManager,android.content.pm.UserInfo,android.content.res.Resources)> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()> -> _SOURCE_
<android.media.IMediaScannerService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.ImageView getPhotoView()> -> _SOURCE_
<org.apache.harmony.security.x509.Validity$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumWidth()> -> _SOURCE_
<com.android.mms.model.RegionModel: java.lang.String getBackgroundColor()> -> _SOURCE_
<android.widget.ExpandableListView: long getSelectedPosition()> -> _SOURCE_
<android.webkit.WebView: int getContentWidth()> -> _SOURCE_
<com.android.browser.search.DefaultSearchEngine: java.lang.String toString()> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getFormatted()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription getFirstTask()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: java.lang.Object clone()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: java.lang.String getInstallerPackageName()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: android.graphics.drawable.Drawable getIconDrawable(int)> -> _SOURCE_
<android.content.IIntentSender$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()> -> _SOURCE_
<org.xml.sax.SAXException: java.lang.Exception getException()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher getInstance()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Enumerated: org.apache.harmony.security.asn1.ASN1Enumerated getInstance()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.util.List getNamedDataItems()> -> _SOURCE_
<com.android.vcard.VCardEntry$AndroidCustomData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJson()> -> _SOURCE_
<android.bluetooth.IBluetoothPan$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)> -> _SOURCE_
<com.google.android.mms.pdu.PduHeaders: byte[] getTextString(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getFgCallConnections()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionY()> -> _SOURCE_
<com.android.mms.model.MediaModel: com.android.mms.model.MediaModel$MediaAction getCurrentAction()> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$MyAdapter: com.android.internal.policy.impl.GlobalActions$Action getItem(int)> -> _SOURCE_
<android.widget.BaseAdapter: int getViewTypeCount()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: int getPort()> -> _SOURCE_
<android.app.ActivityOptions: int getStartWidth()> -> _SOURCE_
<android.content.IntentFilter: int getPriority()> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getWindowId(java.lang.Object)> -> _SOURCE_
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> -> _SOURCE_
<android.widget.RemoteViews$ReflectionAction: java.lang.String getActionName()> -> _SOURCE_
<com.android.calendar.event.EditEventHelper: android.content.ContentValues getContentValuesFromModel(com.android.calendar.CalendarEventModel)> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)> -> _SOURCE_
<java.net.URL: int getEffectivePort()> -> _SOURCE_
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: byte[] toByteArray()> -> _SOURCE_
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()> -> _SOURCE_
<android.app.IWallpaperManager$Stub$Proxy: int getWidthHint()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothDevice getDevice()> -> _SOURCE_
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo getIfNeeded()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getInstance()> -> _SOURCE_
<android.widget.TextView: float getLeftFadingEdgeStrength()> -> _SOURCE_
<android.database.MergeCursor: long getLong(int)> -> _SOURCE_
<android.database.CursorWrapper: double getDouble(int)> -> _SOURCE_
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()> -> _SOURCE_
<android.telephony.CellIdentityLte: int getMnc()> -> _SOURCE_
<android.database.MergeCursor: int getCount()> -> _SOURCE_
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.util.Set keySet()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<java.util.Formatter: java.lang.Appendable out()> -> _SOURCE_
<java.util.LinkedHashMap: java.util.Iterator newKeyIterator()> -> _SOURCE_
<com.android.contacts.util.ThemeUtils: int getActivatedBackground(android.content.res.Resources$Theme)> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getPobox()> -> _SOURCE_
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getDisplayNameId()> -> _SOURCE_
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()> -> _SOURCE_
<java.util.concurrent.locks.LockSupport: java.lang.Object getBlocker(java.lang.Thread)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)> -> _SOURCE_
<android.widget.AdapterViewAnimator: int getBaseline()> -> _SOURCE_
<com.android.internal.statusbar.StatusBarIcon: com.android.internal.statusbar.StatusBarIcon clone()> -> _SOURCE_
<com.android.contacts.model.dataitem.SipAddressDataItem: java.lang.String getLabel()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.AlphabetShiftState: java.lang.String toString()> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance()> -> _SOURCE_
<android.widget.Filter: android.os.Handler access$200(android.widget.Filter)> -> _SOURCE_
<android.widget.GridLayout$Spec: int getFlexibility()> -> _SOURCE_
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()> -> _SOURCE_
<java.util.MissingResourceException: java.lang.String getKey()> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.io.File createUniqueFile(java.io.File,java.lang.String)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: byte[] decrypt(byte,byte[])> -> _SOURCE_
<android.widget.AbsListView: android.view.View obtainView(int,boolean[])> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)> -> _SOURCE_
<android.webkit.CertTool: java.lang.String getCertType(java.lang.String)> -> _SOURCE_
<android.database.BulkCursorToCursorAdaptor: int getCount()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: int getTTLParam()> -> _SOURCE_
<com.android.systemui.recent.TaskDescription: android.graphics.Bitmap getThumbnail()> -> _SOURCE_
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCK()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeNamespace(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getDatabaseEnabled()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: java.util.HashSet getEnabledComponents(int)> -> _SOURCE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)> -> _SOURCE_
<android.net.Uri$PathPart: java.lang.String getEncoded()> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: byte get(java.lang.String,byte)> -> _SOURCE_
<android.sax.BadXmlException: java.lang.String getMessage()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String getFilenameWithLocale(java.lang.String,java.lang.String)> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)> -> _SOURCE_
<android.view.ScaleGestureDetector: float getFocusX()> -> _SOURCE_
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexContactIds()> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.util.Date getServedDate()> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: boolean getIccLockEnabled()> -> _SOURCE_
<android.view.View: android.view.HardwareRenderer getHardwareRenderer()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: int getRows()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()> -> _SOURCE_
<android.widget.Switch: int getThumbTextPadding()> -> _SOURCE_
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$EvictionQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: long getItemId(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERApplicationSpecificParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory getCurrentAccessory()> -> _SOURCE_
<android.net.sip.ISipSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<android.app.IWallpaperManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.providers.contacts.CallLogProvider: com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper(android.content.Context)> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: int getInt(int)> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.view.View getView()> -> _SOURCE_
<android.nfc.Tag: java.lang.String[] getTechList()> -> _SOURCE_
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1InputStream: int getLimit()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: boolean isStateful()> -> _SOURCE_
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getUserDataSeptetPadding()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getProxy()> -> _SOURCE_
<android.view.IWindow$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.server.sip.SipHelper: javax.sip.ServerTransaction getServerTransaction(javax.sip.RequestEvent)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMajor(int)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()> -> _SOURCE_
<org.apache.http.entity.ByteArrayEntity: long getContentLength()> -> _SOURCE_
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getEncoded()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean)> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView$TimeAxis: float[] getTickPoints()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction createClientTransaction(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> -> _SOURCE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String encodeBody()> -> _SOURCE_
<com.android.music.AudioPreview: java.lang.Object onRetainNonConfigurationInstance()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPort()> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getDisplayedTimezone(long,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()> -> _SOURCE_
<android.nfc.NfcAdapter: android.content.Context getContext()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()> -> _SOURCE_
<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)> -> _SOURCE_
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords: int getDisplayRule(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String toString()> -> _SOURCE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()> -> _SOURCE_
<java.lang.reflect.Field: byte getByte(java.lang.Object)> -> _SOURCE_
<java.security.KeyStoreSpi: char[] getPasswordFromCallBack(java.security.KeyStore$ProtectionParameter)> -> _SOURCE_
<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getViewGroupActivity()> -> _SOURCE_
<android.widget.Filter: android.os.Handler access$400(android.widget.Filter)> -> _SOURCE_
<gov.nist.core.GenericObjectList: gov.nist.core.GenericObject next()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfacePairs()> -> _SOURCE_
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<java.security.Provider$Service: java.util.List getAliases()> -> _SOURCE_
<org.apache.harmony.security.x501.Name: byte[] getEncoded()> -> _SOURCE_
<java.text.StringCharacterIterator: int getEndIndex()> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions: java.util.Set getNonCriticalExtensions()> -> _SOURCE_
<com.android.browser.Tab: java.lang.String getAppId()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticGivenName()> -> _SOURCE_
<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)> -> _SOURCE_
<android.webkit.WebViewClassic$SelectionHandleAlpha: int getAlpha()> -> _SOURCE_
<java.nio.HeapByteBuffer: int getInt(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.os.UpdateLock getUpdateLock()> -> _SOURCE_
<android.webkit.WebView: android.webkit.PluginList getPluginList()> -> _SOURCE_
<com.android.browser.Tab: android.view.View getSubViewContainer()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.util.Set getAllAccountsWithDataSets()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getNeighborhood()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.telephony.SignalStrength getSignalStrength()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteCqi()> -> _SOURCE_
<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.WebViewClassic getWebViewClassic()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node jjtGetParent()> -> _SOURCE_
<java.net.URLConnection: java.net.URL getURL()> -> _SOURCE_
<com.android.music.MusicUtils: long[] getSongListForCursor(android.database.Cursor)> -> _SOURCE_
<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> -> _SOURCE_
<android.os.PowerManager$WakeLock: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNode(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs(javax.sip.DialogState)> -> _SOURCE_
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()> -> _SOURCE_
<android.telephony.CellInfoCdma: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getToTag()> -> _SOURCE_
<android.view.View: int getNextFocusRightId()> -> _SOURCE_
<org.apache.commons.logging.LogFactory$2: java.lang.Object run()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ClientHello: int getType()> -> _SOURCE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String)> -> _SOURCE_
<android.widget.Editor$PositionListener: int getPositionX()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getUseClientMode()> -> _SOURCE_
<android.database.CursorWrapper: int getColumnCount()> -> _SOURCE_
<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: float getDur()> -> _SOURCE_
<org.apache.http.client.methods.HttpGet: java.lang.String getMethod()> -> _SOURCE_
<android.widget.ExpandableListPosition: long getPackedPosition()> -> _SOURCE_
<android.app.backup.IFullBackupRestoreObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.google.common.collect.ImmutableSet$TransformedImmutableSet$1: java.lang.Object get(int)> -> _SOURCE_
<com.android.settings.bluetooth.HeadsetProfile: java.util.List getConnectedDevices()> -> _SOURCE_
<android.graphics.ColorMatrix: float[] getArray()> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.String toString()> -> _SOURCE_
<android.view.LayoutInflater$FactoryMerger: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> -> _SOURCE_
<android.view.View: int getWindowAttachCount()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: int getRecoveryAction()> -> _SOURCE_
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> -> _SOURCE_
<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.security.KeyStore: java.security.Provider getProvider()> -> _SOURCE_
<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta$ValuesDelta getSuperPrimaryEntry(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckReceived()> -> _SOURCE_
<android.view.MotionEvent: float getX(int)> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.app.PendingIntent getCallBackPendingIntent(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: boolean getIccFdnEnabled()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getWindowId()> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: int[] getEnabledLockingShiftTables()> -> _SOURCE_
<android.app.ActivityThread: java.lang.String getProcessName()> -> _SOURCE_
<android.content.ClipData$Item: android.content.Intent getIntent()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.String getSignatureAttribute()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getDevPersistBytes(long)> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.Multiset$Entry pollFirstEntry()> -> _SOURCE_
<com.android.settings.accounts.SyncSettings: java.util.ArrayList getAuthoritiesForAccountType(java.lang.String)> -> _SOURCE_
<com.android.systemui.screenshot.GlobalScreenshot$4: float getInterpolation(float)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: boolean getXmlStandalone()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> -> _SOURCE_
<android.nfc.Tag: int getConnectedTechnology()> -> _SOURCE_
<android.accounts.AccountManager: java.util.HashMap access$1300(android.accounts.AccountManager)> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingStart()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getLength()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: float getRepeatDur()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.ContentLanguage: java.util.Locale getContentLanguage()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getUidForSharedUser(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: char[] getUpperCaseQueryString()> -> _SOURCE_
<android.telephony.TelephonyManager: int getSimState()> -> _SOURCE_
<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()> -> _SOURCE_
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)> -> _SOURCE_
<java.util.zip.ZipEntry: int getMethod()> -> _SOURCE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)> -> _SOURCE_
<com.android.server.sip.SipSessionListenerProxy: android.net.sip.ISipSessionListener getListener()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()> -> _SOURCE_
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()> -> _SOURCE_
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> -> _SOURCE_
<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineGetIV()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: int standardHashCode()> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.MotionEvent: int getHistorySize()> -> _SOURCE_
<com.android.internal.policy.PolicyManager: android.view.WindowManagerPolicy makeNewWindowManager()> -> _SOURCE_
<android.media.Metadata: long getLong(int)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getRunLimit()> -> _SOURCE_
<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)> -> _SOURCE_
<android.widget.GridView: int getHorizontalSpacing()> -> _SOURCE_
<com.android.settings.Utils: java.lang.String getWifiIpAddresses(android.content.Context)> -> _SOURCE_
<com.android.server.Watchdog: com.android.server.Watchdog getInstance()> -> _SOURCE_
<android.os.SystemProperties: java.lang.String get(java.lang.String)> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.Iterator entryIterator()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeTypeAndValue$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.drm.DrmInfo: java.util.Iterator keyIterator()> -> _SOURCE_
<com.android.internal.telephony.RetryManager: int getRetryCount()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getFromIndex(java.lang.Object)> -> _SOURCE_
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestSelection()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getPort()> -> _SOURCE_
<android.media.MediaRecorder: int getAudioSourceMax()> -> _SOURCE_
<android.filterfw.core.FilterPort: java.lang.String toString()> -> _SOURCE_
<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.filterfw.core.InputPort: java.lang.Object getTarget()> -> _SOURCE_
<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: java.lang.Object getItem(int)> -> _SOURCE_
<java.math.BigDecimal: java.math.BigDecimal abs()> -> _SOURCE_
<java.nio.IntToByteBufferAdapter: int get(int)> -> _SOURCE_
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.internal.telephony.sip.SipCallBase: java.lang.String toString()> -> _SOURCE_
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<com.android.exchange.provider.GalResult$GalData: java.lang.String toPackedString()> -> _SOURCE_
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.lang.String findLibrary(java.lang.String)> -> _SOURCE_
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)> -> _SOURCE_
<android.net.sip.SipProfile: int getCallingUid()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)> -> _SOURCE_
<android.view.View: android.view.ViewParent getParent()> -> _SOURCE_
<android.view.ViewRootImpl$2: android.graphics.Rect getSurfaceFrame()> -> _SOURCE_
<com.android.contacts.calllog.CallLogFragment: com.android.contacts.calllog.CallLogAdapter getAdapter()> -> _SOURCE_
<com.android.inputmethod.latin.makedict.BinaryDictIOUtils: int getTerminalPosition(com.android.inputmethod.latin.makedict.BinaryDictInputOutput$FusionDictionaryBufferInterface,java.lang.String)> -> _SOURCE_
<android.net.LinkProperties: java.lang.String getInterfaceName()> -> _SOURCE_
<java.util.Currency: java.util.Currency getInstance(java.lang.String)> -> _SOURCE_
<java.util.ArrayList: java.lang.Object[] toArray()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: float[] getAnimationScales()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: float averageCharsPerByte()> -> _SOURCE_
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> -> _SOURCE_
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> -> _SOURCE_
<com.android.internal.telephony.UUSInfo: int getType()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERPrintableString: com.android.org.bouncycastle.asn1.DERPrintableString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultimap$Builder builder()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1EncodableVector readVector()> -> _SOURCE_
<java.io.ObjectInputStream: char readChar()> -> _SOURCE_
<android.webkit.CertTool: java.lang.String getSignedPublicKey(android.content.Context,int,java.lang.String)> -> _SOURCE_
<android.widget.TabWidget: int getChildDrawingOrder(int,int)> -> _SOURCE_
<com.android.server.location.GpsXtraDownloader: byte[] doDownload(java.lang.String,boolean,java.lang.String,int)> -> _SOURCE_
<android.view.AccessibilityIterators$AbstractTextSegmentIterator: int[] getRange(int,int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)> -> _SOURCE_
<com.android.server.NetworkManagementService: java.lang.String[] listTtys()> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.util.Iterator iterator()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningExternalApplications()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: boolean isSecure()> -> _SOURCE_
<android.telephony.NeighboringCellInfo: int getPsc()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])> -> _SOURCE_
<com.android.browser.Tab: android.webkit.WebView getSubWebView()> -> _SOURCE_
<java.text.FieldPosition: int getField()> -> _SOURCE_
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: int getTextZoom()> -> _SOURCE_
<com.android.internal.util.TypedProperties: long getLong(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)> -> _SOURCE_
<com.android.contacts.group.GroupDetailFragment$1: int getApproximateTileWidth()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: int getGSMIndex()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.Object clone()> -> _SOURCE_
<android.webkit.WebStorageClassic: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)> -> _SOURCE_
<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalTarget()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<java.lang.Enum: java.lang.Enum[] getSharedConstants(java.lang.Class)> -> _SOURCE_
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()> -> _SOURCE_
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()> -> _SOURCE_
<android.drm.DrmUtils$ExtendedMetadataParser: java.util.Iterator keyIterator()> -> _SOURCE_
<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: short getShort()> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.net.URL findResource(java.lang.String)> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.State getState()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: java.lang.Object get()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: gov.nist.core.NameValue getAuthInfo(java.lang.String)> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<java.nio.HeapByteBuffer: char getChar(int)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.WaitingThread: java.util.concurrent.locks.Condition getCondition()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionMediaElementImpl: org.w3c.dom.smil.SMILRegionElement getRegion()> -> _SOURCE_
<android.net.SntpClient: long getRoundTripTime()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getButtonDescription()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.Object getTag()> -> _SOURCE_
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> -> _SOURCE_
<android.webkit.ZoomManager: float getTextWrapScale()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: byte[] getData(int)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet entrySet()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstallerPackageName(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String readLine()> -> _SOURCE_
<com.android.mms.model.MediaModel: byte[] getData()> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: int getChatCapability()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getGivenName()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionKey()> -> _SOURCE_
<android.text.DynamicLayout: int getBottomPadding()> -> _SOURCE_
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)> -> _SOURCE_
<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableCollection build()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<com.android.browser.NavTabScroller: android.view.ViewGroup getContentView()> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: byte[] getRawExtnValue()> -> _SOURCE_
<java.nio.DirectByteBuffer: short getShort(int)> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmAutoSyncChangeFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: long getItemId(int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getExecuteExistingDelayedTasksAfterShutdownPolicy()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: boolean isSentBySet()> -> _SOURCE_
<java.lang.Byte: short shortValue()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> -> _SOURCE_
<javax.crypto.Cipher: int getOutputSize(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SuppServiceNotification: java.lang.String toString()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)> -> _SOURCE_
<com.google.android.mms.pdu.MultimediaMessagePdu: int getPriority()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getCurrentCharset()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getApplicationEnabledSetting(java.lang.String,int)> -> _SOURCE_
<android.app.ContextImpl$20: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getWantClientAuth()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: java.lang.String getEndSync()> -> _SOURCE_
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.animation.Keyframe: float getFraction()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)> -> _SOURCE_
<android.webkit.BrowserFrame: int loadType()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getPaddingSize(int)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: int getRetryCount()> -> _SOURCE_
<com.android.contacts.util.DataStatus: java.lang.CharSequence getStatus()> -> _SOURCE_
<org.apache.http.ProtocolVersion: java.lang.String toString()> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: int getNavigationMode()> -> _SOURCE_
<android.location.ILocationManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: android.os.storage.StorageVolume[] getVolumeList()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: java.lang.String getTrackName()> -> _SOURCE_
<android.view.ViewDebug: long getViewInstanceCount()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> -> _SOURCE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandomMember()> -> _SOURCE_
<android.widget.TextView$SavedState: java.lang.String toString()> -> _SOURCE_
<java.util.Locale: java.lang.String[] getISOLanguages()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getDisplayName()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: long getItemId(int)> -> _SOURCE_
<gov.nist.javax.sip.address.GenericURI: java.lang.String encode()> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: boolean isAvailable()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object peek()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList()> -> _SOURCE_
<android.widget.RelativeLayout$DependencyGraph$Node: android.widget.RelativeLayout$DependencyGraph$Node getNextPoolable()> -> _SOURCE_
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)> -> _SOURCE_
<com.android.browser.Controller: int getActionModeHeight()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<android.content.ComponentName: java.lang.String toShortString()> -> _SOURCE_
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()> -> _SOURCE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()> -> _SOURCE_
<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata build()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.util.Collection values()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()> -> _SOURCE_
<com.google.android.mms.ContentType: java.util.ArrayList getVideoTypes()> -> _SOURCE_
<android.telephony.CellIdentityLte: int getPci()> -> _SOURCE_
<com.android.settings.Settings: java.lang.String getStartingFragmentClass(android.content.Intent)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<com.google.common.collect.BstNode: java.lang.Object getKey()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getEncodedPath()> -> _SOURCE_
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()> -> _SOURCE_
<android.media.MediaRouter$RouteGroup: android.media.MediaRouter$RouteInfo getRouteAt(int)> -> _SOURCE_
<android.text.BoringLayout: int getLineDescent(int)> -> _SOURCE_
<com.android.exchange.EasSyncService: java.lang.String makeUriString(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingRight()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothDevice[] getBondedDevices()> -> _SOURCE_
<java.text.DateFormat: java.util.Date parse(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getRecordSize(int)> -> _SOURCE_
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerProtocol()> -> _SOURCE_
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothPreferences: boolean getDockAutoConnectSetting(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: int getCount()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getDeviceProtocol()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERVisibleString: java.lang.String getString()> -> _SOURCE_
<com.android.vcard.VCardProperty: byte[] getByteValue()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: com.android.org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteFragment: com.android.contacts.list.ContactListFilter getFilter()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.text.CharacterIterator)> -> _SOURCE_
<android.net.TrafficStats: long getTxPackets(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getLeftPaddingOffset()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getMinimumWidth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS: byte[] decrypt(byte,byte[],int,int)> -> _SOURCE_
<gov.nist.core.HostPort: java.lang.String toString()> -> _SOURCE_
<android.app.Service: android.app.Application getApplication()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getDepartmentName()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: java.lang.String getName()> -> _SOURCE_
<android.app.Fragment: android.app.FragmentManager getFragmentManager()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getEncodedFragment()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: byte[] getEncoded()> -> _SOURCE_
<android.os.UserManager: java.lang.String getUserName()> -> _SOURCE_
<java.net.MulticastSocket: java.net.NetworkInterface getNetworkInterface()> -> _SOURCE_
<android.widget.AbsListView: int reconcileSelectedPosition()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: java.lang.String getReryConfig(boolean)> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: long getItemId(int)> -> _SOURCE_
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: java.lang.String getText(java.lang.String)> -> _SOURCE_
<android.webkit.CookieManagerClassic: android.webkit.CookieManagerClassic getInstance()> -> _SOURCE_
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<android.net.http.Headers: java.lang.String getProxyAuthenticate()> -> _SOURCE_
<libcore.io.ErrnoException: java.lang.String getMessage()> -> _SOURCE_
<android.telephony.TelephonyManager: int getCallState()> -> _SOURCE_
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getLocalIp()> -> _SOURCE_
<java.util.concurrent.CountDownLatch: long getCount()> -> _SOURCE_
<android.hardware.usb.UsbInterface: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableCollection values()> -> _SOURCE_
<com.android.browser.Tab: com.android.browser.DeviceAccountLogin getDeviceAccountLogin()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range greaterThan(java.lang.Comparable)> -> _SOURCE_
<com.android.browser.BookmarkItem: java.lang.String getName()> -> _SOURCE_
<android.content.Intent: short getShortExtra(java.lang.String,short)> -> _SOURCE_
<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: java.util.Set createElementSet()> -> _SOURCE_
<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)> -> _SOURCE_
<com.android.settings.DevelopmentSettings$ConfirmEnforceFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getDefaultTargetPort()> -> _SOURCE_
<java.net.URL: int getPort()> -> _SOURCE_
<dalvik.system.VMRuntime: long getExternalBytesAllocated()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Set aliases()> -> _SOURCE_
<java.lang.Number: byte byteValue()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float maxOverScroll()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: boolean getCsimSpnDisplayCondition()> -> _SOURCE_
<android.net.TrafficStats: long getMobileTxPackets()> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: byte[] access$300(org.apache.harmony.security.x509.Extension)> -> _SOURCE_
<android.net.LinkCapabilities: java.util.Collection values()> -> _SOURCE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)> -> _SOURCE_
<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap getAllIndexes(boolean)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidTagPersistBytes(long)> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: java.lang.String getNextAlarm()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getTitle()> -> _SOURCE_
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point center()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: int getWindowId(java.lang.Object)> -> _SOURCE_
<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.LinkCapabilities: java.lang.String get(int)> -> _SOURCE_
<android.widget.Toast: android.view.View getView()> -> _SOURCE_
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getProcessLimit()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: android.view.DisplayInfo getDefaultDisplayInfoLocked()> -> _SOURCE_
<android.view.View: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)> -> _SOURCE_
<android.view.View: int getWindowVisibility()> -> _SOURCE_
<java.util.zip.Deflater: int getTotalIn()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getPsc()> -> _SOURCE_
<android.inputmethodservice.Keyboard$Key: int[] getCurrentDrawableState()> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String)> -> _SOURCE_
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma copy()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)> -> _SOURCE_
<android.widget.Chronometer: long getBase()> -> _SOURCE_
<com.android.contacts.interactions.ContactDeletionInteraction: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<android.database.sqlite.SQLiteConnection: java.lang.String toString()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getDay()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getMethodName()> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> -> _SOURCE_
<libcore.net.url.FileURLConnection: java.security.Permission getPermission()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getClipEnd()> -> _SOURCE_
<org.apache.http.impl.conn.SingleClientConnManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.content.Intent createPhoneEndIntentUsingCallOrigin()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: java.lang.String[] getLogin()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int getDrawX()> -> _SOURCE_
<android.app.Instrumentation: boolean isProfiling()> -> _SOURCE_
<gov.nist.javax.sip.message.HeaderIterator: java.lang.Object previous()> -> _SOURCE_
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$4: java.util.Iterator iterator()> -> _SOURCE_
<android.security.KeyStore: byte[] sign(java.lang.String,byte[])> -> _SOURCE_
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getSubjectUniqueID()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()> android.permission.READ_SOCIAL_STREAM -> _SOURCE_|CONTACT_INFORMATION
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationString(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CallTracker getCallTracker()> -> _SOURCE_
<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.SSLParametersImpl getDefault()> -> _SOURCE_
<com.android.calendar.event.EditEventFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<android.widget.AbsSpinner: int getChildHeight(android.view.View)> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()> -> _SOURCE_
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)> -> _SOURCE_
<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.InteractionController getInteractionController()> -> _SOURCE_
<com.android.emailcommon.mail.Address: java.lang.String getPersonal()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Null: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String toString()> -> _SOURCE_
<android.widget.CursorAdapter: long getItemId(int)> -> _SOURCE_
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)> -> _SOURCE_
<java.text.Annotation: java.lang.Object getValue()> -> _SOURCE_
<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.TabControl getTabControl()> -> _SOURCE_
<android.widget.GridLayout$Alignment: int getSizeInCell(android.view.View,int,int)> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri access$200(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)> -> _SOURCE_
<android.app.KeyguardManager: boolean isKeyguardSecure()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> -> _SOURCE_
<android.webkit.PluginManager: java.lang.String getPluginSharedDataDirectory()> -> _SOURCE_
<android.location.ILocationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.model.dataitem.WebsiteDataItem: int getType()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean getAnyDataEnabled()> -> _SOURCE_
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)> -> _SOURCE_
<java.util.logging.Logger: java.lang.String getResourceBundleName()> -> _SOURCE_
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<java.lang.reflect.Field: int getInt(java.lang.Object)> -> _SOURCE_
<android.net.Uri: android.net.Uri parse(java.lang.String)> -> _SOURCE_
<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)> -> _SOURCE_
<com.android.calendar.DayView: int getFirstVisibleHour()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: char BeginToken()> -> _SOURCE_
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$NameKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int[] getDimensions()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String toPattern()> -> _SOURCE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getLocalCertificates()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getNotes()> -> _SOURCE_
<gov.nist.javax.sip.header.Server: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams copy()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: double getDouble(int)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Object: int hashCode()> -> _SOURCE_
<junit.framework.ComparisonFailure: java.lang.String getMessage()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getBranch()> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getLast()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)> -> _SOURCE_
<com.android.browser.BaseUi: com.android.browser.Tab getActiveTab()> -> _SOURCE_
<android.app.Instrumentation$ActivityMonitor: android.app.Activity getLastActivity()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab getLeastUsedTab(com.android.browser.Tab)> -> _SOURCE_
<android.os.DropBoxManager$Entry: int getFlags()> -> _SOURCE_
<com.android.deskclock.TimerSetupView: int getLayoutId()> -> _SOURCE_
<com.android.contacts.model.dataitem.EventDataItem: java.lang.String getStartDate()> -> _SOURCE_
<android.net.LocalSocketAddress: java.lang.String getName()> -> _SOURCE_
<android.view.ViewStub: int getInflatedId()> -> _SOURCE_
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.HashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<org.json.JSONObject: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.view.View: int getMinimumWidth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: java.util.Comparator unsafeComparator()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()> -> _SOURCE_
<android.os.Debug: int getGlobalExternalAllocSize()> -> _SOURCE_
<android.location.LocationRequest: int getNumUpdates()> -> _SOURCE_
<android.webkit.BrowserFrame: java.lang.String getUserAgentString()> -> _SOURCE_
<android.view.KeyEvent: int getAction()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getAllowContentAccess()> -> _SOURCE_
<android.net.NetworkStats: long getTotalBytes()> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoAsuLevel()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String getMountedObbPath(java.lang.String)> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: int getUidPolicy(int)> -> _SOURCE_
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()> -> _SOURCE_
<gov.nist.javax.sip.header.CallID: java.lang.Object clone()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.RectF: java.lang.String toShortString()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()> -> _SOURCE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.ISyncContext$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.view.PieItem: android.view.View getView()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()> -> _SOURCE_
<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: int getId()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getCid()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.security.interfaces.DSAParams getParams()> -> _SOURCE_
<android.hardware.usb.UsbInterface: int getId()> -> _SOURCE_
<android.view.Display: android.view.CompatibilityInfoHolder getCompatibilityInfo()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getReadHoldCount()> -> _SOURCE_
<android.bluetooth.BluetoothPan: boolean isTetheringOn()> android.permission.BLUETOOTH -> _SOURCE_|BLUETOOTH_INFORMATION
<com.android.contacts.group.GroupEditorFragment$Member: long getContactId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo: java.util.Collection getHeaders()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: boolean getVoiceMessageWaiting()> -> _SOURCE_
<android.net.LocalSocket: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.android.settings.ChooseLockSettingsHelper: com.android.internal.widget.LockPatternUtils utils()> -> _SOURCE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView: long getInspectEnd()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object clone()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: int lastIndexOf(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.WapPushOverSms$WapPushConnection: com.android.internal.telephony.IWapPushManager getWapPushManager()> -> _SOURCE_
<android.telephony.SmsCbLocation: int getLac()> -> _SOURCE_
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()> -> _SOURCE_
<android.content.pm.IPackageDeleteObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.util.Singleton: java.lang.Object get()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$2002(com.android.calendar.EventInfoFragment,android.database.Cursor)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTimeLocked(long,int)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: boolean getCritical()> -> _SOURCE_
<java.util.Date: int getDay()> -> _SOURCE_
<android.os.Bundle: int[] getIntArray(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: int getMaxWordLength()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()> -> _SOURCE_
<android.view.Display: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.lang.String toString()> -> _SOURCE_
<java.net.Socket: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$102(com.android.internal.telephony.cdma.RuimRecords,byte[])> -> _SOURCE_
<com.android.server.display.DisplayAdapter: java.lang.String getName()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy: int getNumOfEntries()> -> _SOURCE_
<android.widget.TimePicker: int getBaseline()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryXt()> -> _SOURCE_
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getState()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()> -> _SOURCE_
<com.android.calendar.DayFragment: com.android.calendar.Event getNewEvent()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()> -> _SOURCE_
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)> -> _SOURCE_
<java.lang.Double: short shortValue()> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute getRoute()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable$BitmapState: int getChangingConfigurations()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(int)> -> _SOURCE_
<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)> -> _SOURCE_
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)> -> _SOURCE_
<com.android.internal.net.VpnProfile: byte[] encode()> -> _SOURCE_
<gov.nist.javax.sip.Utils: java.lang.String getQuotedString(java.lang.String)> -> _SOURCE_
<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getOwnerType()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: int getOpacity()> -> _SOURCE_
<java.util.HashMap: java.util.Set keySet()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)> -> _SOURCE_
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableMultimap inverse()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: boolean isEmpty()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getEncoding()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: java.lang.String getWhatToString(int)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailTabCarousel: float getStoredYCoordinateForTab(int)> -> _SOURCE_
<android.view.TextureView: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] getProtocolInfo()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCall: java.lang.String toString()> -> _SOURCE_
<android.database.MergeCursor: float getFloat(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getBlockNetworkImage()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()> -> _SOURCE_
<android.hardware.display.IDisplayManager$Stub$Proxy: android.view.DisplayInfo getDisplayInfo(int)> -> _SOURCE_
<gov.nist.javax.sip.DialogTimeoutEvent: gov.nist.javax.sip.DialogTimeoutEvent$Reason getReason()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getKeyCode()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: boolean getIccFdnEnabled()> -> _SOURCE_
<gov.nist.javax.sip.header.To: java.lang.String encode()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.READ_CONTACTS -> _SOURCE_
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: int getStrength()> -> _SOURCE_
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: int getHash()> -> _SOURCE_
<com.android.browser.Tab$3: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<android.widget.GridView: int getRequestedColumnWidth()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader$1: android.os.Bundle getExtras()> -> _SOURCE_
<com.android.settings.bluetooth.PanProfile: int getPreferred(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,com.android.mms.data.ContactList,boolean)> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub$Proxy: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)> -> _SOURCE_
<com.android.contacts.GroupMetaData: java.lang.String getAccountType()> -> _SOURCE_
<java.util.IdentityHashMap: java.util.Set entrySet()> -> _SOURCE_
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object peek()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPreviewFormat()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: android.view.WindowInfo getWindowInfo(android.os.IBinder)> -> _SOURCE_
<android.telephony.SmsMessage: boolean isReplyPathPresent()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: java.io.InputStream getOctetStream()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: java.util.Date getRevocationDate()> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: int getType()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getChild(int,int)> -> _SOURCE_
<com.android.emailcommon.service.SearchParams: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: com.android.contacts.group.GroupEditorFragment$Member getItem(int)> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.lang.Long getAccountIdOrNullForRawContact(long)> -> _SOURCE_
<com.android.settings.bluetooth.A2dpProfile: int getOrdinal()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.util.Iterator getParameterNames()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2: java.lang.Object[] getSelectionWithAccounts(android.net.Uri,java.lang.String,java.lang.String[])> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcDisconnectingState access$2700(com.android.internal.telephony.DataConnection)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerProtocol()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: boolean isDataConnectivityPossible()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getLocalPort()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getSocketTimeout()> -> _SOURCE_
<android.widget.TimePicker$SavedState: int getMinute()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodWriteObject()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)> -> _SOURCE_
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getMACLength()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)> android.permission.READ_CONTACTS -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: int getInt()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity()> -> _SOURCE_
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()> -> _SOURCE_
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: int getQueueLength()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getBaseURI()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getDecimalSeparator()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERNumericString: com.android.org.bouncycastle.asn1.DERNumericString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.preference.GenericInflater$FactoryMerger: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValue getNameValue(java.lang.String)> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()> -> _SOURCE_
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String toString()> -> _SOURCE_
<android.media.AudioManager: int getLastAudibleStreamVolume(int)> -> _SOURCE_
<android.view.animation.CycleInterpolator: float getInterpolation(float)> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getDataSet()> -> _SOURCE_
<org.apache.harmony.security.x509.ReasonFlags$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)> android.permission.NFC -> _SOURCE_|NFC
<android.animation.ValueAnimator: android.animation.Animator clone()> -> _SOURCE_
<org.xml.sax.SAXParseException: int getColumnNumber()> -> _SOURCE_
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.EventScanner getEventScanner()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getUseClientMode()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()> -> _SOURCE_
<android.text.Layout: int getOffsetToLeftOf(int)> -> _SOURCE_
<java.util.Currency: int getDefaultFractionDigits()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<javax.xml.validation.Validator: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.os.storage.IMountShutdownObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()> -> _SOURCE_
<com.android.browser.Tab: android.graphics.Bitmap getScreenshot()> -> _SOURCE_
<android.widget.ListView: int getFooterViewsCount()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.Token: java.lang.String toString()> -> _SOURCE_
<android.view.Surface: java.lang.String toString()> -> _SOURCE_
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> -> _SOURCE_
<java.lang.Class: java.lang.Object[] getSigners()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.http.RequestHandle: int getRedirectCount()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: long getDataId()> -> _SOURCE_
<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.logging.Handler: java.util.logging.Level getLevel()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<android.database.CursorWrapper: short getShort(int)> -> _SOURCE_
<com.android.settings.DataUsageSummary$DataUsageAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.location.Geofence$1: android.location.Geofence createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: int getMaxMoreSuggestionsRow()> -> _SOURCE_
<com.android.internal.telephony.AdnRecord: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconIndex()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getProfileConnectionState(int)> -> _SOURCE_
<android.net.EthernetDataTracker: java.lang.Object Clone()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelHolder: int getPanelIndex(com.android.systemui.statusbar.phone.PanelView)> -> _SOURCE_
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedText()> -> _SOURCE_
<com.google.common.collect.Lists$CharSequenceAsList: java.util.List subList(int,int)> -> _SOURCE_
<com.android.phone.ContactsAsyncHelper$ImageTracker: int getPhotoState()> -> _SOURCE_
<android.view.ViewConfiguration: long getZoomControlsTimeout()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: boolean isPartialView()> -> _SOURCE_
<dalvik.system.profiler.BinaryHprof$Tag: dalvik.system.profiler.BinaryHprof$Tag get(byte)> -> _SOURCE_
<android.text.Layout: float getLineLeft(int)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcActiveState access$1700(com.android.internal.telephony.DataConnection)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getCurrentUserIdLocked()> -> _SOURCE_
<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)> -> _SOURCE_
<com.android.server.am.ActivityStack: android.graphics.Bitmap getTaskTopThumbnailLocked(com.android.server.am.TaskRecord)> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)> -> _SOURCE_
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()> -> _SOURCE_
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getTransport()> -> _SOURCE_
<java.nio.DirectByteBuffer: int getInt()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.DateHeader createDateHeader(java.util.Calendar)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element getOldestElement()> -> _SOURCE_
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()> -> _SOURCE_
<com.android.contacts.model.dataitem.RelationDataItem: java.lang.String getName()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$900(com.android.calendar.EventInfoFragment)> -> _SOURCE_
<android.text.StaticLayout: int getBottomPadding()> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: int getViewTypeCount()> -> _SOURCE_
<android.os.Debug: int getGlobalExternalFreedSize()> -> _SOURCE_
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: long getExpirationTime()> -> _SOURCE_
<com.android.systemui.statusbar.policy.IntruderAlertView: android.view.View getChildContentView(android.view.View)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: short getSeverity()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()> -> _SOURCE_
<android.webkit.DateSorter: java.lang.String getLabel(int)> -> _SOURCE_
<com.google.common.base.CharMatcher: java.lang.String trimLeadingFrom(java.lang.CharSequence)> -> _SOURCE_
<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<com.android.browser.DataUri: java.lang.String getMimeType()> -> _SOURCE_
<android.media.MediaScanner$WplHandler: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getLocalName(int)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebBackForwardList restoreState(android.os.Bundle)> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: long getItemId(int)> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.Object clone()> -> _SOURCE_
<com.android.contacts.vcard.ExportProcessor: com.android.contacts.vcard.ExportRequest getRequest()> -> _SOURCE_
<gov.nist.javax.sip.stack.IOHandler: java.net.SocketAddress obtainLocalAddress(java.net.InetAddress,int,java.net.InetAddress,int)> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: int getProtocol()> -> _SOURCE_
<android.view.MotionEvent$PointerCoords: float getAxisValue(int)> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getGroupMmsEnabled()> -> _SOURCE_
<com.google.common.collect.Iterators$11: java.lang.Object get(int)> -> _SOURCE_
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsSummaryDev()> -> _SOURCE_
<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)> -> _SOURCE_
<java.security.KeyStore: java.lang.String getType()> -> _SOURCE_
<org.apache.http.message.BasicRequestLine: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getAlgorithm()> -> _SOURCE_
<android.content.BroadcastReceiver: int getSendingUserId()> -> _SOURCE_
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)> -> _SOURCE_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()> -> _SOURCE_
<java.lang.StringBuffer: java.lang.String toString()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> -> _SOURCE_
<android.webkit.ZoomManager: float getMaxZoomScale()> -> _SOURCE_
<org.apache.harmony.security.x509.NameConstraints: byte[] getEncoded()> -> _SOURCE_
<android.database.AbstractCursor: int getPosition()> -> _SOURCE_
<android.view.View: int getAccessibilityWindowId()> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()> -> _SOURCE_
<android.nfc.INdefPushCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object[] toArray()> -> _SOURCE_
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)> -> _SOURCE_
<android.widget.TextView: int getImeOptions()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String byteStringNoSemicolon()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()> -> _SOURCE_
<com.android.phone.PhoneGlobals: boolean isOtaCallInActiveState()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> -> _SOURCE_
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)> -> _SOURCE_
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getLocalPart()> -> _SOURCE_
<android.location.GpsStatus: int getMaxSatellites()> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set entrySet()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getPhotoId()> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<java.util.zip.ZipFile: java.util.Enumeration entries()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1ValueCollection: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<com.android.server.pm.UserManagerService: int getUserHandle(int)> -> _SOURCE_
<android.view.ContextThemeWrapper: int getThemeResId()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: int[] getInputDeviceIds()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.WaitingThread: org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<java.nio.DirectByteBuffer: char getChar()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getPrefix()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)> -> _SOURCE_
<android.webkit.WebViewClassic: int getScrollX()> -> _SOURCE_
<com.android.server.am.ServiceRecord: int getLastStartId()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.String getCommentURL()> -> _SOURCE_
<android.telephony.TelephonyManager: int getLteOnCdmaMode()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData: int getVersion()> -> _SOURCE_
<com.android.browser.Tab: java.lang.String getTitle()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$902(com.android.ex.chips.BaseRecipientAdapter,java.util.List)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)> -> _SOURCE_
<com.android.camera.IconListPreference: int[] getIconIds()> -> _SOURCE_
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: java.util.Enumeration getObjects()> -> _SOURCE_
<android.content.ContentValues: java.lang.Object get(java.lang.String)> -> _SOURCE_
<com.android.server.location.GpsXtraDownloader: byte[] downloadXtraData()> -> _SOURCE_
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])> -> _SOURCE_
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getPendingAppTransition()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimOperator()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromPduBody(android.content.Context,com.google.android.mms.pdu.PduBody)> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable$ScaleState: int getChangingConfigurations()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.Iterator descendingEntryIterator()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: java.lang.CharSequence getTitle()> -> _SOURCE_
<java.util.zip.ZipEntry: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.database.SortCursor: int getType(int)> -> _SOURCE_
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getRawContacts()> -> _SOURCE_
<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.BrowserSettings getSettings()> -> _SOURCE_
<android.telephony.CellInfo: int describeContents()> -> _SOURCE_
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: int getGroupId()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object getChild(java.lang.Object,int)> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: android.net.Uri getDataUri()> -> _SOURCE_
<android.animation.ValueAnimator: float getDurationScale()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: android.telephony.SignalStrength getSignalStrength()> -> _SOURCE_
<java.text.MessageFormat: java.text.Format[] getFormats()> -> _SOURCE_
<com.android.inputmethod.latin.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)> -> _SOURCE_
<com.android.server.ConnectivityService: boolean getMobileDataEnabled()> -> _SOURCE_
<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()> -> _SOURCE_
<java.math.BigInteger: byte[] toByteArray()> -> _SOURCE_
<android.view.animation.Transformation: java.lang.String toShortString()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNddPrefixForRegion(java.lang.String,boolean)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: int getRemoteSequenceNumber()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(int)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageObject: java.lang.String dbgPrint(int)> -> _SOURCE_
<com.android.phone.PhoneGlobals: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.lang.CharSequence access$702(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence)> -> _SOURCE_
<com.android.contacts.ContactsActivity: android.view.View getView(int)> -> _SOURCE_
<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()> -> _SOURCE_
<android.view.ScaleGestureDetector: long getTimeDelta()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getApplicationBufferSize()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()> -> _SOURCE_
<android.widget.RemoteViews$SetOnClickFillInIntent: java.lang.String getActionName()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: float getInitialRate()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getInviteTransaction()> -> _SOURCE_
<android.net.http.RequestQueue$ActivePool: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getReceived()> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()> -> _SOURCE_
<java.security.Provider: java.lang.String toString()> -> _SOURCE_
<java.security.Provider: int getProviderNumber()> -> _SOURCE_
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()> -> _SOURCE_
<android.widget.TextView: android.graphics.Typeface getTypeface()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)> -> _SOURCE_
<com.android.settings.vpn2.VpnDialog: com.android.internal.net.VpnProfile getProfile()> -> _SOURCE_
<com.android.inputmethod.latin.DictionaryFactory: int getMainDictionaryResourceId(android.content.res.Resources,java.util.Locale)> -> _SOURCE_
<android.sax.Children: android.sax.Element get(java.lang.String,java.lang.String)> -> _SOURCE_
<com.google.common.io.ByteStreams$2: java.lang.Long getResult()> -> _SOURCE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getP()> -> _SOURCE_
<com.android.browser.NavTabScroller: com.android.browser.NavTabView getTabView(int)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.String toGenericString()> -> _SOURCE_
<java.lang.Double: double doubleValue()> -> _SOURCE_
<android.net.ProxyProperties: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForSip()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownPropertyNameSet()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getNextUpdate()> -> _SOURCE_
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.internet.TextBody: java.lang.String getText()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: android.content.ContentValues getContentValues()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,java.lang.Object)> -> _SOURCE_
<java.util.TreeSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.TabControl$OnThumbnailUpdatedListener getOnThumbnailUpdatedListener()> -> _SOURCE_
<gov.nist.javax.sip.header.Event: java.lang.String getEventId()> -> _SOURCE_
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: short getRestart()> -> _SOURCE_
<android.view.InputDevice$MotionRange: int getSource()> -> _SOURCE_
<com.android.emailcommon.service.IEmailService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(int)> -> _SOURCE_
<android.app.Activity: android.view.WindowManager getWindowManager()> -> _SOURCE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> -> _SOURCE_
<android.net.wifi.WifiManager: java.util.List getScanResults()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getProtocol()> -> _SOURCE_
<com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollY()> -> _SOURCE_
<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()> -> _SOURCE_
<android.view.ViewConfiguration: int getDoubleTapTimeout()> -> _SOURCE_
<com.android.calendar.month.MonthWeekEventsView: int getDayIndexFromLocation(float)> -> _SOURCE_
<android.media.DecoderCapabilities: java.util.List getVideoDecoders()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()> -> _SOURCE_
<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)> -> _SOURCE_|NFC
<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyX(android.content.res.TypedArray)> -> _SOURCE_
<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)> -> _SOURCE_
<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<com.android.browser.PreloadController: com.android.browser.WebViewFactory getWebViewFactory()> -> _SOURCE_
<android.location.Address: java.lang.String getSubAdminArea()> -> _SOURCE_
<java.text.MessageFormat: java.util.Locale getLocale()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: android.view.View createPinnedSectionHeaderView(android.content.Context,android.view.ViewGroup)> -> _SOURCE_
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralNames: java.util.Collection getPairsList()> -> _SOURCE_
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)> -> _SOURCE_
<com.android.camera.ListPreference: java.lang.CharSequence[] getEntryValues()> -> _SOURCE_
<org.apache.http.util.CharArrayBuffer: java.lang.String toString()> -> _SOURCE_
<java.util.Hashtable: java.lang.Object clone()> -> _SOURCE_
<com.android.browser.BrowserWebViewFactory: android.webkit.WebView createSubWebView(boolean)> -> _SOURCE_
<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getSourceId()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getEsn()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$11: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: byte[] getContentType()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String hvalue()> -> _SOURCE_
<android.view.ViewRootImpl$ViewRootHandler: java.lang.String getMessageName(android.os.Message)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: android.telephony.SignalStrength getSignalStrength()> -> _SOURCE_
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,int,android.os.UserHandle,boolean)> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.lang.Short: double doubleValue()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getStartPositionMillis()> -> _SOURCE_
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)> -> _SOURCE_
<android.webkit.WebViewClassic: float tileProfilingStop()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable)> -> _SOURCE_
<android.widget.GridLayout$Axis: int getCount()> -> _SOURCE_
<com.android.exchange.adapter.Serializer: byte[] toByteArray()> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getSipVersion()> -> _SOURCE_
<com.android.mms.MmsConfig: int getHttpSocketTimeout()> -> _SOURCE_
<com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()> -> _SOURCE_
<android.preference.PreferenceActivity$Header: java.lang.CharSequence getSummary(android.content.res.Resources)> -> _SOURCE_
<com.android.mms.model.MediaModel: int getMediaSize()> -> _SOURCE_
<android.text.BoringLayout: int getEllipsisCount(int)> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.util.TreeMap$BoundedMap$BoundedIterator: java.util.TreeMap$Node stepForward()> -> _SOURCE_
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.AccessDescription: java.lang.String toString()> -> _SOURCE_
<android.webkit.HTML5VideoView: int getDuration()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)> -> _SOURCE_
<android.widget.FastScroller$ScrollFade: int getAlpha()> -> _SOURCE_
<java.security.KeyFactory: java.security.Provider getProvider()> -> _SOURCE_
<java.math.BigDecimal: double doubleValue()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PCalledPartyID: java.lang.String encodeBody()> -> _SOURCE_
<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.Privacy: java.lang.String encodeBody()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String getIPAddress()> -> _SOURCE_
<java.net.NetworkInterface: java.util.List getInterfaceAddresses()> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String)> -> _SOURCE_
<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLContextImpl: javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()> -> _SOURCE_
<com.android.i18n.phonenumbers.AsYouTypeFormatter: int getRememberedPosition()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)> -> _SOURCE_
<com.android.server.am.ActiveServices$ServiceMap: java.util.Collection getAllServices(int)> -> _SOURCE_
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.PduHeaders getPduHeaders()> -> _SOURCE_
<com.android.browser.Tab: android.webkit.WebViewClassic getWebViewClassic()> -> _SOURCE_
<com.android.browser.provider.SQLiteContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SOURCE_
<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()> -> _SOURCE_
<java.nio.CharArrayBuffer: java.nio.CharBuffer get(char[],int,int)> -> _SOURCE_
<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String getDialogTitle(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getInstance()> -> _SOURCE_
<com.google.common.collect.ForwardingSet: int hashCode()> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String toString()> -> _SOURCE_
<android.text.Layout: int getLineVisibleEnd(int)> -> _SOURCE_
<java.net.URI: int getEffectivePort()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: org.w3c.dom.DOMStringList getParameterNames()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getLocalName()> -> _SOURCE_
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()> -> _SOURCE_
<java.net.Authenticator: java.lang.String getRequestingPrompt()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> -> _SOURCE_
<android.view.KeyCharacterMap: int get(int,int)> -> _SOURCE_
<android.widget.GridLayout$3: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<com.android.settings.accounts.AuthenticatorHelper: java.lang.String[] getEnabledAccountTypes()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeySpecParser: int getIntValue(java.lang.String[],java.lang.String,int)> -> _SOURCE_
<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getBackgroundCall()> -> _SOURCE_
<android.widget.Editor$PositionListener: int getPositionY()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.preference.ListPreference: java.lang.CharSequence getSummary()> -> _SOURCE_
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getFormat()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.UUSInfo getUUSInfo()> -> _SOURCE_
<com.google.android.mms.pdu.EncodedStringValue: byte[] getTextString()> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toNanos(long)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: int getBandwidth(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiConfiguration: java.lang.String toString()> -> _SOURCE_
<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()> -> _SOURCE_
<android.net.LinkAddress: int getNetworkPrefixLength()> -> _SOURCE_
<android.text.method.DialerKeyListener: int getInputType()> -> _SOURCE_
<java.nio.channels.FileChannel$MapMode: java.lang.String toString()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getId()> -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.vcard.VCardComposer: java.lang.String getErrorReason()> -> _SOURCE_
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()> -> _SOURCE_
<java.util.jar.InitManifest: int getPos()> -> _SOURCE_
<android.webkit.WebViewClassic$FocusTransitionDrawable: int getOpacity()> -> _SOURCE_
<android.preference.Preference: android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()> -> _SOURCE_
<android.net.Uri: android.net.Uri getCanonicalUri()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getGlobal()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBMPString: java.lang.String getString()> -> _SOURCE_
<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)> -> _SOURCE_
<com.android.mms.MmsConfig: int getAliasMaxChars()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getSubserviceIdentifiers()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,org.apache.harmony.xnet.provider.jsse.DataStream)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerAddress()> -> _SOURCE_
<android.widget.NumberPicker: int getSolidColor()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()> -> _SOURCE_
<android.net.sip.SipSession: java.lang.String getCallId()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object getFirst()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()> -> _SOURCE_
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)> -> _SOURCE_
<android.widget.AbsListView: int getCheckedItemPosition()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getAllowUserInteraction()> -> _SOURCE_
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()> -> _SOURCE_
<com.android.mms.model.SlideModel: com.android.mms.model.MediaModel get(int)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent()> -> _SOURCE_
<java.util.logging.Handler: java.lang.String getEncoding()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()> -> _SOURCE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnNumber()> -> _SOURCE_
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getQueryActionMsg()> -> _SOURCE_
<android.widget.RemoteViews$TextViewDrawableAction: java.lang.String getActionName()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)> -> _SOURCE_
<com.android.mms.ui.MessageItem: long getMessageId()> -> _SOURCE_
<com.google.common.base.Equivalence$Wrapper: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: int getType()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: java.lang.String getTransport()> -> _SOURCE_
<java.nio.Buffer: int checkPutBounds(int,int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: boolean getParameterAsBoolean(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.CellIdentityGsm: int getLac()> -> _SOURCE_
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()> -> _SOURCE_
<android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> -> _SOURCE_
<com.google.common.collect.Multisets$ElementSet: boolean isEmpty()> -> _SOURCE_
<android.widget.Scroller: float getCurrVelocity()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getSerifFontFamily()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructUtsname uname()> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: int getLocalPort()> -> _SOURCE_
<java.util.IllegalFormatConversionException: char getConversion()> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createAck(long)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)> -> _SOURCE_
<com.android.exchange.adapter.MoveItemsParser: int getStatusCode()> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.String getStandaloneMonthString(int,int)> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()> -> _SOURCE_
<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField getField()> -> _SOURCE_
<android.renderscript.Sampler: float getAnisotropy()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()> android.permission.READ_PHONE_STATE -> _SOURCE_|UNIQUE_IDENTIFIER
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()> -> _SOURCE_
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getPhotoList()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)> -> _SOURCE_
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()> -> _SOURCE_
<libcore.net.http.HttpHandler: int getDefaultPort()> -> _SOURCE_
<com.android.camera.Thumbnail: com.android.camera.Thumbnail getLastThumbnail(android.content.ContentResolver)> -> _SOURCE_
<android.app.ContextImpl: int getUserId()> -> _SOURCE_
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()> -> _SOURCE_
<com.android.providers.media.MediaProvider: int getDatabaseVersion(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()> -> _SOURCE_
<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: int getKindTypeColumn()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getFormat()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: byte[] getFirstRowBlob(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,byte[])> -> _SOURCE_
<android.text.StaticLayout: int getLineStart(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralString: java.lang.String getString()> -> _SOURCE_
<java.util.TreeMap: java.util.NavigableSet descendingKeySet()> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getRadius(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getMessages()> -> _SOURCE_
<android.view.MotionEvent: float getOrientation()> -> _SOURCE_
<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context getApplicationContext()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getErrorStream()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: java.lang.String getString(int)> -> _SOURCE_
<android.filterfw.core.OutputPort: java.lang.String toString()> -> _SOURCE_
<android.database.AbstractCursor: java.lang.String getColumnName(int)> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> -> _SOURCE_
<java.nio.DatagramChannelImpl: java.io.FileDescriptor getFD()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)> -> _SOURCE_
<android.widget.GridLayout: int getMeasurementIncludingMargin(android.view.View,boolean)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int getDrawWidth()> -> _SOURCE_
<gov.nist.javax.sip.address.GenericURI: java.lang.String toString()> -> _SOURCE_
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm copy()> -> _SOURCE_
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)> -> _SOURCE_
<javax.crypto.Cipher: java.lang.String getAlgorithm()> -> _SOURCE_
<android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLengthHeader()> -> _SOURCE_
<java.util.Stack: java.lang.Object pop()> -> _SOURCE_
<android.view.IWindowSession$Stub$Proxy: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object[] toArray()> -> _SOURCE_
<android.view.View: int getBaseline()> -> _SOURCE_
<java.util.EventListenerProxy: java.util.EventListener getListener()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs()> -> _SOURCE_
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()> -> _SOURCE_
<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.protocol.BasicHttpProcessor copy()> -> _SOURCE_
<com.android.music.MusicUtils: long[] getSongListForPlaylist(android.content.Context,long)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLContextImpl: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()> -> _SOURCE_
<android.widget.TextView: float getShadowDx()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])> -> _SOURCE_
<android.view.View: int getHorizontalScrollbarHeight()> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: com.android.contacts.group.GroupListItem getItem(int)> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,java.lang.Comparable)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getBackgroundAlphaMultiplier()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getJoinDialog(gov.nist.javax.sip.header.extensions.JoinHeader)> -> _SOURCE_
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: float getFloat(int)> -> _SOURCE_
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<javax.crypto.SecretKeyFactory: java.security.Provider getProvider()> -> _SOURCE_
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()> -> _SOURCE_
<com.android.browser.BrowserWebView: int getTitleHeight()> -> _SOURCE_
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemObject: byte[] getContent()> -> _SOURCE_
<libcore.net.http.HttpEngine: libcore.net.http.ResponseHeaders getResponseHeaders()> -> _SOURCE_
<android.app.SearchableInfo$ActionKeyInfo: int getKeyCode()> -> _SOURCE_
<com.android.inputmethod.latin.FileTransforms: java.io.OutputStream getCryptedStream(java.io.OutputStream)> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()> -> _SOURCE_
<java.nio.LongArrayBuffer: long get(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)> -> _SOURCE_
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)> -> _SOURCE_
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()> -> _SOURCE_
<android.hardware.SensorManager: float getAltitude(float,float)> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: int getType()> -> _SOURCE_
<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)> -> _SOURCE_
<android.view.View$7: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$MakeCallCommand: int getTimeout()> -> _SOURCE_
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)> -> _SOURCE_
<android.view.HardwareRenderer$GlRenderer: int getWidth()> -> _SOURCE_
<android.net.wifi.WifiManager: java.lang.String getConfigFile()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getAsString(java.lang.String)> -> _SOURCE_
<java.util.Date: int getMinutes()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()> -> _SOURCE_
<com.android.inputmethod.latin.DictionaryCollection: int getFrequency(java.lang.CharSequence)> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getQuery()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()> -> _SOURCE_
<com.android.emailcommon.utility.SSLSocketFactory: com.android.emailcommon.utility.SSLSocketFactory getSocketFactory()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String[] getIsimImpu()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.MagnificationSpec getDisplayMagnificationSpecLocked(int)> -> _SOURCE_
<android.view.GLES20DisplayList: int getSize()> -> _SOURCE_
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)> -> _SOURCE_
<android.widget.Spinner$DialogPopup: int getVerticalOffset()> -> _SOURCE_
<android.widget.AdapterView: int getCount()> -> _SOURCE_
<com.android.server.display.DisplayManagerService: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int)> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.android.internal.telephony.IExtendedNetworkService$Stub: com.android.internal.telephony.IExtendedNetworkService asInterface(android.os.IBinder)> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryDev()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)> -> _SOURCE_
<android.text.Layout: float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int)> -> _SOURCE_
<java.net.JarURLConnection: java.lang.String getEntryName()> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,long)> -> _SOURCE_
<android.widget.TextView: int getMinHeight()> -> _SOURCE_
<android.content.SyncStorageEngine: long getLongColumn(android.database.Cursor,java.lang.String)> -> _SOURCE_
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteRssnr()> -> _SOURCE_
<java.nio.SocketChannelImpl$SocketAdapter: java.io.OutputStream getOutputStream()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getTabAt(int)> -> _SOURCE_
<android.graphics.Bitmap: int getGenerationId()> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getSortString()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getType()> -> _SOURCE_
<java.lang.ClassNotFoundException: java.lang.Throwable getException()> -> _SOURCE_
<android.os.Process: int getParentPid(int)> -> _SOURCE_
<android.content.CursorLoader: java.lang.String[] getProjection()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getButtonImageId(boolean)> -> _SOURCE_
<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)> -> _SOURCE_
<java.net.URI: java.net.URI resolve(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.NodeList getChildNodes()> -> _SOURCE_
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()> -> _SOURCE_
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)> -> _SOURCE_
<java.util.TreeMap$BoundedMap$BoundedIterator: java.util.TreeMap$Node stepBackward()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getMsisdn()> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: int getFileSize()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: java.lang.String getQueryParameter(android.net.Uri,java.lang.String)> -> _SOURCE_
<com.android.mms.ui.MessageUtils: int getVideoCaptureDurationLimit(long)> -> _SOURCE_
<android.view.KeyCharacterMap: char getNumber(int)> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int getChangingConfigurations()> -> _SOURCE_
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: java.lang.String getSipInstanceParam()> -> _SOURCE_
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<java.util.HashSet: java.util.Iterator iterator()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getNodeValue()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificatePolicies$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)> android.permission.NFC -> _SOURCE_|NFC
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getParameters()> -> _SOURCE_
<com.android.contacts.model.dataitem.EmailDataItem: int getType()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getDisplayName()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: int getCount()> -> _SOURCE_
<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String toString()> -> _SOURCE_
<org.kxml2.io.KXmlParser: boolean getFeature(java.lang.String)> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)> -> _SOURCE_
<android.content.Intent: java.lang.String getAction()> -> _SOURCE_
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: boolean getRecordsLoaded()> -> _SOURCE_
<gov.nist.javax.sip.header.ProxyRequire: java.lang.String getOptionTag()> -> _SOURCE_
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<android.os.Bundle: char[] getCharArray(java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPObject: java.lang.StringBuffer encode(java.lang.StringBuffer)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredName()> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)> -> _SOURCE_
<com.android.mms.data.Conversation: java.lang.String getRecipients(android.net.Uri)> -> _SOURCE_
<com.google.android.mms.util.AbstractCache: int size()> -> _SOURCE_
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getInequalityClause(java.lang.String,long)> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: int getExecCount()> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: java.util.Set getAllAttributeKeys()> -> _SOURCE_
<com.android.internal.telephony.cat.ItemsIconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()> -> _SOURCE_
<com.android.contacts.interactions.TestLoaderManager: android.app.LoaderManager getDelegate()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmSmsCbMessage: android.telephony.SmsCbMessage createSmsCbMessage(android.telephony.SmsCbLocation,byte[][])> -> _SOURCE_
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> -> _SOURCE_
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)> -> _SOURCE_
<com.android.calendarcommon2.Duration: long getMillis()> -> _SOURCE_
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getPriority()> -> _SOURCE_
<com.android.phone.EditPhoneNumberPreference: java.lang.String getRawPhoneNumber()> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getMsisdn()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType)> -> _SOURCE_
<android.widget.NumberPicker$InputTextFilter: int getInputType()> -> _SOURCE_
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.content.res.CompatibilityInfo)> -> _SOURCE_
<java.util.IdentityHashMap: java.lang.Object clone()> -> _SOURCE_
<java.security.cert.CertificateFactorySpi: java.util.Iterator engineGetCertPathEncodings()> -> _SOURCE_
<com.android.settings.Settings: android.preference.PreferenceActivity$Header onGetInitialHeader()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: java.lang.String getLabel()> -> _SOURCE_
<android.support.v4.view.ViewPager$2: float getInterpolation(float)> -> _SOURCE_
<com.android.server.WifiService: int getWifiApEnabledState()> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: int getActionCode()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getPrefix()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getViaPort()> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry()> -> _SOURCE_
<com.android.inputmethod.latin.makedict.FusionDictionary$DictionaryIterator: com.android.inputmethod.latin.makedict.Word next()> -> _SOURCE_
<android.telephony.ServiceState: int getCdmaRoamingIndicator()> -> _SOURCE_
<org.apache.http.util.ByteArrayBuffer: byte[] buffer()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingBottom()> -> _SOURCE_
<gov.nist.core.NameValueList: boolean isEmpty()> -> _SOURCE_
<android.os.Binder: android.os.UserHandle getCallingUserHandle()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: android.view.View getPageAt(int)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()> -> _SOURCE_
<java.text.RuleBasedBreakIterator: java.text.CharacterIterator getText()> -> _SOURCE_
<android.telephony.TelephonyManager: int getCdmaEriIconMode()> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.lang.Object getElement()> -> _SOURCE_
<com.android.browser.Tab: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset$Builder builder()> -> _SOURCE_
<android.os.IVibratorService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()> -> _SOURCE_
<android.widget.GridLayout$Axis: int getMeasure(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPObject: java.lang.String toString()> -> _SOURCE_
<android.media.AudioService: int getMasterStreamType()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: java.lang.String GetImage()> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)> -> _SOURCE_
<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()> -> _SOURCE_
<libcore.net.url.FtpURLConnection: java.lang.String getContentType()> -> _SOURCE_
<android.preference.Preference: int getWidgetLayoutResource()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPort()> -> _SOURCE_
<com.android.mms.data.Conversation: java.lang.String toString()> -> _SOURCE_
<android.widget.ExpandableListView: long getExpandableListPosition(int)> -> _SOURCE_
<com.android.mms.util.RateController: com.android.mms.util.RateController getInstance()> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: long getContactId()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownTypeSet()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.util.Map getParameters()> -> _SOURCE_
<android.view.animation.Animation: long getDuration()> -> _SOURCE_
<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context,com.android.internal.net.VpnConfig)> -> _SOURCE_
<android.database.AbstractWindowedCursor: int getType(int)> -> _SOURCE_
<android.telephony.SmsMessage: boolean isMWIClearMessage()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: int getOrder()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: int getViaPort()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)> -> _SOURCE_
<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMsisdn()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getStyleAttribute()> -> _SOURCE_
<com.android.server.display.DisplayAdapter: android.content.Context getContext()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelector: java.util.Set cancelledKeys()> -> _SOURCE_
<org.apache.harmony.security.x509.KeyUsage: byte[] getEncoded()> -> _SOURCE_
<com.android.mms.data.Conversation: java.lang.String getSnippet()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RSeqHeader createRSeqHeader(int)> -> _SOURCE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> -> _SOURCE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String encode()> -> _SOURCE_
<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()> -> _SOURCE_
<java.math.BigInteger: java.math.BigInteger nextProbablePrime()> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.Attr getAttributeNode(java.lang.String)> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractIterator: java.lang.Object next()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float distanceInfluenceForSnapDuration(float)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo: int[] getContentType()> -> _SOURCE_
<java.nio.HeapByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconMode()> -> _SOURCE_
<com.android.emailcommon.internet.Rfc822Output: java.lang.String getHtmlBody(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.CSeq: java.lang.String encodeBody()> -> _SOURCE_
<com.android.providers.contacts.PhotoStore: com.android.providers.contacts.PhotoStore$Entry get(long)> -> _SOURCE_
<com.android.server.WifiService: android.net.DhcpInfo getDhcpInfo()> -> _SOURCE_
<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: float getDur()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getPOBox()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> -> _SOURCE_
<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)> -> _SOURCE_
<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: int getCount()> -> _SOURCE_
<android.webkit.WebViewClassic: int computeMaxScrollY()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getLabelRes()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: int getWaitingApnsPermFailCount()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: javax.sip.SipProvider createSipProvider(javax.sip.ListeningPoint)> -> _SOURCE_
<com.android.ex.chips.RecipientChip: long getDataId()> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: int hashCode()> -> _SOURCE_
<org.apache.http.impl.HttpConnectionMetricsImpl: java.lang.Object getMetric(java.lang.String)> -> _SOURCE_
<dalvik.system.profiler.HprofData$Sample: java.lang.String toString()> -> _SOURCE_
<android.view.View: int getPaddingTop()> -> _SOURCE_
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailNumber(java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker: android.widget.ImageSwitcher access$300(com.android.systemui.statusbar.phone.Ticker)> -> _SOURCE_
<android.view.MotionEvent: int getFlags()> -> _SOURCE_
<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()> -> _SOURCE_
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> -> _SOURCE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()> -> _SOURCE_
<android.webkit.BrowserFrame: boolean getShouldStartScrolledRight()> -> _SOURCE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getChargingCollectionFunctionAddresses()> -> _SOURCE_
<android.view.View: int getVisibility()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesReceived(int)> -> _SOURCE_
<android.view.GLES20Canvas: int getSaveCount()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccCard getIccCard()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)> -> _SOURCE_
<com.android.browser.NavScreen: com.android.browser.NavTabView getTabView(int)> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.util.Set keySet()> -> _SOURCE_
<android.content.IntentSender: java.lang.String getTargetPackage()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<java.lang.StrictMath: int getExponent(float)> -> _SOURCE_
<android.widget.GridLayout: int getAlignmentMode()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()> -> _SOURCE_
<com.google.common.collect.Range: java.lang.Comparable upperEndpoint()> -> _SOURCE_
<android.text.Layout: float getSecondaryHorizontal(int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getSubscriberId()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListAdapter: int getScrollPositionForHeader(int)> -> _SOURCE_
<com.android.internal.telephony.RetryManager: int getRetryTimer()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getWantClientAuth()> -> _SOURCE_
<com.android.mms.TempFileProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<java.io.WriteAbortedException: java.lang.Throwable getCause()> -> _SOURCE_
<android.webkit.HTML5VideoViewProxy: android.webkit.HTML5VideoViewProxy getInstance(android.webkit.WebViewCore,int)> -> _SOURCE_
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()> -> _SOURCE_
<com.android.exchange.ExchangeService: android.content.Context getContext()> -> _SOURCE_
<java.security.cert.CertificateFactorySpi: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)> -> _SOURCE_
<android.view.HardwareRenderer: android.view.HardwareRenderer createGlRenderer(int,boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.RetryAfter: int getRetryAfter()> -> _SOURCE_
<android.app.WallpaperManager$FastBitmapDrawable: int getOpacity()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5()> -> _SOURCE_
<android.widget.Scroller: int getFinalY()> -> _SOURCE_
<com.android.internal.widget.LockPatternView$Cell: int getColumn()> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String[] databaseList()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getTabSize(int)> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()> -> _SOURCE_
<java.net.SocketImpl: int getLocalPort()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: java.lang.String getString(int)> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.security.KeyStore$TrustedCertificateEntry: java.lang.String toString()> -> _SOURCE_
<com.android.browser.homepages.RequestHandler$1: int getCount()> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRec: long getWhat()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: boolean isEmpty()> -> _SOURCE_
<android.content.IntentSender: java.lang.String toString()> -> _SOURCE_
<com.android.mms.ui.MessagingPreferenceActivity: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<java.nio.IntToByteBufferAdapter: int get()> -> _SOURCE_
<com.android.contacts.util.ImageViewDrawableSetter: android.widget.ImageView getTarget()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getMsisdn()> -> _SOURCE_
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemHeader: java.lang.String getValue()> -> _SOURCE_
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getHost()> -> _SOURCE_
<libcore.icu.ICU: java.lang.String[] getISOLanguages()> -> _SOURCE_
<android.net.http.Request: java.lang.String getHostPort()> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub$Proxy: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map getMap()> -> _SOURCE_
<android.widget.Scroller: int getCurrX()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.Integer getPresence()> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.DeviceMotionService getDeviceMotionService()> -> _SOURCE_
<com.google.common.collect.Lists$ReverseList: java.lang.Object get(int)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getRequestChannel()> -> _SOURCE_
<java.util.Calendar: int getMinimalDaysInFirstWeek()> -> _SOURCE_
<com.android.mms.model.SlideModel: short getFill()> -> _SOURCE_
<com.android.contacts.editor.BaseRawContactEditorView: com.android.contacts.editor.PhotoEditorView getPhotoEditor()> -> _SOURCE_
<com.android.calendar.DayView: android.text.format.Time getSelectedTime()> -> _SOURCE_
<org.apache.http.cookie.CookieOrigin: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)> -> _SOURCE_
<android.view.View: int getSystemUiVisibility()> -> _SOURCE_
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> -> _SOURCE_
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)> -> _SOURCE_
<com.android.server.wm.WindowState: boolean getGivenInsetsPendingLw()> -> _SOURCE_
<java.util.Hashtable: java.util.Collection values()> -> _SOURCE_
<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()> -> _SOURCE_
<java.util.Collections$EmptyList: java.lang.Object get(int)> -> _SOURCE_
<android.filterfw.core.GLFrame: int getFboId()> -> _SOURCE_
<android.view.PointerIcon$1: android.view.PointerIcon createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.editor.ContactEditorUtils getInstance(android.content.Context)> -> _SOURCE_
<java.net.Socks4Message: java.lang.String getErrorString(int)> -> _SOURCE_
<com.android.mms.model.LayoutModel: java.lang.String getBackgroundColor()> -> _SOURCE_
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact get(java.lang.String,boolean)> -> _SOURCE_
<com.android.calendar.EditResponseHelper: int getWhichEvents()> -> _SOURCE_
<java.nio.channels.FileLock: long size()> -> _SOURCE_
<android.view.View: int getMeasuredHeightAndState()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<java.net.SocketImpl: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$3: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()> -> _SOURCE_
<java.net.URL: java.lang.String getUserInfo()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTF8String: com.android.org.bouncycastle.asn1.DERUTF8String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.google.common.io.ByteStreams: byte[] getDigest(com.google.common.io.InputSupplier,java.security.MessageDigest)> -> _SOURCE_
<android.content.res.ObbInfo: java.lang.String toString()> -> _SOURCE_
<android.app.IInstrumentationWatcher$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.contacts.model.account.AccountType$EventEditType: java.lang.String toString()> -> _SOURCE_
<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()> -> _SOURCE_
<android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderField(int)> -> _SOURCE_
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getJobDescription()> -> _SOURCE_
<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength getSignalStrength()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getMode()> -> _SOURCE_
<android.widget.TextView: int getImeActionId()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker softKeys()> -> _SOURCE_
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams: byte getFc()> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: org.ccil.cowan.tagsoup.Schema schema()> -> _SOURCE_
<libcore.util.ZoneInfo: int getOffset(long)> -> _SOURCE_
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,int)> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int standardHashCode()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.settings.wifi.AccessPoint: android.net.wifi.WifiInfo getInfo()> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String)> -> _SOURCE_
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()> -> _SOURCE_
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()> -> _SOURCE_
<com.android.internal.telephony.Connection: int getCnapNamePresentation()> -> _SOURCE_
<java.nio.FloatToByteBufferAdapter: float get()> -> _SOURCE_
<com.android.inputmethod.latin.ImfUtils: java.lang.String getInputMethodIdOfThisIme(android.content.Context)> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.media.IRemoteVolumeObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.ParcelFileDescriptor: int getFd()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: int getRefCountSync()> -> _SOURCE_
<gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl: javax.net.ssl.HandshakeCompletedEvent getHandshakeCompletedEvent()> -> _SOURCE_
<android.drm.DrmInfo: int getInfoType()> -> _SOURCE_
<com.android.uiautomator.core.QueryController: int getPatternCount(com.android.uiautomator.core.UiSelector)> -> _SOURCE_
<android.content.pm.VerificationParams: android.net.Uri getReferrer()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)> -> _SOURCE_
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: int getMetadataCount()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetProvider: android.app.PendingIntent getLaunchPendingIntentTemplate(android.content.Context)> -> _SOURCE_
<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildContentView(android.view.View)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<android.text.style.ForegroundColorSpan: int getForegroundColor()> -> _SOURCE_
<android.telephony.NeighboringCellInfo: int getLac()> -> _SOURCE_
<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getScaleFactor()> -> _SOURCE_
<com.android.deskclock.Alarms: android.content.CursorLoader getAlarmsCursorLoader(android.content.Context)> -> _SOURCE_
<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getBufferPercentage()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> android.permission.CHANGE_WIFI_STATE -> _SOURCE_
<android.webkit.WebViewClassic: int getVisibleTitleHeight()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMinExposureCompensation()> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)> -> _SOURCE_
<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)> -> _SOURCE_
<com.android.mms.transaction.TransactionSettings: java.lang.String getMmscUrl()> -> _SOURCE_
<com.android.phone.PhoneGlobals: android.app.ProgressDialog getPUKEntryProgressDialog()> -> _SOURCE_
<com.android.mms.model.RegionModel: java.lang.String getFit()> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.util.List getHealthDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.animation.IntKeyframeSet: int getIntValue(float)> -> _SOURCE_
<com.android.server.BatteryService: int getPlugType()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getSupported()> -> _SOURCE_
<com.android.mms.model.MediaModel: android.net.Uri getUri()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getFormat()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedComments()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.util.List getExtensionPackageNames()> -> _SOURCE_
<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription createTaskDescription(int,int,android.content.Intent,android.content.ComponentName,java.lang.CharSequence)> -> _SOURCE_
<android.view.ViewConfiguration: int getKeyRepeatTimeout()> -> _SOURCE_
<android.media.AudioManager: boolean isMicrophoneMute()> -> _SOURCE_
<java.lang.Short: float floatValue()> -> _SOURCE_
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.os.UserHandle: java.lang.String toString()> -> _SOURCE_
<android.app.ActivityManager: int getMemoryClass()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> -> _SOURCE_
<android.telephony.SmsCbMessage: int getSerialNumber()> -> _SOURCE_
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)> -> _SOURCE_
<com.android.server.display.LogicalDisplay: android.view.DisplayInfo getDisplayInfoLocked()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer get(byte[],int,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternalParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: java.util.ArrayList access$602(com.android.systemui.recent.RecentTasksLoader,java.util.ArrayList)> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: int getLong(byte[],int)> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.NetworkStatsHistory: long getBucketDuration()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeName()> -> _SOURCE_
<java.util.ResourceBundle: java.util.Set keySet()> -> _SOURCE_
<com.android.browser.PreloadedTabControl: com.android.browser.Tab getTab()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)> -> _SOURCE_
<android.os.Registrant: android.os.Handler getHandler()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.lang.String getDataSet()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultBackgroundType()> -> _SOURCE_
<android.net.ProxyProperties: java.net.Proxy makeProxy()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> -> _SOURCE_
<android.webkit.WebViewClassic: java.lang.String getUrl()> -> _SOURCE_
<android.view.textservice.TextInfo: int getSequence()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher precomputedInternal()> -> _SOURCE_
<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getContentType()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getY(int)> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.HeaderIterator iterator()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String getHeaderValue()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getSubscriberId()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.WaitingThread: java.lang.Thread getThread()> -> _SOURCE_
<com.android.mms.MmsConfig: int getDefaultMMSMessagesPerThread()> -> _SOURCE_
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getFullWifiLockTime(long,int)> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: android.content.ContentValues toContentValues()> -> _SOURCE_
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()> -> _SOURCE_
<org.apache.harmony.security.utils.AlgNameMapper: java.lang.String getStandardName(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()> -> _SOURCE_
<android.content.ISyncAdapter$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getContentType()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: java.lang.CharSequence getUnknownNameText()> -> _SOURCE_
<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.calendar.Utils: int getWeekNumberFromTime(long,android.content.Context)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getSystemSharedLibraryNames()> -> _SOURCE_
<android.content.res.AssetManager: android.content.res.AssetManager getSystem()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactDirectoryManager getContactDirectoryManagerForTest()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getTrafficClass()> -> _SOURCE_
<android.widget.ViewAnimator: boolean getAnimateFirstView()> -> _SOURCE_
<dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)> -> _SOURCE_
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERIA5String: java.lang.String getString()> -> _SOURCE_
<android.view.Display: int getHeight()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: int getTotalMessageSize()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getPreferredNetworkType(android.os.Message)> -> _SOURCE_
<com.android.settings.wifi.WifiDialog: android.widget.Button getForgetButton()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()> -> _SOURCE_
<com.google.common.collect.BstCountBasedBalancePolicies$1: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<com.google.common.collect.Iterables$IterableWithToString: java.lang.String toString()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.util.List subList(int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getSessionCase()> -> _SOURCE_
<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState getCurrentState()> -> _SOURCE_
<java.nio.CharArrayBuffer: char get()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getTransIdEnabled()> -> _SOURCE_
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getSuperPrimaryEntry(java.lang.String,boolean)> -> _SOURCE_
<com.android.calendar.DayFragment: long getSupportedEventTypes()> -> _SOURCE_
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getButtonImageId(boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.ContentLanguage: java.lang.String getLanguageTag()> -> _SOURCE_
<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String getSelection()> -> _SOURCE_
<com.android.exchange.ExchangeService: com.android.emailcommon.provider.Account getAccountById(long)> -> _SOURCE_
<android.app.Activity: android.content.Intent getIntent()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<android.widget.TextView: int getCurrentTextColor()> -> _SOURCE_
<com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.Utils: java.lang.String getDebugInfo(com.android.inputmethod.latin.SuggestedWords,int)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getObbDir()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: int getState()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: char[] getTextCharacters(int[])> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String toString()> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure()> -> _SOURCE_
<java.util.Collections$CheckedList: java.lang.Object get(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: boolean getPackageAskScreenCompat(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getInstance(android.content.Context)> -> _SOURCE_
<java.util.TreeSet: java.util.Iterator iterator()> -> _SOURCE_
<android.widget.CalendarView: int getWeekDayTextAppearance()> -> _SOURCE_
<android.util.TypedValue: float getFloat()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.Keyboard: java.lang.String toString()> -> _SOURCE_
<android.database.AbstractWindowedCursor: long getLong(int)> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: int getInt(int)> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getConnectionState()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: java.lang.CharSequence getActivityTitle()> -> _SOURCE_
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: int getLargestPoolSize()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getSystemDecorRectLw(android.graphics.Rect)> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()> -> _SOURCE_
<com.android.internal.view.IInputContextCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: int getDeliveryReport()> -> _SOURCE_
<java.security.cert.Certificate: java.lang.Object writeReplace()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.String getHostName()> -> _SOURCE_
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison,int)> -> _SOURCE_
<com.android.inputmethod.latin.StringUtils: int getCapsMode(java.lang.CharSequence,int,java.util.Locale,boolean)> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getOrdinal()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int)> -> _SOURCE_
<android.widget.TextView: float getTextScaleX()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getNeedClientAuth()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()> -> _SOURCE_
<com.android.contacts.model.Contact: long getPhotoId()> -> _SOURCE_
<android.preference.PreferenceFragment: android.widget.ListView getListView()> -> _SOURCE_
<android.os.TokenWatcher: java.lang.String access$200(android.os.TokenWatcher)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderValue()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()> -> _SOURCE_
<android.os.Debug: int getThreadAllocCount()> -> _SOURCE_
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()> -> _SOURCE_
<android.widget.FrameLayout: int getForegroundGravity()> -> _SOURCE_
<java.util.PriorityQueue: java.util.Iterator iterator()> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()> -> _SOURCE_
<java.lang.Daemons$Daemon: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getFragmentSize(int)> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyDeath()> -> _SOURCE_
<android.widget.ListPopupWindow: boolean isShowing()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String getContentFileName(android.content.Context,android.net.Uri)> -> _SOURCE_
<android.nfc.NdefRecord: int getByteLength()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getScheme()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransport()> -> _SOURCE_
<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbEtwsInfo getEtwsInfo()> -> _SOURCE_
<com.android.server.pm.UserManagerService: int[] getUserIdsLPr()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: int getSmallFrameHeight()> -> _SOURCE_
<java.nio.HeapByteBuffer: short getShort(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isCspPlmnEnabled()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getSelectedTab()> -> _SOURCE_
<android.drm.DrmEvent: java.lang.String getMessage()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateIssuer$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.net.Socks4Message: int getPort()> -> _SOURCE_
<android.widget.ImageView: int getImageAlpha()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectCustomSlowCalls()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.String toString()> -> _SOURCE_
<java.net.DatagramSocket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle get(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getRemoteStreamMaxVolume()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.view.View getHeaderView(int,android.database.Cursor,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.webkit.WebView: android.view.View getZoomControls()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)> -> _SOURCE_
<com.android.mms.util.Recycler$MmsRecycler: long getThreadId(android.database.Cursor)> -> _SOURCE_
<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()> -> _SOURCE_
<android.os.storage.IObbActionListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: int disableApnType(java.lang.String)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: java.lang.Object getGroup(int)> -> _SOURCE_
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.Iterable,boolean)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getEsn()> -> _SOURCE_
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestedWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,boolean,int)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: long getItemId(int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: int getType()> -> _SOURCE_
<android.nfc.tech.NfcB: boolean isConnected()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getAvailableDisplays()> -> _SOURCE_
<android.content.IClipboard$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getText()> -> _SOURCE_
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageId()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()> -> _SOURCE_
<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getMsisdn()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> -> _SOURCE_
<gov.nist.javax.sip.header.RequireList: java.lang.Object clone()> -> _SOURCE_
<com.android.deskclock.TimePicker: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: java.lang.Object writeReplace()> -> _SOURCE_
<com.android.internal.telephony.OperatorInfo: java.lang.String toString()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|NETWORK_INFORMATION
<com.android.contacts.list.ContactListItemView: com.android.contacts.list.ContactListItemView$PhotoPosition getPhotoPosition()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()> -> _SOURCE_
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()> -> _SOURCE_
<com.android.browser.AddBookmarkPage$EditBookmarkInfoLoader: com.android.browser.AddBookmarkPage$EditBookmarkInfo loadInBackground()> -> _SOURCE_
<org.apache.http.HttpHost: int getPort()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getUserAgent()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUniversalString: byte[] getOctets()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isBound()> -> _SOURCE_
<android.telephony.SmsMessage: boolean isMWISetMessage()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object peekFirst()> -> _SOURCE_
<android.database.CursorWindow: java.lang.String getName()> -> _SOURCE_
<com.android.mms.data.WorkingMessage: android.net.Uri access$1300(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri,android.content.Context,java.util.HashMap)> -> _SOURCE_
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()> -> _SOURCE_
<android.content.ContextWrapper: android.os.Looper getMainLooper()> -> _SOURCE_
<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.WindowManager$LayoutParams: java.lang.String toString()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.io.GaiException: java.net.UnknownHostException rethrowAsUnknownHostException()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getPluginsEnabled()> -> _SOURCE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()> -> _SOURCE_
<android.telephony.NeighboringCellInfo: int getRssi()> -> _SOURCE_
<java.util.Calendar: int getActualMinimum(int)> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getHost()> -> _SOURCE_
<libcore.net.http.RequestHeaders: int getMinFreshSeconds()> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams copy()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()> -> _SOURCE_
<com.android.mms.data.Contact: byte[] access$1702(com.android.mms.data.Contact,byte[])> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)> -> _SOURCE_
<android.database.AbstractWindowedCursor: byte[] getBlob(int)> -> _SOURCE_
<com.android.server.location.MockProvider: long getStatusUpdateTime()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getVersionString()> -> _SOURCE_
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: long getItemId(int)> -> _SOURCE_
<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)> -> _SOURCE_
<android.media.Metadata: java.util.Date getDate(int)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()> -> _SOURCE_
<android.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()> -> _SOURCE_
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.String getName()> -> _SOURCE_
<java.net.HttpURLConnection: boolean getFollowRedirects()> -> _SOURCE_
<android.os.Debug: int getLoadedClassCount()> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String getRelease()> -> _SOURCE_
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()> -> _SOURCE_
<com.android.emailcommon.service.IPolicyService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: java.util.Date getAdjustedDate()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getMultipartSmsEnabled()> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.ProxyProperties getGlobalProxy()> -> _SOURCE_
<android.net.http.ErrorStrings: int getResource(int)> -> _SOURCE_
<android.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()> -> _SOURCE_
<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getMessageBody()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardBuilder load(int,com.android.inputmethod.keyboard.KeyboardId)> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)> -> _SOURCE_
<com.android.soundrecorder.Recorder: java.io.File sampleFile()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()> -> _SOURCE_
<com.android.camera.ComboPreferences: int getInt(java.lang.String,int)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<com.android.ex.chips.SingleRecipientArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)> -> _SOURCE_
<com.android.browser.BaseUi: com.android.browser.TitleBar getTitleBar()> -> _SOURCE_
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()> -> _SOURCE_
<com.android.settings.net.NetworkPolicyEditor: long getPolicyWarningBytes(android.net.NetworkTemplate)> -> _SOURCE_
<com.android.server.display.DisplayDevice: com.android.server.display.DisplayAdapter getAdapterLocked()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)> -> _SOURCE_
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.cookie.BrowserCompatSpec: int getVersion()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V40: int getVersion()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object removeFirst()> -> _SOURCE_
<android.os.storage.IMountServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.security.MessageDigest$MessageDigestImpl: byte[] engineDigest()> -> _SOURCE_
<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation get(com.android.mms.data.ContactList)> -> _SOURCE_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()> -> _SOURCE_
<com.google.common.base.CharMatcher$9: com.google.common.base.CharMatcher negate()> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Base64: byte[] encode(byte[])> -> _SOURCE_
<java.beans.IndexedPropertyChangeEvent: int getIndex()> -> _SOURCE_
<com.android.deskclock.Alarm: java.lang.String getLabelOrDefault(android.content.Context)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quad$1: float getInterpolation(float)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getIndicatorId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509NameEntryConverter: com.android.org.bouncycastle.asn1.ASN1Primitive convertHexEncoded(java.lang.String,int)> -> _SOURCE_
<android.widget.TextView: int getLineCount()> -> _SOURCE_
<android.view.View$9: java.lang.Float get(android.view.View)> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelView: float getExpandedFraction()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getValue()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: int getLteOnCdmaMode()> -> _SOURCE_
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardMessageArea: java.lang.String getOwnerInfo()> -> _SOURCE_
<com.android.contacts.vcard.VCardService$MyBinder: com.android.contacts.vcard.VCardService getService()> -> _SOURCE_
<android.view.View: float getVerticalScrollFactor()> -> _SOURCE_
<android.view.View: int getLeftPaddingOffset()> -> _SOURCE_
<com.android.contacts.util.AccountSelectionUtil$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.dataitem.RelationDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.content.pm.ResolveInfo: int getIconResource()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPrefix()> -> _SOURCE_
<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()> -> _SOURCE_
<android.telephony.CellIdentityLte: int getCi()> -> _SOURCE_
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub$Proxy: int[] getUidsWithPolicy(int)> -> _SOURCE_
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getXtPersistBytes(long)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionX()> -> _SOURCE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getNameTextView()> -> _SOURCE_
<com.android.contacts.util.DataStatus: long getTimestamp()> -> _SOURCE_
<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILParElement addPar(org.w3c.dom.smil.SMILDocument)> -> _SOURCE_
<com.android.internal.os.ProcessStats: long[] getLastCpuSpeedTimes()> -> _SOURCE_
<libcore.net.http.RequestHeaders: int getMaxStaleSeconds()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: long getExpirationTime()> -> _SOURCE_
<android.filterfw.geometry.Point: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: java.lang.String getTitle()> -> _SOURCE_
<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()> -> _SOURCE_
<com.android.mms.model.MediaModel: short getFill()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.CollectionUtils: java.util.LinkedList newLinkedList()> -> _SOURCE_
<android.widget.RemoteViews: java.lang.String getPackage()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<java.util.LinkedList: java.lang.Object removeLast()> -> _SOURCE_
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> -> _SOURCE_
<com.android.settings.accounts.AuthenticatorHelper: android.accounts.AuthenticatorDescription getAccountTypeDescription(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Set keySet()> -> _SOURCE_
<java.math.BigDecimal: java.math.BigDecimal ulp()> -> _SOURCE_
<org.apache.http.message.BasicStatusLine: java.lang.Object clone()> -> _SOURCE_
<libcore.io.ForwardingOs: int getsockoptByte(java.io.FileDescriptor,int,int)> -> _SOURCE_
<android.widget.ExpandableListConnector: int getViewTypeCount()> -> _SOURCE_
<com.android.camera.Thumbnail: android.net.Uri getUri()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<com.android.exchange.ExchangeService$2: int getApiLevel()> -> _SOURCE_
<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()> -> _SOURCE_
<com.android.systemui.recent.TaskDescription: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<com.android.browser.BaseUi: android.app.Activity getActivity()> -> _SOURCE_
<java.security.Signature: java.security.Provider getProvider()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)> -> _SOURCE_
<android.widget.Switch: int getCompoundPaddingRight()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()> -> _SOURCE_
<android.app.Activity: android.view.Window getWindow()> -> _SOURCE_
<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)> -> _SOURCE_
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> _SOURCE_
<com.android.server.IntentResolverOld: java.util.Iterator filterIterator()> -> _SOURCE_
<android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)> -> _SOURCE_
<android.content.ContentProviderNative: android.content.IContentProvider asInterface(android.os.IBinder)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<com.android.camera.IconListPreference: int getSingleIcon()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity: com.android.contacts.util.DialogManager getDialogManager()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getStorageEncryptionStatus(int)> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getQuery()> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification$NotificationInfo: java.lang.CharSequence formatInboxMessage(android.content.Context)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean)> -> _SOURCE_
<android.net.sip.SipSession: int getState()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getClassName()> -> _SOURCE_
<android.database.CursorWrapper: java.lang.String getString(int)> -> _SOURCE_
<android.media.ExifInterface: long getGpsDateTime()> -> _SOURCE_
<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: java.util.Collection getDataIds()> -> _SOURCE_
<java.nio.DoubleArrayBuffer: double get()> -> _SOURCE_
<android.preference.Preference: android.content.SharedPreferences$Editor getEditor()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getY(int)> -> _SOURCE_
<android.preference.ListPreference: java.lang.String getValue()> -> _SOURCE_
<com.android.contacts.ContactsUtils: java.lang.String getCurrentCountryIso(android.content.Context)> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy build()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getKeepAlive()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)> -> _SOURCE_
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()> -> _SOURCE_
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()> -> _SOURCE_
<android.os.Bundle: java.lang.Object get(java.lang.String)> -> _SOURCE_
<org.json.JSONObject: boolean getBoolean(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.UUSInfo getUUSInfo()> -> _SOURCE_
<android.view.Window: int getFeatures()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quad$2: float getInterpolation(float)> -> _SOURCE_
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()> -> _SOURCE_
<android.app.ActivityOptions: int getCustomExitResId()> -> _SOURCE_
<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.preference.PreferenceManager: android.app.Activity getActivity()> -> _SOURCE_
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object getKey()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: byte[] toBytes()> -> _SOURCE_
<android.support.v4.view.ViewCompat: int getLabelFor(android.view.View)> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub$Proxy: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> -> _SOURCE_
<android.view.Display: int getDisplayId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Integer getIndirectReference()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)> -> _SOURCE_
<com.android.server.MountService: int[] getStorageUsers(java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getGivenNames()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()> -> _SOURCE_
<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: int getCount()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHostPort()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: java.util.ArrayList access$600(com.android.systemui.recent.RecentTasksLoader)> -> _SOURCE_
<java.lang.Package: java.lang.Package[] getPackages()> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.DayFragment: com.android.calendar.Event getSelectedEvent()> -> _SOURCE_
<android.view.Surface$PhysicalDisplayInfo: java.lang.String toString()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()> -> _SOURCE_
<com.android.browser.provider.SQLiteContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> -> _SOURCE_
<android.os.BatteryStats: long getRadioDataUptimeMs()> -> _SOURCE_
<com.android.mms.model.LayoutModel: com.android.mms.model.RegionModel getRootLayout()> -> _SOURCE_
<android.media.MediaPlayer: int getIntParameter(int)> -> _SOURCE_
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()> -> _SOURCE_
<android.text.style.LeadingMarginSpan$Standard: int getLeadingMargin(boolean)> -> _SOURCE_
<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.text.Collator: int getDecomposition()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: boolean isEmpty()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$PostalActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.lang.String getContentEncoding()> -> _SOURCE_
<com.android.server.wm.WindowState: com.android.server.wm.MagnificationSpec getWindowMagnificationSpecLocked()> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRec: long getTime()> -> _SOURCE_
<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys: int distinctElements()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: int getInt(int)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type[] getClonedTypeArray(org.apache.harmony.luni.lang.reflect.ListOfTypes)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float getMaxScrollProgress()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()> -> _SOURCE_
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.account.AccountTypeWithDataSet)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.List getExtendedKeyUsage()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: int getSize()> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate: byte[] access$300(org.apache.harmony.security.x509.Certificate)> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.widget.Editor$PinnedPopupWindow: boolean isShowing()> -> _SOURCE_
<android.location.ILocationListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.os.ProcessStats: int getLastSystemTime()> -> _SOURCE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getTransport()> -> _SOURCE_
<com.android.contacts.calllog.CallTypeIconsView: int getCallType(int)> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnAlphaTag()> -> _SOURCE_
<com.google.common.collect.Iterators$12: java.lang.Object get(int)> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider$1: android.content.Intent getIntent(android.content.Context)> -> _SOURCE_
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()> -> _SOURCE_
<java.util.ArrayList: java.util.Iterator iterator()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getMultiParameterValue(java.lang.String)> -> _SOURCE_
<com.android.mms.model.SlideModel: com.android.mms.model.VideoModel getVideo()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<java.security.Provider: java.util.Set getServices()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQuantityText(int,int,int)> -> _SOURCE_
<com.android.server.am.ContentProviderConnection: java.lang.String toString()> -> _SOURCE_
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: com.android.browser.SuggestionsAdapter$SuggestionResults buildSuggestionResults()> -> _SOURCE_
<com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler getInstance()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.util.Iterator getHeaders()> -> _SOURCE_
<android.filterfw.core.SerializedFrame: float[] getFloats()> -> _SOURCE_
<android.renderscript.Element: android.renderscript.Element getSubElement(int)> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Iterator iterator()> -> _SOURCE_
<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToRGB(byte[],int,boolean,byte[])> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: int getFlag(android.content.res.TypedArray,int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()> -> _SOURCE_
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)> -> _SOURCE_
<java.lang.Double: long longValue()> -> _SOURCE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)> -> _SOURCE_
<android.net.http.Connection: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.webkit.HTML5VideoViewProxy: android.content.Context getContext()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Permission getPermission()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.util.List getAllProviders()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)> -> _SOURCE_
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountType(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskReads()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getTransport()> -> _SOURCE_
<org.apache.commons.io.output.ByteArrayOutputStream: java.lang.String toString()> -> _SOURCE_
<java.nio.DoubleBuffer: java.lang.Object array()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getLine()> -> _SOURCE_
<libcore.net.http.ResponseHeaders: int getSMaxAgeSeconds()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getSecureAuthenticationHelper(gov.nist.javax.sip.clientauthutils.SecureAccountManager,javax.sip.header.HeaderFactory)> -> _SOURCE_
<android.view.InputDevice: int getKeyboardType()> -> _SOURCE_
<com.android.internal.telephony.WspTypeDecoder: long getValue32()> -> _SOURCE_
<java.text.NumberFormat: java.math.RoundingMode getRoundingMode()> -> _SOURCE_
<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: int getLookupType(java.lang.String)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName,int)> -> _SOURCE_
<com.android.server.AppWidgetService: android.widget.RemoteViews getAppWidgetViews(int)> -> _SOURCE_
<java.lang.VMClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()> -> _SOURCE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemObject: java.util.List getHeaders()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: byte get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getCallId()> -> _SOURCE_
<gov.nist.javax.sip.header.Organization: java.lang.String encodeBody()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralString: byte[] getOctets()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getContentType()> -> _SOURCE_
<com.android.camera.Util: android.hardware.Camera$Size getOptimalVideoSnapshotPictureSize(java.util.List,double)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x501.Name getIssuer()> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.WebSettingsClassic getSettings()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getParserPointer()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode()> -> _SOURCE_
<android.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()> -> _SOURCE_
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()> -> _SOURCE_
<com.android.internal.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String getSuggestUriForQuery(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIClient()> -> _SOURCE_
<android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListView: int getTotalTopPinnedHeaderHeight()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)> -> _SOURCE_
<com.android.mms.util.BlobCache: int getActiveCount()> -> _SOURCE_
<android.webkit.WebView: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer clear()> -> _SOURCE_
<android.animation.ValueAnimator: long getCurrentPlayTime()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceSvn()> -> _SOURCE_
<android.view.VelocityTracker: float getYVelocity()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getBasestationId()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmCall: java.util.List getConnections()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesSent(int)> -> _SOURCE_
<android.media.AudioManager: int getMasterStreamType()> -> _SOURCE_
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)> -> _SOURCE_
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)> -> _SOURCE_
<android.webkit.Plugin: java.lang.String toString()> -> _SOURCE_
<android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSystemAudioRoute()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)> -> _SOURCE_
<java.util.Calendar: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1: java.lang.Object getValue()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getUseClientMode()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: boolean isEmpty()> -> _SOURCE_
<android.text.format.Time: int getActualMaximum(int)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getPossibleNumberPattern()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimCdmaHomeLoaded: java.lang.String getEfName()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()> android.permission.READ_CONTACTS -> _SOURCE_|CONTACT_INFORMATION
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getJavaScriptCanOpenWindowsAutomatically()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEROctetStringParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.widget.TabHost: int getCurrentTab()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.Object getParm(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<java.nio.channels.SelectionKey: java.lang.Object attachment()> -> _SOURCE_
<com.android.settings.Settings$HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getReuseAddress()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.LogRecordFactory getLogRecordFactory()> -> _SOURCE_
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getLeadingDigits()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: float getRepeatCount()> -> _SOURCE_
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)> -> _SOURCE_
<com.android.providers.downloads.StorageManager: java.io.File getDownloadDataDirectory()> -> _SOURCE_
<com.android.server.WifiService: java.util.List getScanResults()> -> _SOURCE_
<android.view.View: int getFadeHeight(boolean)> -> _SOURCE_
<com.android.phone.EditPhoneNumberPreference: java.lang.String getPhoneNumber()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: int getLanguageOnSpacebarAnimAlpha()> -> _SOURCE_
<java.util.Random: double nextGaussian()> -> _SOURCE_
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()> -> _SOURCE_
<org.apache.james.mime4j.field.DateTimeField: org.apache.james.mime4j.field.datetime.parser.ParseException getParseException()> -> _SOURCE_
<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time getSelectedDay()> -> _SOURCE_
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: org.ccil.cowan.tagsoup.ElementType parent()> -> _SOURCE_
<android.os.Environment: java.lang.String getExternalStorageState()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$NoteKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<com.android.mms.MmsConfig: int getSmsToMmsTextThreshold()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Xfermode getXfermode()> -> _SOURCE_
<java.util.UnsafeArrayList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeUtility: java.io.InputStream getInputStreamForContentTransferEncoding(java.io.InputStream,java.lang.String)> -> _SOURCE_
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump(int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMultipart: java.lang.String generateBoundary()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getCount()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String debugDump()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int)> -> _SOURCE_
<android.graphics.drawable.InsetDrawable$InsetState: int getChangingConfigurations()> -> _SOURCE_
<com.android.mms.util.SendingProgressTokenManager: long get(java.lang.Object)> -> _SOURCE_
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()> -> _SOURCE_
<org.xml.sax.InputSource: java.lang.String getPublicId()> -> _SOURCE_
<android.view.View: float getTranslationX()> -> _SOURCE_
<java.net.URI: java.lang.String getRawAuthority()> -> _SOURCE_
<dalvik.system.DexFile: java.util.Enumeration entries()> -> _SOURCE_
<com.android.mms.ui.MessageListAdapter: int getViewTypeCount()> -> _SOURCE_
<java.lang.AbstractStringBuilder: char[] shareValue()> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()> -> _SOURCE_
<android.graphics.Paint$FontMetricsInt: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<android.webkit.PluginManager: android.webkit.PluginManager getInstance(android.content.Context)> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<com.android.inputmethod.latin.Dictionary: java.util.ArrayList getSuggestionsWithSessionId(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)> -> _SOURCE_
<gov.nist.core.ParserCore: gov.nist.core.NameValue nameValue()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: org.ccil.cowan.tagsoup.AttributesImpl atts()> -> _SOURCE_
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)> -> _SOURCE_
<java.io.EmulatedFields: short get(java.lang.String,short)> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()> -> _SOURCE_
<java.util.TimeZone: int getDSTSavings()> -> _SOURCE_
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: boolean isLocked()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)> -> _SOURCE_
<java.text.Format: java.lang.Object clone()> -> _SOURCE_
<com.android.camera.ui.RotateImageView: int getDegree()> -> _SOURCE_
<java.util.Currency: java.lang.String getDisplayName(java.util.Locale)> -> _SOURCE_
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: java.lang.String access$500(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)> -> _SOURCE_
<java.text.NumberFormat: int getMinimumIntegerDigits()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccCard getIccCard()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Collection entries()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getHost()> -> _SOURCE_
<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$BrowserSettings getBrowserSettings()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection(java.lang.Object)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.Map getServiceStats()> -> _SOURCE_
<android.drm.DrmInfoRequest: int getInfoType()> -> _SOURCE_
<com.android.server.MountService$ObbState: android.os.IBinder getBinder()> -> _SOURCE_
<java.util.Locale: java.lang.Object clone()> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()> -> _SOURCE_
<java.util.Locale: java.lang.String getISO3Country()> -> _SOURCE_
<android.widget.ScrollView: float getTopFadingEdgeStrength()> -> _SOURCE_
<com.android.contacts.util.AccountsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isInputShutdown()> -> _SOURCE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String encode()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.browser.NavScreen$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)> -> _SOURCE_
<android.widget.OverScroller: int getStartX()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageDirectory()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.ContactsApplication: com.android.contacts.test.InjectedServices getInjectedServices()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> -> _SOURCE_
<android.text.style.TypefaceSpan: int getSpanTypeId()> -> _SOURCE_
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getMiddleName()> -> _SOURCE_
<com.android.contacts.interactions.GroupDeletionDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.server.input.InputManagerService: int[] getInputDeviceIds()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)> -> _SOURCE_
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)> -> _SOURCE_
<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.LinkAddress: java.net.InetAddress getAddress()> -> _SOURCE_
<android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getWakelockStats()> -> _SOURCE_
<com.google.common.base.CharMatcher: java.lang.String trimTrailingFrom(java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: int getLteOnCdmaMode()> -> _SOURCE_
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()> -> _SOURCE_
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: java.util.Iterator iterator()> -> _SOURCE_
<java.io.File: java.lang.String[] list()> -> _SOURCE_
<java.lang.reflect.Array: double getDouble(java.lang.Object,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.Finished: byte[] getData()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getSync2()> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MinExpiresHeader createMinExpiresHeader(int)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()> -> _SOURCE_
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoOutput()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getSavePassword()> -> _SOURCE_
<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)> -> _SOURCE_
<gov.nist.core.LexerCore: int getPtr()> -> _SOURCE_
<com.android.providers.contacts.DefaultCallLogInsertionHelper: com.android.providers.contacts.DefaultCallLogInsertionHelper getInstance(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.ApnSetting: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<android.view.View: int getAccessibilityViewId()> -> _SOURCE_
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()> -> _SOURCE_
<android.widget.AbsListView: long[] getCheckedItemIds()> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarEntry getJarEntry()> -> _SOURCE_
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getGeographicalScope()> -> _SOURCE_
<android.view.KeyEvent: java.lang.String getCharacters()> -> _SOURCE_
<android.widget.Editor$InsertionHandleView: int getCurrentCursorOffset()> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.content.ContextWrapper: int getThemeResId()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: int getFixedContentLength()> -> _SOURCE_
<android.view.View: float getLeftFadingEdgeStrength()> -> _SOURCE_
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> -> _SOURCE_
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)> -> _SOURCE_
<android.view.IWindowSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.util.AbstractSequentialList: java.lang.Object get(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: java.util.List getMetadataList()> -> _SOURCE_
<android.os.Debug: int getThreadExternalAllocSize()> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)> -> _SOURCE_
<com.android.settings.bluetooth.BluetoothDeviceFilter: com.android.settings.bluetooth.BluetoothDeviceFilter$Filter getFilter(int)> -> _SOURCE_
<android.widget.Editor$SelectionEndHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)> -> _SOURCE_
<android.text.SpannableStringBuilder: java.lang.String toString()> -> _SOURCE_
<android.media.MediaRouter$Static: android.view.Display[] getAllPresentationDisplays()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)> -> _SOURCE_
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)> -> _SOURCE_
<android.content.ContentProvider$Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()> -> _SOURCE_
<javax.sip.ResponseEvent: javax.sip.ClientTransaction getClientTransaction()> -> _SOURCE_
<android.content.Intent: android.content.Intent getIntent(java.lang.String)> -> _SOURCE_
<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()> -> _SOURCE_
<android.database.CursorWindow: int getType(int,int)> -> _SOURCE_
<libcore.net.http.HttpConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<android.widget.GridLayout: boolean isRowOrderPreserved()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableSet keySet()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: boolean getDataRoamingEnabled()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayVariant()> -> _SOURCE_
<android.net.Uri: android.net.Uri normalizeScheme()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getRealm()> -> _SOURCE_
<android.hardware.display.IDisplayManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: android.content.ContentProviderOperation$Builder beginKeepTogether()> -> _SOURCE_
<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat clearNationalPrefixFormattingRule()> -> _SOURCE_
<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientChip getLastChip()> -> _SOURCE_
<android.text.style.BulletSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: com.android.internal.telephony.PhoneConstants$State getPhoneState()> -> _SOURCE_
<android.net.rtp.AudioStream: int getDtmfType()> -> _SOURCE_
<com.android.mms.data.Contact: int getContactMethodType()> -> _SOURCE_
<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getAddress()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String)> -> _SOURCE_
<android.nfc.Tag$1: android.nfc.Tag createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getMessageId()> -> _SOURCE_
<android.view.Surface: int getGenerationId()> -> _SOURCE_
<gov.nist.javax.sip.parser.Parser: gov.nist.javax.sip.parser.Lexer getLexer()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.RawContact getRawContact()> -> _SOURCE_
<com.android.mms.model.LayoutModel: com.android.mms.model.RegionModel getImageRegion()> -> _SOURCE_
<com.android.internal.util.AsyncService: android.os.Handler getHandler()> -> _SOURCE_
<java.lang.Class: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: long getSelectedInstanceId()> -> _SOURCE_
<android.content.res.ColorStateList: int getColorForState(int[],int)> -> _SOURCE_
<android.accounts.IAccountAuthenticator$Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getAllPermissionGroups(int)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData: java.lang.String toString()> -> _SOURCE_
<android.net.Uri: java.lang.String access$300()> -> _SOURCE_
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()> -> _SOURCE_
<gov.nist.core.NameValueList: java.util.Collection values()> -> _SOURCE_
<android.filterfw.core.FilterPort: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.camera.ComboPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.CellIdentityGsm: int getCid()> -> _SOURCE_
<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()> -> _SOURCE_
<com.android.internal.telephony.cat.CommandParamsFactory: com.android.internal.telephony.cat.CommandParamsFactory getInstance(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.IccFileHandler)> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getGroupCount()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Date getCreationDate(java.lang.String)> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> -> _SOURCE_
<java.security.cert.CertPath: int hashCode()> -> _SOURCE_
<android.widget.ArrayAdapter: int getCount()> -> _SOURCE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getNeighboringCids(android.os.Message)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getSystemId()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)> -> _SOURCE_
<java.util.Collections$SynchronizedList: java.lang.Object get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.util.Iterator iterator()> -> _SOURCE_
<android.webkit.ConsoleMessage: java.lang.String sourceId()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()> -> _SOURCE_
<java.lang.Double: float floatValue()> -> _SOURCE_
<com.android.deskclock.TimePicker: int getLayoutId()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()> -> _SOURCE_
<java.lang.reflect.Array: short getShort(java.lang.Object,int)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String getStreet()> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: java.lang.String getYear()> -> _SOURCE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler getErrorHandler()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: int getViewGroupLabelResId()> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.conn.BasicManagedEntity: java.io.InputStream getContent()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getOpacity()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingLeft()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()> -> _SOURCE_
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()> -> _SOURCE_
<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: int getAction()> -> _SOURCE_
<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()> -> _SOURCE_
<com.android.providers.contacts.HanziToPinyin: com.android.providers.contacts.HanziToPinyin getInstance()> -> _SOURCE_
<android.filterfw.core.GLFrame: int[] getInts()> -> _SOURCE_
<android.media.MediaScanner$MyMediaScannerClient: java.lang.String getGenreName(java.lang.String)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getStatusCode()> -> _SOURCE_
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()> -> _SOURCE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()> -> _SOURCE_
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()> -> _SOURCE_
<android.content.ISyncAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.google.common.io.CharStreams$1: java.io.StringReader getInput()> -> _SOURCE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])> -> _SOURCE_
<android.app.Notification$BigTextStyle: android.app.Notification build()> -> _SOURCE_
<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()> -> _SOURCE_
<android.view.MotionEvent: int getPointerIdBits()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getExtendedHeader(java.lang.String)> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getToTag()> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()> -> _SOURCE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()> -> _SOURCE_
<android.telephony.SignalStrength: int getDbm()> -> _SOURCE_
<android.content.ClipboardManager: java.lang.CharSequence getText()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: boolean isEmpty()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()> -> _SOURCE_
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> -> _SOURCE_
<android.nfc.Tag: byte[] getId()> -> _SOURCE_
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)> -> _SOURCE_
<android.net.NetworkQuotaInfo: long getEstimatedBytes()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getRotation()> -> _SOURCE_
<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()> -> _SOURCE_
<java.util.zip.Inflater: int getAdler()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestMethod()> -> _SOURCE_
<com.android.mms.MmsApp: com.android.mms.util.PduLoaderManager getPduLoaderManager()> -> _SOURCE_
<java.util.HashMap: java.util.Set entrySet()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: void getVisibleWindowsForDisplay(int,java.util.List)> -> _SOURCE_
<com.google.common.io.ByteStreams$1: java.io.ByteArrayInputStream getInput()> -> _SOURCE_
<android.widget.DatePicker: long getMaxDate()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.storage.StorageVolume: java.io.File getPathFile()> -> _SOURCE_
<java.lang.System: java.util.Properties getProperties()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiMulticastTime(long,int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object[] toArray()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()> -> _SOURCE_
<android.view.View: int getWindowSystemUiVisibility()> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: android.graphics.Point getDisplaySizeDp()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)> -> _SOURCE_
<java.util.Formatter: java.util.Locale locale()> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> -> _SOURCE_
<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: byte[] getPhotoBytes()> -> _SOURCE_
<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String encodeBody()> -> _SOURCE_
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()> -> _SOURCE_
<android.widget.RelativeLayout: int getGravity()> -> _SOURCE_
<android.inputmethodservice.ExtractEditText: boolean isFocused()> -> _SOURCE_
<android.telephony.SmsCbLocation: java.lang.String toString()> -> _SOURCE_
<com.android.mms.model.ImageModel: boolean getMediaResizable()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getProxyHost()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: int getDisplayRule(java.lang.String)> -> _SOURCE_
<java.nio.charset.CharsetEncoder: float averageBytesPerChar()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayWidth(int,int,int)> -> _SOURCE_
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)> -> _SOURCE_
<org.apache.harmony.security.x509.AccessDescription: byte[] getEncoded()> -> _SOURCE_
<com.android.calendarcommon2.RecurrenceProcessor: long[] expand(android.text.format.Time,com.android.calendarcommon2.RecurrenceSet,long,long)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()> -> _SOURCE_
<java.util.TimerTask: long getWhen()> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.String toString()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getId()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigController: android.net.wifi.WifiConfiguration getConfig()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceSvn()> -> _SOURCE_
<android.widget.AbsListView: float getBottomFadingEdgeStrength()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getIssuerUniqueID()> -> _SOURCE_
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider: android.database.Cursor getBookmarksSuggestions(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: java.lang.String toString()> -> _SOURCE_
<java.nio.charset.Charset: java.lang.String displayName(java.util.Locale)> -> _SOURCE_
<javax.sip.SipFactory: javax.sip.message.MessageFactory createMessageFactory()> -> _SOURCE_
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1Number()> -> _SOURCE_
<android.location.GpsStatus: int getTimeToFirstFix()> -> _SOURCE_
<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()> -> _SOURCE_
<android.database.CursorWrapper: android.os.Bundle getExtras()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: com.android.providers.calendar.CalendarAlarmManager getOrCreateCalendarAlarmManager()> -> _SOURCE_
<com.android.browser.Controller: android.graphics.Bitmap createScreenshot(android.webkit.WebView,int,int)> -> _SOURCE_
<com.android.providers.contacts.DataRowHandler: long getMimeTypeId()> -> _SOURCE_
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.PduPersister: java.lang.String convertUriToPath(android.content.Context,android.net.Uri)> -> _SOURCE_
<android.os.UserManager: int getUserHandle(int)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getVersionCode(android.content.Context)> -> _SOURCE_
<com.android.providers.contacts.DataRowHandlerForGroupMembership: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder: com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder getDigitsQueryBuilder(java.lang.String)> -> _SOURCE_
<java.nio.DatagramChannelImpl: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.graphics.Matrix: java.lang.String toString()> -> _SOURCE_
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)> -> _SOURCE_
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: int getContentLength()> -> _SOURCE_
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer retain()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()> -> _SOURCE_
<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableCollection entries()> -> _SOURCE_
<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager createContactPhotoManager(android.content.Context)> -> _SOURCE_
<android.view.Display: int getPixelFormat()> -> _SOURCE_
<android.net.ProxyProperties: java.lang.String getHost()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()> -> _SOURCE_
<com.android.contacts.util.BitmapUtil: int getSmallerExtentFromBytes(byte[])> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String getString(int)> -> _SOURCE_
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)> -> _SOURCE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)> -> _SOURCE_
<android.content.ClipDescription: java.lang.String getMimeType(int)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getDatabaseEnabled()> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()> -> _SOURCE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getInstallLocation()> -> _SOURCE_
<android.view.GLES20TextureLayer: android.view.HardwareCanvas getCanvas()> -> _SOURCE_
<com.android.contacts.model.Contact: com.android.contacts.model.RawContactDeltaList createRawContactDeltaList()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstanceForString()> -> _SOURCE_
<java.util.TreeSet: java.lang.Object last()> -> _SOURCE_
<android.os.Handler: java.lang.String getMessageName(android.os.Message)> -> _SOURCE_
<java.util.TimerTask: long scheduledExecutionTime()> -> _SOURCE_
<com.android.phone.EditPhoneNumberPreference: java.lang.String getStringValue()> -> _SOURCE_
<android.widget.TextView: float getLineSpacingExtra()> -> _SOURCE_
<java.util.Date: int getMonth()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: float getDur()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERVisibleString: byte[] getOctets()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float[] mapPointFromParentToView(android.view.View,float,float)> -> _SOURCE_
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName,int)> -> _SOURCE_
<android.webkit.ByteArrayBuilder: int getByteSize()> -> _SOURCE_
<com.android.contacts.model.ContactLoader: android.net.Uri getLookupUri()> -> _SOURCE_
<java.text.DateFormat: int hashCode()> -> _SOURCE_
<android.view.Window: android.content.res.TypedArray getWindowStyle()> -> _SOURCE_
<android.telephony.CellIdentityGsm: int getMnc()> -> _SOURCE_
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])> -> _SOURCE_
<com.android.inputmethod.latin.AdditionalSubtype: android.view.inputmethod.InputMethodSubtype createAdditionalSubtype(java.lang.String)> -> _SOURCE_
<java.nio.BaseByteBuffer: char getChar()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getSubscriberId()> -> _SOURCE_
<android.provider.Settings$Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERPrintableString: byte[] getOctets()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getCity()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()> android.permission.READ_PHONE_STATE -> _SOURCE_
<java.io.FileInputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<java.io.StringWriter: java.lang.StringBuffer getBuffer()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)> -> _SOURCE_
<java.util.jar.Attributes: boolean isEmpty()> -> _SOURCE_
<com.android.music.QueryBrowserActivity: android.database.Cursor access$200(com.android.music.QueryBrowserActivity,android.content.AsyncQueryHandler,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.Utils: java.lang.String getStackTrace()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> -> _SOURCE_
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)> -> _SOURCE_
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILLayoutElement getLayout()> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: long getCSequenceNumber()> -> _SOURCE_
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.Integer getFirstRowInt(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)> -> _SOURCE_
<android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: java.lang.String getUser()> -> _SOURCE_
<android.preference.PreferenceManager: android.content.Context getContext()> -> _SOURCE_
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: byte[] getByteArray()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesReceived(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<java.nio.CharBuffer: java.lang.String toString()> -> _SOURCE_
<java.util.Formatter$FormatToken: int getPrecision()> -> _SOURCE_
<java.nio.charset.Charset: java.util.SortedMap availableCharsets()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo)> -> _SOURCE_
<libcore.io.ForwardingOs: java.net.InetAddress[] getaddrinfo(java.lang.String,libcore.io.StructAddrinfo)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.OrganizationHeader createOrganizationHeader(java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.DeliveryInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: com.android.contacts.detail.ContactDetailFragment$ViewEntry getItem(int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: long getUserActivityTimeout()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: int getOpacity()> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getNetworkId()> -> _SOURCE_
<android.content.res.TypedArray: int getInt(int,int)> -> _SOURCE_
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll()> -> _SOURCE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<gov.nist.javax.sip.header.ReasonList: java.lang.Object clone()> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<java.lang.Enum: java.lang.String toString()> -> _SOURCE_
<com.android.systemui.statusbar.policy.ToggleSlider: boolean isChecked()> -> _SOURCE_
<android.telephony.ServiceState: boolean getIsManualSelection()> -> _SOURCE_
<java.lang.BootClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> -> _SOURCE_
<com.android.contacts.group.GroupListItem: java.lang.String getAccountName()> -> _SOURCE_
<android.view.ViewGroup: android.view.View getFocusedChild()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.DayView: com.android.calendar.Event getSelectedEvent()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: int getScanMode()> -> _SOURCE_
<android.net.TrafficStats: long getMobileTxBytes()> -> _SOURCE_
<android.view.InputDevice: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker$SavedState: int getDay()> -> _SOURCE_
<com.android.mms.transaction.Transaction: byte[] getPdu(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String encode()> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<android.view.MotionEvent: android.view.InputEvent copy()> -> _SOURCE_
<java.lang.ThreadLocal$Values: java.lang.Object getAfterMiss(java.lang.ThreadLocal)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Null: com.android.org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: float getAlphaForPage(int,int)> -> _SOURCE_
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)> -> _SOURCE_
<com.android.contacts.model.Contact: int getDirectoryExportSupport()> -> _SOURCE_
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getLabel(java.lang.String)> -> _SOURCE_
<android.text.method.CharacterPickerDialog$OptionsAdapter: long getItemId(int)> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getLayerType(android.view.View)> -> _SOURCE_
<java.net.InetSocketAddress: java.lang.String getHostName()> -> _SOURCE_
<android.text.BoringLayout$Metrics: java.lang.String toString()> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: int getTextHeight()> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromQuery(android.net.Uri,android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getContent()> -> _SOURCE_
<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String)> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<android.view.View: android.view.View$ListenerInfo getListenerInfo()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.WorkSource: java.lang.String toString()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> -> _SOURCE_
<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])> -> _SOURCE_
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getSecurityMechanism()> -> _SOURCE_
<android.media.RingtoneManager: android.database.Cursor getCursor()> -> _SOURCE_
<android.widget.AbsListView: int getRightPaddingOffset()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<com.android.settings.net.NetworkPolicyEditor: long getPolicyLimitBytes(android.net.NetworkTemplate)> -> _SOURCE_
<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getName()> -> _SOURCE_
<android.accounts.AccountManagerService$Session: java.lang.String toDebugString()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)> -> _SOURCE_
<com.android.mms.ui.RecipientsEditor: java.util.List getNumbers()> -> _SOURCE_
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1StringType$7: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.PriorityHeader createPriorityHeader(java.lang.String)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: char readChar()> -> _SOURCE_
<android.content.Loader: int getId()> -> _SOURCE_
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()> -> _SOURCE_
<android.support.v13.app.FragmentPagerAdapter: android.os.Parcelable saveState()> -> _SOURCE_
<android.accounts.AuthenticatorDescription: java.lang.String toString()> -> _SOURCE_
<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()> -> _SOURCE_
<org.apache.harmony.security.x509.ExtendedKeyUsage$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.exchange.adapter.ProvisionParser: boolean getRemoteWipe()> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)> -> _SOURCE_
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByIds(java.lang.String,boolean)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getBeforeText(java.lang.Object)> -> _SOURCE_
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()> -> _SOURCE_
<com.android.internal.app.IBatteryStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()> -> _SOURCE_
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: boolean getExtendedLengthApdusSupported()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getActualState(android.content.Context)> -> _SOURCE_
<android.content.res.Resources: android.graphics.Movie getMovie(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithm()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()> -> _SOURCE_
<org.apache.http.message.BasicNameValuePair: java.lang.String toString()> -> _SOURCE_
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.camera.Storage: long getAvailableSpace()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()> -> _SOURCE_
<android.widget.OverScroller: int getCurrX()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.security.PublicKey getPublicKey()> -> _SOURCE_
<android.os.UserHandle: int getUid(int,int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: int getMaxScrollY(java.lang.Object)> -> _SOURCE_
<com.android.browser.WebStorageSizeManager$StatFsDiskInfo: long getFreeSpaceSizeBytes()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getFilename()> -> _SOURCE_
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.util.LinkedList getMessageAsEncodedStrings()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<android.text.StaticLayout: int getLineForVertical(int)> -> _SOURCE_
<com.android.calendar.DayOfMonthDrawable: int getOpacity()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<java.util.Formatter$FormatSpecifierParser: java.lang.String getFormatSpecifierText()> -> _SOURCE_
<android.location.Address: java.lang.String toString()> -> _SOURCE_
<java.util.EnumMap$Entry: java.lang.Object getValue()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()> -> _SOURCE_
<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getNewInstanceForTest(android.content.Context)> -> _SOURCE_
<com.android.contacts.model.Contact: byte[] getPhotoBinaryData()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getFirstChild()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: byte[] getId()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getAdjustedDoubleTapZoom(int)> -> _SOURCE_
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getContactId()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: int getHeight()> -> _SOURCE_
<android.preference.PreferenceActivity$Header: java.lang.CharSequence getTitle(android.content.res.Resources)> -> _SOURCE_
<com.google.android.mms.util.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V40: java.util.Set getKnownPropertyNameSet()> -> _SOURCE_
<com.android.contacts.model.Contact: long getNameRawContactId()> -> _SOURCE_
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()> -> _SOURCE_
<gov.nist.javax.sip.header.Expires: int getExpires()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskReads()> -> _SOURCE_
<java.net.JarURLConnection: java.util.jar.Manifest getManifest()> -> _SOURCE_
<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)> -> _SOURCE_
<java.util.MissingFormatWidthException: java.lang.String getMessage()> -> _SOURCE_
<android.app.Activity: int getVolumeControlStream()> -> _SOURCE_
<android.app.ContextImpl: android.content.res.Resources getResources()> -> _SOURCE_
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> _SOURCE_
<java.util.AbstractMap: java.lang.Object clone()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getDataScheme(int)> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getFormattedString()> -> _SOURCE_
<android.webkit.WebStorageClassic: android.webkit.WebStorageClassic getInstance()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getExtendedHeaders()> -> _SOURCE_
<android.net.WebAddress: java.lang.String getScheme()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getFuzz()> -> _SOURCE_
<android.preference.MultiCheckPreference: java.lang.CharSequence[] getEntries()> -> _SOURCE_
<android.telephony.CellIdentityLte: int getTac()> -> _SOURCE_
<android.text.Layout: int getLineAscent(int)> -> _SOURCE_
<android.text.util.Rfc822Token: java.lang.String toString()> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.Provider getProvider()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferInitialSize()> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemObject: com.android.org.bouncycastle.util.io.pem.PemObject generate()> -> _SOURCE_
<com.android.inputmethod.latin.InputPointers: int getPointerSize()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()> -> _SOURCE_
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getSearchLight()> -> _SOURCE_
<com.android.emailcommon.provider.Policy: long getDPManagerPasswordExpirationTimeout()> -> _SOURCE_
<android.mtp.MtpStorage: java.lang.String getDescription()> -> _SOURCE_
<com.google.common.base.Joiner$3: java.lang.Object get(int)> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String[] environ()> -> _SOURCE_
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.camera.ActivityBase: int getResultCode()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: java.lang.String toString()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.ims.IsimRecords getIsimRecords()> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: int getPartsNum()> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()> -> _SOURCE_
<android.graphics.Bitmap: int getHeight()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: java.lang.String getDestinationLabel()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesSent(int)> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: java.lang.String getSelectedContactLookupKey()> -> _SOURCE_
<android.preference.RingtonePreference: boolean getShowSilent()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: com.android.settings.widget.ChartAxis getAxis()> -> _SOURCE_
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()> -> _SOURCE_
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getPlayVoicemailIntentProvider(long,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.Connection: java.lang.String toString()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V40: java.lang.String getVersionString()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts(int)> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPart(int)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getContainerId()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String encodeBody()> -> _SOURCE_
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)> -> _SOURCE_
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.content.ContentResolver access$500(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()> -> _SOURCE_
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)> -> _SOURCE_
<java.text.Collator: java.lang.Object clone()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialogErrorEvent: int getErrorID()> -> _SOURCE_
<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: int getMaxDisplayPhotoDim()> -> _SOURCE_
<com.android.internal.telephony.Call: long getEarliestCreateTime()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.vcard.VCardEntry$NoteData: java.lang.String getNote()> -> _SOURCE_
<android.emoji.EmojiFactory: int getMaximumAndroidPua()> -> _SOURCE_
<android.widget.TextView$Marquee: float getGhostOffset()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getMediaPlaybackRequiresUserGesture()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AlertException: byte getDescriptionCode()> -> _SOURCE_
<com.android.server.am.ActivityRecord: long getKeyDispatchingTimeout()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: int getEngineContext()> -> _SOURCE_
<java.net.DatagramSocket: int getPort()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable getIconDrawable()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)> -> _SOURCE_
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)> -> _SOURCE_
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()> -> _SOURCE_
<android.speech.tts.ITextToSpeechCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPacketBufferSize()> -> _SOURCE_
<java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()> -> _SOURCE_
<com.android.exchange.EasResponse: int getLength()> -> _SOURCE_
<android.os.Environment: java.io.File getEmulatedStorageSource(int)> -> _SOURCE_
<android.net.Uri$Part: java.lang.String getEncoded()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> -> _SOURCE_
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric()> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: long getPhotoFileId()> -> _SOURCE_
<com.android.mms.ui.UriImage: java.lang.String getPath()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.MANAGE_ACCOUNTS -> _SOURCE_
<android.widget.RemoteViews$MemoryUsageCounter: int getMemoryUsage()> -> _SOURCE_
<java.util.HashMap: java.util.Collection values()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> -> _SOURCE_
<com.android.mms.transaction.DefaultRetryScheme: long getWaitingInterval()> -> _SOURCE_
<com.android.calendar.CalendarController: int getPreviousViewType()> -> _SOURCE_
<android.hardware.SensorManager: int getSensors()> -> _SOURCE_
<java.io.FilterReader: long skip(long)> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()> -> _SOURCE_
<com.android.camera.ComboPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)> -> _SOURCE_
<java.util.TimeZone: java.lang.String[] getAvailableIDs()> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<com.android.browser.provider.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()> -> _SOURCE_
<android.view.InputEvent$1: android.view.InputEvent createFromParcel(android.os.Parcel)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseReturnType()> -> _SOURCE_
<android.graphics.Interpolator: int getKeyFrameCount()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(boolean,javax.net.ssl.KeyManager)> -> _SOURCE_
<android.view.MotionEvent: float getPressure()> -> _SOURCE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getUserAtHostPort()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagNameNS(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isDataConnectivityPossible(java.lang.String)> -> _SOURCE_
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<java.lang.Class: java.lang.Class[] getDeclaredClasses()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: long getGroupId(int)> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<android.app.Activity: int getRequestedOrientation()> -> _SOURCE_
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray()> -> _SOURCE_
<android.content.pm.PackageInfo: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoPriorityResolver createPhotoPriorityResolver(android.content.Context)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.ParseException generateParseException()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()> -> _SOURCE_
<com.android.browser.Preloader$PreloaderSession: com.android.browser.PreloadedTabControl getTabControl()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getPatternSeparator()> -> _SOURCE_
<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String,java.lang.String)> -> _SOURCE_
<android.os.Environment: java.io.File getUserSystemDirectory(int)> -> _SOURCE_
<org.apache.http.message.BufferedHeader: java.lang.String getValue()> -> _SOURCE_
<android.net.wifi.WifiManager$MulticastLock: java.lang.String toString()> -> _SOURCE_
<java.net.URL: java.net.URI toURILenient()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)> -> _SOURCE_
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()> -> _SOURCE_
<java.util.Date: int getHours()> -> _SOURCE_
<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: android.app.PendingIntent getReconnectIntentSync()> -> _SOURCE_
<com.google.common.base.Ticker: com.google.common.base.Ticker systemTicker()> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: java.io.ObjectStreamClass getObjectStreamClass()> -> _SOURCE_
<android.content.pm.IPackageDataObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)> -> _SOURCE_
<javax.sip.IOExceptionEvent: int getPort()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getBlockSize()> -> _SOURCE_
<com.android.contacts.list.ContactTileListFragment$2: int getApproximateTileWidth()> -> _SOURCE_
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesReceived(int)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent(java.lang.Class[])> -> _SOURCE_
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.util.TypedValue: float getFraction(float,float)> -> _SOURCE_
<android.drm.DrmUtils$ExtendedMetadataParser: java.lang.String get(java.lang.String)> -> _SOURCE_
<java.nio.ShortArrayBuffer: java.nio.ShortBuffer get(short[],int,int)> -> _SOURCE_
<java.io.File: java.io.File getCanonicalFile()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtree: org.apache.harmony.security.x509.GeneralName getBase()> -> _SOURCE_
<android.view.View: android.view.ViewRootImpl getViewRootImpl()> -> _SOURCE_
<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.security.Principal getSubjectDN()> -> _SOURCE_
<java.nio.FloatArrayBuffer: java.nio.FloatBuffer get(float[],int,int)> -> _SOURCE_
<com.android.music.MusicUtils: long getCurrentArtistId()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: java.lang.String getContactDisplayName(int)> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> -> _SOURCE_
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)> -> _SOURCE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getLocalId()> -> _SOURCE_
<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)> -> _SOURCE_
<android.text.Layout: android.text.Layout$Alignment getAlignment()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: java.lang.String[] getActiveApnTypes()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.util.Iterator iterator()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$Divider: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)> -> _SOURCE_
<com.android.providers.contacts.DataRowHandler: int getTypeRank(int)> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering nullsLast()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getSelectedInputMethod()> -> _SOURCE_
<com.android.contacts.ContactPhotoManagerImpl$Request: android.net.Uri getUri()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getBackgroundCall()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumWidth()> -> _SOURCE_
<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher$Status getProviderStatus()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getCipherSuite()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$KindParser: java.util.List parseDataKindTag(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)> -> _SOURCE_
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)> -> _SOURCE_
<android.nfc.NdefRecord: short getTnf()> -> _SOURCE_
<android.media.MediaRouter$RouteGroup: java.lang.String toString()> -> _SOURCE_
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()> -> _SOURCE_
<com.android.camera.ui.IndicatorControlWheelContainer: android.view.View getActiveSettingPopup()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginColumn()> -> _SOURCE_
<android.test.mock.MockContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)> -> _SOURCE_
<android.database.AbstractCursor: byte[] getBlob(int)> -> _SOURCE_
<android.widget.TextView: boolean getIncludeFontPadding()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.util.List getCertStores()> -> _SOURCE_
<com.android.settings.DateTimeSettings: java.lang.String getTimeZoneText(java.util.TimeZone)> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)> -> _SOURCE_
<android.content.SyncStorageEngine: int getSyncRandomOffset()> -> _SOURCE_
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> -> _SOURCE_
<java.net.Socket: boolean getKeepAlive()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: int getLength()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String faviconUri()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getImei()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.gsm.SimSmsInterfaceManager)> -> _SOURCE_
<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)> android.permission.READ_SMS -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: long getCompletedTaskCount()> -> _SOURCE_
<com.android.internal.app.AlertController: android.widget.ListView getListView()> -> _SOURCE_
<org.xml.sax.InputSource: java.lang.String getEncoding()> -> _SOURCE_
<android.filterfw.core.Filter: java.lang.String getFilterClassName()> -> _SOURCE_
<android.webkit.HTML5VideoInline: int getTextureName()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getResponse()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine: java.lang.CharSequence getLabel()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminForCallerLocked(android.content.ComponentName,int)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getNumColumnInRow(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.IdentityDataItem: java.lang.String getNamespace()> -> _SOURCE_
<java.lang.reflect.Array: byte getByte(java.lang.Object,int)> -> _SOURCE_
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)> -> _SOURCE_
<com.android.providers.settings.SettingsHelper: byte[] getLocaleData()> -> _SOURCE_
<com.android.mms.dom.NamedNodeMapImpl: org.w3c.dom.Node getNamedItem(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServiceClassName()> -> _SOURCE_
<org.apache.http.message.BufferedHeader: java.lang.String toString()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.android.mms.model.LayoutModel getLayout()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.animation.ObjectAnimator: android.animation.Animator clone()> -> _SOURCE_
<android.app.Fragment: int getTargetRequestCode()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getInputEncoding()> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.HeaderIterator headerIterator(java.lang.String)> -> _SOURCE_
<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()> -> _SOURCE_
<com.android.mms.ui.PresenterFactory: com.android.mms.ui.Presenter getPresenter(java.lang.String,android.content.Context,com.android.mms.ui.ViewInterface,com.android.mms.model.Model)> -> _SOURCE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.location.Geofence: float getRadius()> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)> -> _SOURCE_
<java.nio.LongToByteBufferAdapter: long get(int)> -> _SOURCE_
<java.math.BigDecimal: float floatValue()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String[] getActiveApnTypes()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String rawString()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])> -> _SOURCE_
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)> -> _SOURCE_
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.SupportedHeader createSupportedHeader(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getNavigationItemCount()> -> _SOURCE_
<com.android.deskclock.Alarms: boolean get24HourMode(android.content.Context)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.Long getId()> -> _SOURCE_
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)> -> _SOURCE_
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()> -> _SOURCE_
<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String,long)> -> _SOURCE_
<android.animation.LayoutTransition: long getStartDelay(int)> -> _SOURCE_
<android.widget.Toast: int getGravity()> -> _SOURCE_
<android.widget.RemoteViews: int getLayoutId()> -> _SOURCE_
<android.nfc.Tag: int getServiceHandle()> -> _SOURCE_
<android.app.backup.IBackupManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup: java.lang.String getLocalProfileUri()> -> _SOURCE_
<com.google.common.collect.Maps$KeySet: java.util.Iterator iterator()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetName(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: int getDirectorySearchMode()> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: int getType()> -> _SOURCE_
<android.app.Activity: java.lang.String getCallingPackage()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: int getDataConnectionId()> -> _SOURCE_
<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas getNextPoolable()> -> _SOURCE_
<com.android.camera.ActivityBase: android.content.Intent getResultData()> -> _SOURCE_
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageCodePath()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()> -> _SOURCE_
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNodeName()> -> _SOURCE_
<android.webkit.WebView$HitTestResult: java.lang.String getExtra()> -> _SOURCE_
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.security.x509.PolicyInformation: java.lang.String getPolicyIdentifier()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean)> -> _SOURCE_
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)> -> _SOURCE_
<com.android.contacts.list.DirectoryPartition: long getDirectoryId()> -> _SOURCE_
<android.webkit.ZoomManager: float getReadingLevelScale()> -> _SOURCE_
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()> -> _SOURCE_
<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<java.util.ResourceBundle$Control: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getFormats()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.lang.String getSortKey(java.lang.String)> -> _SOURCE_
<java.net.ServerSocket: int getLocalPort()> -> _SOURCE_
<java.util.Vector: java.lang.Object[] toArray()> -> _SOURCE_
<com.android.internal.telephony.IccUtils: byte[] hexStringToBytes(java.lang.String)> -> _SOURCE_
<java.nio.charset.UnmappableCharacterException: int getInputLength()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getFocusY()> -> _SOURCE_
<android.view.View: android.os.Handler getHandler()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotBefore()> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: long getItemId(int)> -> _SOURCE_
<java.security.Provider$Service: java.lang.String getType()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<java.nio.HeapByteBuffer: byte get(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getTcpNoDelay()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandler(java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.smil.TimeList getBegin()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: org.w3c.dom.smil.TimeList getEnd()> -> _SOURCE_
<android.location.Criteria: int getPowerRequirement()> -> _SOURCE_
<java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> -> _SOURCE_
<com.android.systemui.statusbar.BaseStatusBar: com.android.internal.statusbar.IStatusBarService getStatusBarService()> -> _SOURCE_
<android.net.DummyDataStateTracker: java.lang.String toString()> -> _SOURCE_
<android.os.Environment: java.io.File getEmulatedStorageObbSource()> -> _SOURCE_
<java.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()> -> _SOURCE_
<android.widget.GridLayout: boolean getUseDefaultMargins()> -> _SOURCE_
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()> -> _SOURCE_
<java.net.SocketPermission: java.lang.String getActions()> -> _SOURCE_
<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: android.content.Context getContext()> -> _SOURCE_
<com.android.exchange.EasOutboxService$SendMailParser: int getStatus()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: long getSelectedContactId()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$000(com.android.internal.telephony.cdma.RuimRecords)> -> _SOURCE_
<android.text.util.Rfc822Token: java.lang.String getAddress()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)> -> _SOURCE_
<android.os.Bundle: java.lang.String getPairValue()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getRingerMode()> -> _SOURCE_
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs()> -> _SOURCE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()> -> _SOURCE_
<com.android.settings.accounts.AccountPreferenceBase: java.util.ArrayList getAuthoritiesForAccountType(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: byte[] getBytes(int)> -> _SOURCE_
<android.os.IHardwareService$Stub$Proxy: boolean getFlashlightEnabled()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getGroupRowId()> -> _SOURCE_
<java.text.ChoiceFormat: double[] getLimits()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean getIccRecordsLoaded()> -> _SOURCE_
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getIsdnSubaddress()> -> _SOURCE_
<android.content.pm.PackageParser$Component: android.content.ComponentName getComponentName()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.PPreferredServiceHeader createPPreferredServiceHeader()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByVersion(byte[])> -> _SOURCE_
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> -> _SOURCE_
<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()> -> _SOURCE_
<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()> -> _SOURCE_
<java.security.AlgorithmParameters: java.security.Provider getProvider()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: long getDownTime()> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: java.lang.String getSchemeString(java.lang.String,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)> -> _SOURCE_
<libcore.icu.TimeZones: java.lang.String[][] getZoneStrings(java.util.Locale)> -> _SOURCE_
<java.util.WeakHashMap: java.util.WeakHashMap$Entry getEntry(java.lang.Object)> -> _SOURCE_
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.view.animation.GridLayoutAnimationController: int getDirection()> -> _SOURCE_
<android.app.SearchableInfo: int getSearchButtonText()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: java.lang.String toString()> -> _SOURCE_
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> -> _SOURCE_
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getWantClientAuth()> -> _SOURCE_
<android.view.View: android.view.View getRootView()> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfacePairs()> -> _SOURCE_
<android.text.method.CharacterPickerDialog$OptionsAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.animation.Keyframe$FloatKeyframe: float getFloatValue()> -> _SOURCE_
<android.preference.GenericInflater: android.preference.GenericInflater$Factory getFactory()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.lang.String getTime()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()> -> _SOURCE_
<com.android.browser.AutofillHandler: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)> -> _SOURCE_
<android.location.INetInitiatedListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()> -> _SOURCE_
<com.android.ex.chips.RecipientAlternatesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()> -> _SOURCE_
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()> -> _SOURCE_
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.String toGenericString()> -> _SOURCE_
<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getViewTypeCount()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getDomain()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgName()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getFragment()> -> _SOURCE_
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()> -> _SOURCE_
<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)> android.permission.CHANGE_NETWORK_STATE -> _SOURCE_
<android.media.AudioService$SetModeDeathHandler: int getMode()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.Thread getFirstQueuedThread()> -> _SOURCE_
<com.google.common.primitives.Booleans$BooleanArrayAsList: java.lang.Boolean get(int)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxZoom()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> -> _SOURCE_
<gov.nist.core.Host: java.lang.String getAddress()> -> _SOURCE_
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()> -> _SOURCE_
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<android.net.http.Request: android.net.http.EventHandler getEventHandler()> -> _SOURCE_
<android.location.Address: java.lang.String getThoroughfare()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.lang.String toString()> -> _SOURCE_
<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkType()> -> _SOURCE_
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$SimpleInflater: java.lang.String getColumnNameForTest()> -> _SOURCE_
<gov.nist.javax.sip.header.ErrorInfo: java.lang.Object clone()> -> _SOURCE_
<android.inputmethodservice.Keyboard: java.util.List getKeys()> -> _SOURCE_
<com.android.contacts.list.JoinContactListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()> -> _SOURCE_
<com.android.mms.dom.smil.ElementSequentialTimeContainerImpl: float getDur()> -> _SOURCE_
<android.content.Intent: android.net.Uri getData()> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.List getPeriodicSyncs(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.DHParameters: byte[] getPrime()> -> _SOURCE_
<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: float getScale()> -> _SOURCE_
<com.google.common.collect.BstModificationResult: com.google.common.collect.BstModificationResult$ModificationType getType()> -> _SOURCE_
<com.android.contacts.calllog.CallTypeIconsView: int getCount()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()> -> _SOURCE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()> -> _SOURCE_
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()> -> _SOURCE_
<android.view.MotionEvent: int getActionMasked()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils$DefaultImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getHeight()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getType()> -> _SOURCE_
<com.android.emailcommon.internet.MimeHeader: java.lang.String[] getHeader(java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoip()> -> _SOURCE_
<gov.nist.javax.sip.header.ProxyAuthenticate: javax.sip.address.URI getURI()> -> _SOURCE_
<android.net.Uri$OpaqueUri: int getPort()> -> _SOURCE_
<android.webkit.HTML5VideoInline: android.graphics.SurfaceTexture getSurfaceTexture(int)> -> _SOURCE_
<android.bluetooth.IBluetoothPan$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.calendar.AsyncQueryServiceHelper: com.android.calendar.AsyncQueryService$Operation getLastCancelableOperation()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> -> _SOURCE_
<com.google.common.collect.TransformedImmutableList: com.google.common.collect.ImmutableList subList(int,int)> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxImageHeight()> -> _SOURCE_
<android.preference.MultiCheckPreference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.contacts.calllog.CallLogAdapter: java.lang.String getBetterNumberFromContacts(java.lang.String,java.lang.String)> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()> -> _SOURCE_
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,long,java.util.Map)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingLeft()> -> _SOURCE_
<android.opengl.EGLObjectHandle: int getHandle()> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: java.lang.String toString()> -> _SOURCE_
<android.content.ClipData: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getHeaderAsFormattedString(java.lang.String)> -> _SOURCE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()> -> _SOURCE_
<com.android.server.am.CompatModePackages: boolean getFrontActivityAskCompatModeLocked()> -> _SOURCE_
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)> -> _SOURCE_
<android.opengl.ManagedEGLContext: javax.microedition.khronos.egl.EGLContext getContext()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.google.common.base.Equivalence: com.google.common.base.Equivalence pairwise()> -> _SOURCE_
<android.os.Environment: java.io.File getDownloadCacheDirectory()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetHost$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.preference.PreferenceActivity: android.preference.PreferenceActivity$Header onGetNewHeader()> -> _SOURCE_
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)> -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost getTargetHost()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)> -> _SOURCE_
<android.view.View: android.view.DisplayList getDisplayList()> -> _SOURCE_
<android.widget.TextView: int getLineHeight()> -> _SOURCE_
<java.util.concurrent.Executors$DelegatedExecutorService: java.util.List shutdownNow()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getAvailableNetworks(android.os.Message)> -> _SOURCE_
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)> -> _SOURCE_
<com.android.internal.telephony.Call: boolean isDialingOrAlerting()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String toString()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.DefaultMapStorage: int getPrefix(int)> -> _SOURCE_
<android.support.v4.view.ViewCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()> -> _SOURCE_
<java.util.IllegalFormatWidthException: java.lang.String getMessage()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getScrollX(java.lang.Object)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getMimeType()> -> _SOURCE_
<com.android.mms.ui.QuickContactDivot: android.widget.ImageView asImageView()> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()> -> _SOURCE_
<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity: java.lang.String getAndClearFilterText()> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Map asMap()> -> _SOURCE_
<com.android.mms.model.ImageModel: int getHeight()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedIdentity: java.lang.Object clone()> -> _SOURCE_
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()> -> _SOURCE_
<android.text.style.BackgroundColorSpan: int getBackgroundColor()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)> -> _SOURCE_
<android.preference.DialogPreference: android.view.View onCreateDialogView()> -> _SOURCE_
<dalvik.system.CloseGuard: dalvik.system.CloseGuard$Reporter getReporter()> -> _SOURCE_
<android.text.Layout: float getSpacingMultiplier()> -> _SOURCE_
<android.telephony.CellInfoGsm: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getDatabasePath()> -> _SOURCE_
<com.android.providers.media.RingtonePickerActivity: android.database.Cursor access$200(com.android.providers.media.RingtonePickerActivity)> -> _SOURCE_
<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()> -> _SOURCE_
<com.android.settings.Settings: android.content.Intent getIntent()> -> _SOURCE_
<android.content.SyncResult: java.lang.String toString()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: int getLeft()> -> _SOURCE_
<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener getListener()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl: byte[] getSessionData(java.lang.String,int)> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getFragment()> -> _SOURCE_
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaPrlVersion()> -> _SOURCE_
<android.os.UserManager: boolean isGuestEnabled()> -> _SOURCE_
<android.os.Bundle: boolean isEmpty()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndLine()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker: int getYear()> -> _SOURCE_
<android.filterfw.geometry.Quad: float getBoundingWidth()> -> _SOURCE_
<com.android.mms.transaction.RetryScheduler: com.android.mms.transaction.RetryScheduler getInstance(android.content.Context)> -> _SOURCE_
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()> -> _SOURCE_
<com.android.browser.AutoFillProfileDatabase: android.database.Cursor getProfile(int)> -> _SOURCE_
<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getOutgoingCallerIdDisplay(android.os.Message)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPacketSourcePort()> -> _SOURCE_
<com.android.contacts.datepicker.DatePickerDialog: android.os.Bundle onSaveInstanceState()> -> _SOURCE_
<android.telephony.TelephonyManager: int getNetworkClass(int)> -> _SOURCE_
<android.filterfw.GraphEnvironment: android.filterfw.core.FilterGraph getGraph(int)> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: boolean isEmpty()> -> _SOURCE_
<java.nio.DirectByteBuffer: float getFloat(int)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetPosition(int)> -> _SOURCE_
<com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)> -> _SOURCE_
<android.content.Intent: java.lang.Object getExtra(java.lang.String)> -> _SOURCE_
<com.android.ex.chips.RecipientAlternatesAdapter: java.util.HashMap getMatchingRecipients(android.content.Context,java.util.ArrayList)> -> _SOURCE_
<com.android.browser.PieControl$TabAdapter: int getCount()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalPss()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.WRITE_SOCIAL_STREAM -> _SOURCE_
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryAdapter: long getChildId(int,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTF8String: java.lang.String getString()> -> _SOURCE_
<com.android.camera.ListPreference: java.lang.String getKey()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<android.support.v4.view.ViewPager: int getPageMargin()> -> _SOURCE_
<com.google.common.collect.TransformedImmutableList$1: java.lang.Object get(int)> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountTypeForAccount(com.android.contacts.model.account.AccountWithDataSet)> -> _SOURCE_
<android.widget.VideoView: int getDuration()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()> -> _SOURCE_
<android.database.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: android.os.Handler access$1900(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<java.util.UUID: long node()> -> _SOURCE_
<com.google.common.collect.DiscreteDomain: java.lang.Comparable minValue()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getResponse()> -> _SOURCE_
<android.app.AlertDialog: android.widget.Button getButton(int)> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwuid(int)> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.TreeMultiset$5: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int)> -> _SOURCE_
<android.webkit.WebBackForwardList: int getSize()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppState getState()> -> _SOURCE_
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getDefaultPhone()> -> _SOURCE_
<com.android.browser.search.DefaultSearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale,java.lang.String)> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$MakeCallCommand: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayCountry()> -> _SOURCE_
<android.widget.ImageView: boolean getCropToPadding()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String toString()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.DERBitString getPublicKeyData()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getQuery()> -> _SOURCE_
<org.apache.harmony.security.x509.Validity: byte[] getEncoded()> -> _SOURCE_
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)> -> _SOURCE_
<android.net.LinkCapabilities: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedCollection: java.lang.Object getKey()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])> -> _SOURCE_
<java.net.Authenticator: java.lang.String getRequestingScheme()> -> _SOURCE_
<android.view.animation.Animation: float resolveSize(int,float,int,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getDataSize(int)> -> _SOURCE_
<com.android.calendar.CalendarEventModel$ReminderEntry: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getKey()> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object removeAttribute(java.lang.String)> -> _SOURCE_
<android.net.sip.SipProfile: int getPort()> -> _SOURCE_
<android.app.WallpaperInfo: android.content.ComponentName getComponent()> -> _SOURCE_
<com.android.contacts.detail.PhotoSelectionHandler: com.android.contacts.model.RawContactDeltaList getDeltaForAttachingPhotoToContact()> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.Class forClass()> -> _SOURCE_
<android.os.Debug: int getGlobalExternalAllocCount()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataCallState$SetupResult access$1600(com.android.internal.telephony.DataConnection,android.os.AsyncResult)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getMiddleDisplayName(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getChildOffset(int)> -> _SOURCE_
<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCallTracker: boolean getMute()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getAddress()> -> _SOURCE_
<com.android.calendar.DayView: int getEventsAlpha()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: int getType()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> -> _SOURCE_
<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.AppInterface getInstance()> -> _SOURCE_
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()> -> _SOURCE_
<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getVolumeMax()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeyDivider: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)> -> _SOURCE_
<com.google.common.io.ByteStreams: long getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getApnSetting()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()> -> _SOURCE_
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()> -> _SOURCE_
<com.android.internal.database.SortCursor: double getDouble(int)> -> _SOURCE_
<java.util.Vector: java.lang.Object firstElement()> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getKey()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getNextNonce()> -> _SOURCE_
<java.net.Authenticator: java.lang.String getRequestingProtocol()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getItemCount(java.lang.Object)> -> _SOURCE_
<java.math.BigInteger: java.math.BigInteger copy()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()> -> _SOURCE_
<com.android.contacts.list.ContactTileListFragment$1: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: java.lang.ThreadLocal getTransactionHolder()> -> _SOURCE_
<android.media.IAudioFocusDispatcher$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getMediaModel(android.content.Context,org.w3c.dom.smil.SMILMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduBody)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()> -> _SOURCE_
<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()> -> _SOURCE_
<java.util.IllegalFormatCodePointException: java.lang.String getMessage()> -> _SOURCE_
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()> -> _SOURCE_
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()> -> _SOURCE_
<com.android.exchange.ExchangeService$AccountObserver: java.lang.String getSyncableEasMailboxWhere()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getDefaultLinkPrefetchSetting()> -> _SOURCE_
<com.android.calendar.month.SimpleDayPickerFragment: long getSelectedTime()> -> _SOURCE_
<java.security.cert.PKIXParameters: boolean getPolicyQualifiersRejected()> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)> -> _SOURCE_
<com.android.calendar.AllInOneActivity: long getSupportedEventTypes()> -> _SOURCE_
<java.security.cert.CertPathValidatorException: int getIndex()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificatePolicies: org.apache.harmony.security.x509.CertificatePolicies addPolicyInformation(org.apache.harmony.security.x509.PolicyInformation)> -> _SOURCE_
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.validation.Schema getSchema()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: byte[] getSigAlgParams()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: int getFrequency()> -> _SOURCE_
<android.net.http.RequestHandle: java.lang.String getMethod()> -> _SOURCE_
<com.android.settings.SoundSettings: int getHelpResource()> -> _SOURCE_
<java.util.zip.ZipEntry: long getTime()> -> _SOURCE_
<android.view.KeyEvent: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Keyboard build()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Collection createEntries()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> -> _SOURCE_
<com.android.browser.PieControl: com.android.browser.view.PieItem makeItem(int,int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getNextPage()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String toString()> -> _SOURCE_
<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()> -> _SOURCE_
<java.net.Socks4Message: java.lang.String getUserId()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getContentType()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: short getRestart()> -> _SOURCE_
<android.widget.TextView: int getMinWidth()> -> _SOURCE_
<com.android.mms.data.Contact: com.android.mms.data.Contact getMe(boolean)> -> _SOURCE_
<android.os.Debug: java.lang.String getCaller()> -> _SOURCE_
<com.android.browser.BaseUi: android.view.Menu getMenu()> -> _SOURCE_
<com.android.mms.transaction.MessagingNotification: long getThreadId(android.content.Context,android.net.Uri)> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetProvider: android.content.Intent getLaunchFillInIntent(android.content.Context,long,long,long,boolean)> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)> -> _SOURCE_
<android.filterfw.core.OutputPort: android.filterfw.core.Frame pullFrame()> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()> -> _SOURCE_
<java.util.GregorianCalendar: int getMaximum(int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: double getOffsetTime()> -> _SOURCE_
<com.android.deskclock.Alarms: com.android.deskclock.Alarm getAlarm(android.content.ContentResolver,int)> -> _SOURCE_
<java.security.cert.CertPathValidator: java.lang.String getDefaultType()> -> _SOURCE_
<java.io.RandomAccessFile: long length()> -> _SOURCE_
<android.hardware.SensorManager: java.util.List getSensorList(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Element getElementById(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()> -> _SOURCE_
<com.android.server.power.PowerManagerService: boolean isScreenOn()> -> _SOURCE_
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: java.lang.Thread getOwner()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.PublicKey getPublicKey()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.content.ClipData$Item: java.lang.String getHtmlText()> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationVendor()> -> _SOURCE_
<org.xml.sax.helpers.LocatorImpl: java.lang.String getSystemId()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)> -> _SOURCE_
<com.android.browser.BreadCrumbView: int getBaseline()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.lang.String getDefaultEncoding()> -> _SOURCE_
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String getPrefix(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable)> -> _SOURCE_
<android.net.LocalSocketAddress$Namespace: int getId()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: long getUtcAllDayCalendarTime(long,java.util.TimeZone)> -> _SOURCE_
<com.android.providers.downloads.Helpers: java.lang.String getFullPath(java.lang.String,java.lang.String,int,java.io.File)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object removeLast()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object)> -> _SOURCE_
<java.lang.System: java.lang.SecurityManager getSecurityManager()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getName()> -> _SOURCE_
<android.telephony.TelephonyManager: int getVoiceMessageCount()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPrefix()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: float getFloat(int)> -> _SOURCE_
<com.android.contacts.util.AccountsListAdapter: com.android.contacts.model.account.AccountWithDataSet getItem(int)> -> _SOURCE_
<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getMinimumLogicalFontSize()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()> -> _SOURCE_
<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getLatestVersion(java.lang.String[])> -> _SOURCE_
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()> -> _SOURCE_
<java.math.MathContext: java.lang.String toString()> -> _SOURCE_
<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)> -> _SOURCE_
<java.util.concurrent.Semaphore: int getQueueLength()> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmAsuLevel()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$DayAdapterInfo getAdapterInfoByPosition(int)> -> _SOURCE_
<android.app.WallpaperManager: int getDesiredMinimumHeight()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: long getHoldDurationMillis()> -> _SOURCE_
<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: java.lang.String getRemainingPostDialString()> -> _SOURCE_
<gov.nist.javax.sip.header.Reason: java.lang.String getText()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getFantasyFontFamily()> -> _SOURCE_
<android.os.Debug: java.lang.String[] getVmFeatureList()> -> _SOURCE_
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<java.util.Calendar: java.util.Map getDisplayNames(int,int,java.util.Locale)> -> _SOURCE_
<org.apache.http.entity.StringEntity: java.lang.Object clone()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> android.permission.BLUETOOTH -> _SOURCE_|BLUETOOTH_INFORMATION
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getFamily()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> -> _SOURCE_
<android.content.Entity: java.util.ArrayList getSubValues()> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: java.lang.String getLabel()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.ReferencesHeader createReferencesHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)> -> _SOURCE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString(boolean)> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWriteHoldCount()> -> _SOURCE_
<android.widget.AdapterView: int getFirstVisiblePosition()> -> _SOURCE_
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> -> _SOURCE_
<android.view.View: int getDrawingCacheBackgroundColor()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> -> _SOURCE_
<android.view.ScaleGestureDetector: float getPreviousSpanX()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: java.lang.String getName()> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<com.android.internal.util.JournaledFile: java.io.File chooseForRead()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAddress()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getItemViewType(int,int)> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getOtherPss(int)> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()> -> _SOURCE_
<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.phone.CallNotifier: boolean getVoicePrivacyState()> -> _SOURCE_
<android.filterfw.core.Filter: int getNumberOfOutputs()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getMeid()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)> -> _SOURCE_
<com.android.internal.telephony.SMSDispatcher: int getNextConcatenatedRef()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntry: int getViewType()> -> _SOURCE_
<com.android.settings.widget.ChartNetworkSeriesView: long getMaxEstimate()> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String getTempFileName(java.lang.String,android.content.Context)> -> _SOURCE_
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.Dialog getDialog()> -> _SOURCE_
<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: org.w3c.dom.smil.ElementTime getElement()> -> _SOURCE_
<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties getProperties()> -> _SOURCE_
<com.google.common.collect.Ordering: com.google.common.collect.Ordering lexicographical()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardView: float getLabelWidth(java.lang.String,android.graphics.Paint)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageProcessor,javax.sip.address.Hop)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<android.app.ProgressDialog: int getMax()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()> -> _SOURCE_
<com.android.emailcommon.internet.MimeUtility: java.lang.String getHeaderParameter(java.lang.String,java.lang.String)> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)> -> _SOURCE_
<android.view.View: int getFadeTop(boolean)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: boolean isBouncing()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: int getPort()> -> _SOURCE_
<com.google.common.base.Optional: com.google.common.base.Optional absent()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardRow: int getKeyY()> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider$3: android.content.Intent getIntent(android.content.Context)> -> _SOURCE_
<com.google.common.collect.ImmutableMultiset: java.lang.Object writeReplace()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: int getMediaMountedCount()> -> _SOURCE_
<com.android.contacts.list.DirectoryPartition: int getStatus()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: java.lang.CharSequence getAddToDictionaryWord()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()> -> _SOURCE_
<org.apache.harmony.security.x509.CRLNumber: java.math.BigInteger getNumber()> -> _SOURCE_
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> -> _SOURCE_
<java.util.LinkedList: java.lang.Object pop()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.util.Iterator getRouteSet()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getResponseType()> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: java.lang.Object clone()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: int getIndex(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List subList(int,int)> -> _SOURCE_
<org.json.JSONObject: java.lang.Object get(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: byte[] getEncoded()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()> -> _SOURCE_
<com.android.exchange.EasOutboxService$SendMailEntity: long getContentLength()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Object: byte[] getEncoded(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDefaultDreamComponent()> -> _SOURCE_
<java.lang.String: byte[] getBytes()> -> _SOURCE_
<org.apache.harmony.security.x509.InfoAccessSyntax: java.lang.String toString()> -> _SOURCE_
<android.net.WebAddress: java.lang.String getHost()> -> _SOURCE_
<com.android.internal.view.IInputMethodSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.providers.downloads.RealSystemFacade: java.lang.Long getMaxBytesOverMobile()> -> _SOURCE_
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponents()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getColumnCount()> -> _SOURCE_
<com.android.internal.app.AlertController: android.widget.Button getButton(int)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()> -> _SOURCE_
<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)> -> _SOURCE_
<android.telephony.SmsMessage: boolean isEmail()> -> _SOURCE_
<android.bluetooth.BluetoothClass: int getDeviceClass()> -> _SOURCE_
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: java.lang.Object clone()> -> _SOURCE_
<com.google.android.mms.pdu.AcknowledgeInd: int getReportAllowed()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingBottom()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ClientTransaction getNewClientTransaction(javax.sip.message.Request)> -> _SOURCE_
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: boolean getIsCallerSyncAdapter(android.net.Uri)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String[] getQuickResponses(android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.AdditionalSubtype: java.lang.String getPrefSubtype(android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.widget.RemoteViews$TextViewSizeAction: java.lang.String getActionName()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixTransformRule()> -> _SOURCE_
<java.net.Authenticator: int getRequestingPort()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)> -> _SOURCE_
<android.widget.LinearLayout: int getLocationOffset(android.view.View)> -> _SOURCE_
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()> -> _SOURCE_
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()> -> _SOURCE_
<libcore.net.http.RequestHeaders: int getMaxAgeSeconds()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection getFgCallLatestConnection()> -> _SOURCE_
<android.renderscript.RenderScript: android.content.Context getApplicationContext()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints: int getGestureStrokePreviewSize()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getY()> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: int getDefaultGatewayAddr()> -> _SOURCE_
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<android.app.WallpaperInfo: java.lang.String getServiceName()> -> _SOURCE_
<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()> -> _SOURCE_
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getOutboundProxy()> -> _SOURCE_
<org.apache.james.mime4j.decoder.ByteQueue: java.util.Iterator iterator()> -> _SOURCE_
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: int getRepeatMode()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailLayoutController: com.android.contacts.activities.ContactDetailActivity$FragmentKeyListener getCurrentPage()> -> _SOURCE_
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])> -> _SOURCE_
<com.android.camera.Thumbnail: com.android.camera.Thumbnail$Media getLastImageThumbnail(android.content.ContentResolver)> -> _SOURCE_
<android.view.MotionEvent: float getSize()> -> _SOURCE_
<android.location.GpsSatellite: float getElevation()> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTBSCertificate()> -> _SOURCE_
<android.view.View: float getTopFadingEdgeStrength()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedException()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.BaseStatusBar$H createHandler()> -> _SOURCE_
<com.android.music.QueryBrowserActivity: java.lang.Object onRetainNonConfigurationInstance()> -> _SOURCE_
<android.os.PowerManager: boolean isScreenOn()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: short getFillDefault()> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getMimeType()> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)> -> _SOURCE_
<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)> -> _SOURCE_
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelBar: float getBarHeight()> -> _SOURCE_
<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUniversalString: java.lang.String getString()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getIccRecordsLoaded()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.RouteInfo[] getRoutes(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)> -> _SOURCE_
<android.content.ClipData: android.graphics.Bitmap getIcon()> -> _SOURCE_
<com.android.mms.util.DownloadManager: com.android.mms.util.DownloadManager access$000()> -> _SOURCE_
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> -> _SOURCE_
<android.webkit.DateSorter: long getBoundary(int)> -> _SOURCE_
<android.database.CursorWrapper: boolean isBeforeFirst()> -> _SOURCE_
<android.os.DropBoxManager$Entry: java.lang.String getTag()> -> _SOURCE_
<com.android.contacts.list.ContactsSectionIndexer: int getPositionForSection(int)> -> _SOURCE_
<com.android.server.display.DisplayViewport: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String encodeBody()> -> _SOURCE_
<android.view.View: int getMeasuredState()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(int)> -> _SOURCE_
<java.nio.CharSequenceAdapter: java.nio.CharBuffer get(char[],int,int)> -> _SOURCE_
<libcore.icu.TimeZones$ZoneStringsCache: java.lang.Object create(java.lang.Object)> -> _SOURCE_
<com.android.mms.ui.MessageItem: java.lang.CharSequence getCachedFormattedMessage()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment: long getContactId()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: android.content.ContentProviderOperation buildDiff()> -> _SOURCE_
<android.app.UiModeManager: int getCurrentModeType()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> -> _SOURCE_
<android.preference.TwoStatePreference: boolean getDisableDependentsState()> -> _SOURCE_
<com.android.phone.CdmaPhoneCallState: boolean getAddCallMenuStateAfterCallWaiting()> -> _SOURCE_
<dalvik.system.profiler.PortableThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)> -> _SOURCE_
<gov.nist.javax.sip.header.ViaList: java.lang.Object clone()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> -> _SOURCE_
<android.widget.TextView: int getCompoundDrawablePadding()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()> -> _SOURCE_
<com.android.mms.model.LayoutModel: int getLayoutType()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()> -> _SOURCE_
<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsg()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getViewTypeCount()> -> _SOURCE_
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController getInstance(android.content.Context)> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toDays(long)> -> _SOURCE_
<android.app.DialogFragment: int getTheme()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isConnected()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String getMonth()> -> _SOURCE_
<java.util.UnknownFormatConversionException: java.lang.String getConversion()> -> _SOURCE_
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()> -> _SOURCE_
<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay[] getRememberedWifiDisplays()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()> -> _SOURCE_
<com.android.server.AppWidgetService: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> -> _SOURCE_
<android.net.Proxy: org.apache.http.conn.routing.HttpRoutePlanner getAndroidProxySelectorRoutePlanner(android.content.Context)> -> _SOURCE_
<android.widget.GridLayout$2: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getListSelection()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDialog()> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: byte[] getEncoded()> -> _SOURCE_
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String[] getSerialPorts()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getLineNumber()> -> _SOURCE_
<java.lang.Thread: long getId()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtrees$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.text.style.TypefaceSpan: java.lang.String getFamily()> -> _SOURCE_
<com.android.inputmethod.latin.ResizableIntArray: int getLength()> -> _SOURCE_
<libcore.util.ZoneInfoDB: java.util.TimeZone getSystemDefault()> -> _SOURCE_
<java.net.NetworkInterface: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: android.app.Fragment getItem(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList getContactList()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaEriText()> -> _SOURCE_
<com.android.internal.app.IMediaContainerService$Stub$Proxy: long[] getFileSystemStats(java.lang.String)> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: long getCliffThreshold(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()> -> _SOURCE_
<java.util.ResourceBundle$Control: long getTimeToLive(java.lang.String,java.util.Locale)> -> _SOURCE_
<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentEncoding: java.lang.String encodeBody()> -> _SOURCE_
<android.widget.SimpleAdapter: long getItemId(int)> -> _SOURCE_
<com.android.calendar.CalendarController: int getViewType()> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> -> _SOURCE_
<android.net.LinkProperties$1: android.net.LinkProperties createFromParcel(android.os.Parcel)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<java.lang.System: java.util.Map getenv()> -> _SOURCE_
<java.util.TimeZone: int getOffset(long)> -> _SOURCE_
<com.google.common.base.Equivalence$Wrapper: java.lang.Object get()> -> _SOURCE_
<com.android.mms.model.MediaModel: int getSeekTo()> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageClass()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.Object getParent(java.lang.Object)> -> _SOURCE_
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)> -> _SOURCE_
<android.renderscript.Element: java.lang.String getSubElementName(int)> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> -> _SOURCE_
<com.android.inputmethod.latin.AutoCorrection: int getMaxFrequency(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: byte[] toNpnProtocolsList(byte[][])> -> _SOURCE_
<java.util.HashSet: boolean isEmpty()> -> _SOURCE_
<com.google.common.collect.Serialization: com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getWidgetUpdateAction(android.content.Context)> -> _SOURCE_
<android.graphics.drawable.TransitionDrawable$TransitionState: int getChangingConfigurations()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.CachedBluetoothDeviceManager getCachedDeviceManager()> -> _SOURCE_
<java.util.BitSet: java.lang.Object clone()> -> _SOURCE_
<java.security.AlgorithmParameters: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])> -> _SOURCE_
<android.view.VelocityTracker: float getXVelocity()> -> _SOURCE_
<com.android.providers.contacts.AccountWithDataSet: com.android.providers.contacts.AccountWithDataSet get(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.Window: int getForcedWindowFlags()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean getCallForwardingIndicator()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.internal.app.IMediaContainerService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.text.Layout$SpannedEllipsizer: int getSpanStart(java.lang.Object)> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: java.lang.String getTouchIconUrl()> -> _SOURCE_
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getImportantForAccessibility(android.view.View)> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.lang.Object getContent()> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker: android.widget.TextSwitcher access$000(com.android.systemui.statusbar.phone.Ticker)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: int getUniqueId()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getUrgency()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: int getAppOrientation(android.view.IApplicationToken)> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.channels.ServerSocketChannel getChannel()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ims.IsimRecords getIsimRecords()> -> _SOURCE_
<android.view.LayoutInflater: android.content.Context getContext()> -> _SOURCE_
<java.text.DateFormat: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: java.lang.String access$300()> -> _SOURCE_
<com.android.internal.statusbar.StatusBarIconList: int getSlotIndex(java.lang.String)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: long getExpirationTime()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getCount()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List getPersistentApplications(int)> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int[] getCurrentDrawableState()> -> _SOURCE_
<com.android.settings.bluetooth.PanProfile: int getDrawableResource(android.bluetooth.BluetoothClass)> -> _SOURCE_
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()> -> _SOURCE_
<com.android.inputmethod.latin.WordComposer: int getCodeAt(int)> -> _SOURCE_
<org.apache.harmony.security.x509.KeyUsage: boolean[] getKeyUsage()> -> _SOURCE_
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<com.android.exchange.ExchangeService: int getStatusType(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.IccSmsInterfaceManager: int getPremiumSmsPermission(java.lang.String)> -> _SOURCE_
<android.preference.Preference: float getPersistedFloat(float)> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: java.lang.String getAddress()> -> _SOURCE_
<com.android.mms.util.ThumbnailManager: java.lang.String getTag()> -> _SOURCE_
<android.content.pm.PackageParser$Permission: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getFamilyName()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: int getMaxThumbnailDim()> -> _SOURCE_
<java.util.ResourceBundle$Control: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)> -> _SOURCE_
<android.text.method.DateTimeKeyListener: int getInputType()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader getEventHeader()> -> _SOURCE_
<gov.nist.javax.sip.header.To: java.lang.String encodeBody()> -> _SOURCE_
<android.text.DynamicLayout: int getLineDescent(int)> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: java.lang.String toString()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getEventType()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency[] values()> -> _SOURCE_
<android.view.IApplicationToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getLayoutInsets()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getMinRecordSize()> -> _SOURCE_
<android.mtp.MtpStorage: long getMaxFileSize()> -> _SOURCE_
<com.google.common.collect.MapMaker: int getConcurrencyLevel()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: java.util.List subList(int,int)> -> _SOURCE_
<java.util.Random: double nextDouble()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)> -> _SOURCE_
<java.lang.Thread: java.util.Map getAllStackTraces()> -> _SOURCE_
<android.app.LoadedApk: java.lang.String getLibDir()> -> _SOURCE_
<android.app.ListActivity: long getSelectedItemId()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteLevel()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getTransport()> -> _SOURCE_
<java.util.logging.LogManager: java.lang.Object getInstanceByClass(java.lang.String)> -> _SOURCE_
<gov.nist.core.net.SslNetworkLayer: java.net.DatagramSocket createDatagramSocket()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()> -> _SOURCE_
<java.net.Inet6Address: java.lang.String toString()> -> _SOURCE_
<android.location.Country: java.lang.String getCountryIso()> -> _SOURCE_
<android.telephony.SmsMessage: long getTimestampMillis()> -> _SOURCE_
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)> -> _SOURCE_
<java.lang.Long: double doubleValue()> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> -> _SOURCE_
<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()> -> _SOURCE_
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableCollection get(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList: byte[] getEncoded()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> -> _SOURCE_
<android.widget.AbsListView: int getChoiceMode()> -> _SOURCE_
<com.android.mms.data.Contact: byte[] access$1700(com.android.mms.data.Contact)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getAlgorithm()> -> _SOURCE_
<java.lang.Double: boolean isNaN()> -> _SOURCE_
<com.android.inputmethod.latin.ResizableIntArray: int get(int)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)> -> _SOURCE_
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],java.net.NetworkInterface)> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getMinimumHeight()> -> _SOURCE_
<android.app.IWallpaperManagerCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.calendar.DayView$ScrollInterpolator: float getInterpolation(float)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getIssuerAlternativeNames()> -> _SOURCE_
<android.view.MotionEvent: float getTouchMajor()> -> _SOURCE_
<java.util.zip.ZipEntry: java.lang.String toString()> -> _SOURCE_
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.MappingFileProvider: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: java.lang.String getOriginalUrl()> -> _SOURCE_
<android.view.animation.Animation: boolean getDetachWallpaper()> -> _SOURCE_
<java.security.cert.Certificate: int hashCode()> -> _SOURCE_
<android.widget.Switch: java.lang.CharSequence getTextOn()> -> _SOURCE_
<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERObjectIdentifier: byte[] getBody()> -> _SOURCE_
<android.security.KeyStore: android.security.KeyStore$State state()> -> _SOURCE_
<android.text.StaticLayout: int getParagraphDirection(int)> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.String getNaN()> -> _SOURCE_
<android.text.DynamicLayout: int getParagraphDirection(int)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger getSerialNumber()> -> _SOURCE_
<com.google.common.collect.BstCountBasedBalancePolicies$1: com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getWorkingStats(int)> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: int getCacheVersion()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)> -> _SOURCE_
<java.util.Vector: java.lang.Object lastElement()> -> _SOURCE_
<com.android.browser.AutofillHandler$AutoFillProfileDbTask: java.lang.Object doInBackground(java.lang.Object[])> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ErrorHandler getErrorHandler()> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()> -> _SOURCE_
<org.apache.harmony.security.x509.NameConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.view.KeyCharacterMap: char getMatch(int,char[],int)> -> _SOURCE_
<android.telephony.CellSignalStrengthGsm: android.telephony.CellSignalStrength copy()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getAsByteArray(java.lang.String)> -> _SOURCE_
<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()> -> _SOURCE_
<com.android.mms.MmsApp: com.android.mms.util.ThumbnailManager getThumbnailManager()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getEventChargingFunctionAddresses()> -> _SOURCE_
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)> -> _SOURCE_
<java.util.Date: long getTime()> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: int getMaxThumbnailSize()> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()> -> _SOURCE_
<java.net.DatagramSocket: int getSendBufferSize()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: int getBandwidth(java.lang.String)> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: int getCount()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoLinger()> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: com.android.settings.wifi.WifiConfigController getController()> -> _SOURCE_
<com.android.contacts.list.ContactsSectionIndexer: int getSectionForPosition(int)> -> _SOURCE_
<android.location.Location: float getSpeed()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()> -> _SOURCE_
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.util.TreeSet: java.lang.Object higher(java.lang.Object)> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListFragment: android.database.Cursor access$302(com.android.contacts.group.GroupBrowseListFragment,android.database.Cursor)> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getScheme()> -> _SOURCE_
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.InReplyToHeader createInReplyToHeader(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormat: int getGroupingSize()> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemAudioCategory()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyDrawParams: com.android.inputmethod.keyboard.internal.KeyDrawParams mayCloneAndUpdateParams(int,com.android.inputmethod.keyboard.internal.KeyVisualAttributes)> -> _SOURCE_
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)> -> _SOURCE_
<android.media.AudioManager: int getMasterVolume()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: int getType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getMinFragmentSize()> -> _SOURCE_
<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()> -> _SOURCE_
<android.view.MotionEvent: float getToolMajor(int)> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()> -> _SOURCE_
<com.android.vcard.VCardEntry$SipData: boolean isEmpty()> -> _SOURCE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.webkit.ZoomManager: float getMinZoomScale()> -> _SOURCE_
<android.graphics.Rect: java.lang.String toString()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getFocusMode()> -> _SOURCE_
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)> -> _SOURCE_
<javax.crypto.Mac: java.security.Provider getProvider()> -> _SOURCE_
<android.view.animation.Transformation: java.lang.String toString()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int)> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)> -> _SOURCE_
<com.android.vcard.VCardEntry$AnniversaryData: boolean isEmpty()> -> _SOURCE_
<com.android.phone.PhoneGlobals: boolean getRestoreMuteOnInCallResume()> -> _SOURCE_
<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Collection getCachedAuthorizationHeaders(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.cookie.NetscapeDraftSpec: org.apache.http.Header getVersionHeader()> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String toString()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getMin()> -> _SOURCE_
<java.util.concurrent.SynchronousQueue: java.lang.Object poll()> -> _SOURCE_
<android.nfc.Tag: java.lang.String toString()> -> _SOURCE_
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.os.Debug: int getGlobalClassInitTime()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getInt(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ErrorInfo: java.lang.String getErrorMessage()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint24()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri(int)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: android.content.Context getForegroundActivity()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: int getEntryCount(boolean)> -> _SOURCE_
<libcore.net.http.HttpConnection: libcore.net.http.HttpConnection$Address getAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.Object clone()> -> _SOURCE_
<android.widget.AbsListView: int getBottomPaddingOffset()> -> _SOURCE_
<java.lang.Class: int getModifiers()> -> _SOURCE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)> -> _SOURCE_
<com.android.server.TwilightService$TwilightState: long getTodaySunset()> -> _SOURCE_
<com.android.browser.WebStorageSizeManager: long getAppCacheMaxSize()> -> _SOURCE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String encode()> -> _SOURCE_
<android.bluetooth.IBluetoothHealthCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)> -> _SOURCE_
<java.io.File: long getTotalSpace()> -> _SOURCE_
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createScoSocket()> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()> -> _SOURCE_
<android.filterfw.core.Frame: long getTimestamp()> -> _SOURCE_
<java.util.TreeSet: java.util.NavigableSet descendingSet()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.Finished: int getType()> -> _SOURCE_
<com.android.mms.model.RegionModel: int getLeft()> -> _SOURCE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getDepth()> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getProxyAuthorization()> -> _SOURCE_
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll()> -> _SOURCE_
<android.widget.Spinner: int getDropDownVerticalOffset()> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: java.lang.Object clone()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: java.lang.String getMessage()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> -> _SOURCE_
<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)> -> _SOURCE_
<android.view.ViewGroup: int getLayoutMode()> -> _SOURCE_
<gov.nist.javax.sip.header.WWWAuthenticate: javax.sip.address.URI getURI()> -> _SOURCE_
<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> -> _SOURCE_
<android.net.wifi.WifiConfiguration$EnterpriseField: java.lang.String value()> -> _SOURCE_
<java.net.SocketImpl: java.io.FileDescriptor getFD$()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> -> _SOURCE_
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> android.permission.ACCESS_WIFI_STATE -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set createElementSet()> -> _SOURCE_
<com.android.emailcommon.mail.FetchProfile: com.android.emailcommon.mail.Part getFirstPart()> -> _SOURCE_
<android.widget.TabWidget: int getTabCount()> -> _SOURCE_
<android.telephony.SmsMessage: int getIndexOnSim()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.util.LinkedList getOrCreateChildren()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getOrigDialString()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.util.Iterator getParameterNames()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: float getDur()> -> _SOURCE_
<com.android.browser.TitleBar: boolean isEditingUrl()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: int getOrder()> -> _SOURCE_
<com.android.settings.wifi.AccessPoint: android.net.NetworkInfo$DetailedState getState()> -> _SOURCE_
<com.android.exchange.ExchangeService: java.lang.String getDeviceId(android.content.Context)> -> _SOURCE_
<com.android.server.wm.WindowState: int getSystemUiVisibility()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()> -> _SOURCE_
<java.nio.charset.MalformedInputException: int getInputLength()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<android.widget.TextView: float getLineSpacingMultiplier()> -> _SOURCE_
<com.android.contacts.util.ThemeUtils: int getAttribute(android.content.res.Resources$Theme,int)> -> _SOURCE_
<android.provider.ContactsContract$StatusUpdates: int getPresencePrecedence(int)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getCount()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.String getClassSignatureAttribute(java.lang.Class)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.LinkedHashMap access$802(com.android.ex.chips.BaseRecipientAdapter,java.util.LinkedHashMap)> -> _SOURCE_
<android.widget.AbsListView: int getVerticalScrollbarWidth()> -> _SOURCE_
<com.android.internal.telephony.DataConnection$FailCause: int getErrorCode()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: int getDuration(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)> -> _SOURCE_
<java.lang.Byte: double doubleValue()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type[] getActualTypeArguments()> -> _SOURCE_
<android.inputmethodservice.SoftInputWindow: int getSize()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: java.util.Iterator iterator()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getToken(int)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String getEncoding()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String)> -> _SOURCE_
<java.io.Console: java.io.Console getConsole()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getText()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: long getId()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedHorizontalScrollLength()> -> _SOURCE_
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()> -> _SOURCE_
<java.util.zip.Adler32: long getValue()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.String[] getRowColumns(android.content.Context,android.net.Uri,long,java.lang.String[])> -> _SOURCE_
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.Object getValue()> -> _SOURCE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithmName()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: java.math.BigInteger getUserCertificate()> -> _SOURCE_
<com.android.contacts.ContactsActivity: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<android.net.http.Headers: long getContentLength()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.service.AccountServiceProxy: android.os.Bundle getConfigurationData(java.lang.String)> -> _SOURCE_
<android.text.style.SuggestionSpan: int getFlags()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getETag()> -> _SOURCE_
<javax.crypto.CipherSpi: java.security.Key engineUnwrap(byte[],java.lang.String,int)> -> _SOURCE_
<com.android.internal.view.IInputMethodCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getHeaderFields()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int)> -> _SOURCE_
<com.google.common.io.CharStreams$2: java.io.InputStreamReader getInput()> -> _SOURCE_
<com.android.contacts.model.dataitem.IdentityDataItem: java.lang.String getIdentity()> -> _SOURCE_
<android.media.AudioService$RcClientDeathHandler: android.os.IBinder getBinder()> -> _SOURCE_
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getWrappedHostName()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()> -> _SOURCE_
<gov.nist.javax.sip.header.Via: java.lang.String getSentProtocolField()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()> -> _SOURCE_
<gov.nist.javax.sip.header.RetryAfter: int getDuration()> -> _SOURCE_
<android.view.View: android.os.IBinder getApplicationWindowToken()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment[] restoreAttachmentsWithMessageId(android.content.Context,long)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.lang.String getHostAddress()> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentId(java.lang.String)> -> _SOURCE_
<android.widget.Filter: android.os.Handler access$402(android.widget.Filter,android.os.Handler)> -> _SOURCE_
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> -> _SOURCE_
<java.text.DecimalFormat: java.math.RoundingMode getRoundingMode()> -> _SOURCE_
<android.os.MemoryFile: java.io.InputStream getInputStream()> -> _SOURCE_
<libcore.net.http.HttpEngine: int getResponseCode()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastLocation()> -> _SOURCE_
<com.android.providers.contacts.CallLogProvider: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createUser(java.lang.String,int)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getTimeZone()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()> -> _SOURCE_
<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()> -> _SOURCE_
<com.android.settings.bluetooth.BluetoothVisibilityTimeoutFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.view.View$12: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.content.pm.IPackageInstallObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: long getItemId(int)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<android.widget.ArrayAdapter: android.content.Context getContext()> -> _SOURCE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)> -> _SOURCE_
<java.math.BigInteger: int getFirstNonzeroDigit()> -> _SOURCE_
<com.android.inputmethod.latin.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()> -> _SOURCE_
<android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PProfileKey: java.lang.Object clone()> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: java.lang.String getPhotoUri()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)> -> _SOURCE_
<android.media.MediaPlayer$TrackInfo: int getTrackType()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String getVisitedNetworkID()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getNativeLibraryPath()> -> _SOURCE_
<java.lang.Integer: long longValue()> -> _SOURCE_
<com.android.contacts.group.GroupDetailDisplayUtils: android.view.View getNewGroupSourceView(android.content.Context)> -> _SOURCE_
<android.app.Dialog: android.content.Context getContext()> -> _SOURCE_
<java.util.Hashtable$HashIterator: java.util.Hashtable$HashtableEntry nextEntryNotFailFast()> -> _SOURCE_
<android.graphics.Paint: int getBidiFlags()> -> _SOURCE_
<android.widget.TextView: int getSelectionEnd()> -> _SOURCE_
<android.view.KeyCharacterMap: char getMatch(int,char[])> -> _SOURCE_
<java.util.Hashtable$HashIterator: java.util.Hashtable$HashtableEntry nextEntry()> -> _SOURCE_
<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getComplexityCollator()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentEncodingHeader getContentEncoding()> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.x509.Extension getExtensionByOID(java.lang.String)> -> _SOURCE_
<android.view.textservice.TextInfo: int getCookie()> -> _SOURCE_
<android.widget.TextView: int getExtendedPaddingBottom()> -> _SOURCE_
<java.util.Calendar: java.util.Date getTime()> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: int getOpacity()> -> _SOURCE_
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()> -> _SOURCE_
<android.hardware.usb.UsbDevice: java.lang.String toString()> -> _SOURCE_
<android.app.ActivityOptions: int getCustomEnterResId()> -> _SOURCE_
<com.android.settings.accounts.AuthenticatorHelper: android.graphics.drawable.Drawable getDrawableForType(android.content.Context,java.lang.String)> -> _SOURCE_
<android.text.TextUtils$SimpleStringSplitter: java.util.Iterator iterator()> -> _SOURCE_
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.Long getId()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getType()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getIssuerDN()> -> _SOURCE_
<android.media.ExifInterface: byte[] getThumbnail()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: long getOriginalLocalSequenceNumber()> -> _SOURCE_
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: double get(java.lang.String,double)> -> _SOURCE_
<android.view.View: float getX()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.WindowManager$LayoutParams getSearchLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SOURCE_
<android.os.Message: long getWhen()> -> _SOURCE_
<org.json.JSONArray: long getLong(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: int getNumberPresentation()> -> _SOURCE_
<android.accounts.IAccountAuthenticatorResponse$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getPhoneticName()> -> _SOURCE_
<com.android.browser.Controller: android.content.Intent createBookmarkCurrentPageIntent(boolean)> -> _SOURCE_
<android.filterfw.core.Frame: int getBindingType()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat build()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()> -> _SOURCE_
<java.util.Vector: java.util.Enumeration elements()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: int getCurrentMessageSize()> -> _SOURCE_
<com.google.common.collect.Maps$AbstractFilteredMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getCallForwardingOption(int,android.os.Message)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: java.lang.String restoreBodyHtmlWithMessageId(android.content.Context,long)> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativePrefix()> -> _SOURCE_
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader getLoader(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()> -> _SOURCE_
<com.android.mms.transaction.Transaction: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: long getSupportedEventTypes()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])> -> _SOURCE_
<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus getWifiDisplayStatusLocked()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getObjectId()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> -> _SOURCE_
<com.google.common.collect.RegularImmutableMap$Values$1: java.lang.Object get(int)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> -> _SOURCE_
<android.net.http.HttpsConnection: java.lang.String getScheme()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()> -> _SOURCE_
<com.android.systemui.statusbar.phone.Ticker: java.util.ArrayList access$200(com.android.systemui.statusbar.phone.Ticker)> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getThirdArgument(int)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentType()> -> _SOURCE_
<com.android.internal.telephony.cat.DeviceIdentities: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProtocol()> -> _SOURCE_
<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtPosition(android.view.MotionEvent)> -> _SOURCE_
<com.android.inputmethod.latin.LastComposedWord: int getSeparatorLength(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)> -> _SOURCE_
<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<com.android.ex.variablespeed.VariableSpeed: int getDuration()> -> _SOURCE_
<com.android.server.NetworkManagementService: int getInterfaceTxThrottle(java.lang.String)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> -> _SOURCE_
<android.database.MergeCursor: double getDouble(int)> -> _SOURCE_
<gov.nist.core.LexerCore: java.text.ParseException createParseException()> -> _SOURCE_
<android.graphics.Paint: float getFontSpacing()> -> _SOURCE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$5: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$1802(com.android.calendar.EventInfoFragment,android.database.Cursor)> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$MakeCallCommand: java.lang.String getSessionDescription()> -> _SOURCE_
<com.android.internal.view.IInputMethod$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.location.Location: double getAltitude()> -> _SOURCE_
<android.net.sip.SipSession: java.lang.String getLocalIp()> -> _SOURCE_
<org.apache.http.impl.io.HttpTransportMetricsImpl: long getBytesTransferred()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityContainer: com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper getFlipper()> -> _SOURCE_
<java.net.HttpRetryException: java.lang.String getReason()> -> _SOURCE_
<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()> -> _SOURCE_
<java.security.KeyStore$PrivateKeyEntry: java.lang.String toString()> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String getFieldName(int)> -> _SOURCE_
<android.filterfw.core.Frame: android.filterfw.core.Frame retain()> -> _SOURCE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$PluginState getPluginState()> -> _SOURCE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String getString(java.nio.ByteBuffer,int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeUtility: java.lang.String getTextFromPart(com.android.emailcommon.mail.Part)> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getTypeColumn()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: float getLabelWidth(com.android.settings.widget.ChartSweepView)> -> _SOURCE_
<java.lang.Integer: float floatValue()> -> _SOURCE_
<android.graphics.Canvas: int getDensity()> -> _SOURCE_
<android.renderscript.Element: int getSubElementArraySize(int)> -> _SOURCE_
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.widget.RemoteViews getViewAt(int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccFileHandler getIccFileHandler()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: byte[] encodeAsBytes(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.text.Layout getLayout()> -> _SOURCE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> -> _SOURCE_
<android.filterfw.core.VertexFrame: int getVboId()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: int getDecomposition()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDLSubStream()> -> _SOURCE_
<android.view.View: long getDrawingTime()> -> _SOURCE_
<android.content.pm.PackageParser$PermissionGroup: java.lang.String toString()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: int getResponseInterceptorCount()> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats groupedByIface()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> -> _SOURCE_
<android.preference.Preference: android.content.Intent getIntent()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getParameterValue(java.lang.String)> -> _SOURCE_
<libcore.net.http.HttpEngine: java.io.InputStream getResponseBody()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity: java.lang.String toString()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()> android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<android.view.ViewConfiguration: int getFadingEdgeLength()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDateHeader: java.lang.String encodeBody()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getLength()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$DevicePolicyData getUserData(int)> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaLevel()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.AccountTypeManager)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimDomain()> -> _SOURCE_
<android.net.RouteInfo$1: android.net.RouteInfo createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMin()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quad$3: float getInterpolation(float)> -> _SOURCE_
<java.util.ServiceLoader: java.util.Iterator iterator()> -> _SOURCE_
<com.android.browser.BookmarkItem: java.lang.String getUrl()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: byte[] encrypt(byte,byte[],int,int)> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.media.Metadata: byte[] getByteArray(int)> -> _SOURCE_
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: javax.net.ssl.SSLSession getSession(byte[])> -> _SOURCE_
<android.telephony.ServiceState: int getRilRadioTechnology()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String toString()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getViaHost()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getServiceCategory()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getDefaultUserAgentForLocale(android.content.Context,java.util.Locale)> -> _SOURCE_
<android.widget.ViewAnimator: int getBaseline()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: java.lang.String getTagName()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: int getReadTimeout()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getRefresh()> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: java.lang.String encode()> -> _SOURCE_
<android.os.ParcelFileDescriptor: java.lang.String toString()> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.String getIndentation()> -> _SOURCE_
<java.lang.SecurityManager: boolean getInCheck()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()> -> _SOURCE_
<java.io.Reader: int read(char[])> -> _SOURCE_
<android.view.IDisplayContentChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.http.impl.cookie.RFC2109Spec: int getVersion()> -> _SOURCE_
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: java.lang.String getXmlEncoding()> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: java.lang.String getCustomProtocol()> -> _SOURCE_
<android.drm.DrmInfoRequest: java.util.Iterator iterator()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamNames()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: int getOpacity()> -> _SOURCE_
<android.text.Layout: int getLineBottom(int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getURI(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: boolean getNotifyServiceState()> -> _SOURCE_
<com.android.browser.Controller: android.os.Bundle createSaveState()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)> -> _SOURCE_
<libcore.io.DropBox: libcore.io.DropBox$Reporter getReporter()> -> _SOURCE_
<com.android.mms.dom.smil.SmilLayoutElementImpl: boolean getResolved()> -> _SOURCE_
<org.apache.http.message.BasicHttpResponse: java.util.Locale getLocale()> -> _SOURCE_
<android.text.AutoText: int getSize(android.view.View)> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: android.net.Uri getPhotoThumbnailUri()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.app.Activity: android.app.Activity getParent()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxTextLimit()> -> _SOURCE_
<android.telephony.SmsCbMessage: int getMessageFormat()> -> _SOURCE_
<org.apache.http.auth.AuthScope: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.CSeqHeader createCSeqHeader(long,java.lang.String)> -> _SOURCE_
<android.hardware.Sensor: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.security.x509.DistributionPoint$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.location.LocationProvider: java.lang.String getName()> -> _SOURCE_
<java.io.Console: char[] readPassword()> -> _SOURCE_
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpResponse receiveResponseHeader()> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getMiddle()> -> _SOURCE_
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()> -> _SOURCE_
<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)> -> _SOURCE_
<org.apache.harmony.luni.util.DeleteOnExit: org.apache.harmony.luni.util.DeleteOnExit getInstance()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> -> _SOURCE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String)> -> _SOURCE_
<android.accounts.IAccountAuthenticator$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: android.graphics.Bitmap getDefaultIcon()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$4: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getX(int)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: java.lang.String toString()> -> _SOURCE_
<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()> -> _SOURCE_
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()> -> _SOURCE_
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber mergeFrom(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)> -> _SOURCE_
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.lang.CharSequence getBeforeText(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])> -> _SOURCE_
<gov.nist.core.StringTokenizer: char lookAhead()> -> _SOURCE_
<java.io.InputStreamReader: java.lang.String getEncoding()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> -> _SOURCE_
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getHandling()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.UnsupportedHeader createUnsupportedHeader(java.lang.String)> -> _SOURCE_
<android.nfc.NfcAdapter: int getAdapterState()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()> -> _SOURCE_
<android.provider.Settings$System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()> -> _SOURCE_
<android.hardware.usb.IUsbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.server.display.DisplayDevice: android.os.IBinder getDisplayTokenLocked()> -> _SOURCE_
<java.util.PropertyResourceBundle: java.util.Set handleKeySet()> -> _SOURCE_
<com.android.mms.TempFileProvider: java.lang.String getScrapPath(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.Iterator iterator()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<com.google.common.collect.BstPath: com.google.common.collect.BstNode getTip()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: int getActions(java.lang.Object)> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: boolean isChunked()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()> -> _SOURCE_
<android.os.CountDownTimer: long access$100(android.os.CountDownTimer)> -> _SOURCE_
<java.math.BigInteger: java.math.BigInt getBigInt()> -> _SOURCE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.util.List getText(java.lang.Object)> -> _SOURCE_
<com.android.exchange.adapter.AbstractSyncAdapter$Operation: java.lang.String toString()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)> -> _SOURCE_
<org.apache.harmony.security.x509.InhibitAnyPolicy: byte[] getEncoded()> -> _SOURCE_
<com.android.ex.chips.RecipientChip: long getContactId()> -> _SOURCE_
<com.android.settings.bluetooth.A2dpProfile: int getDrawableResource(android.bluetooth.BluetoothClass)> -> _SOURCE_
<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)> -> _SOURCE_
<android.database.CursorWindow: java.lang.String getString(int,int)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.content.CursorLoader createCursorLoader()> -> _SOURCE_
<gov.nist.javax.sip.header.Allow: java.lang.String encodeBody()> -> _SOURCE_
<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)> -> _SOURCE_
<gov.nist.javax.sip.header.SubscriptionState: int getExpires()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: float getRepeatDur()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountType()> -> _SOURCE_
<com.android.mms.transaction.SendTransaction: int getType()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$12: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getUserInfo(int)> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: android.media.IAudioService getAudioService()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: void getEnhancedVoicePrivacy(android.os.Message)> -> _SOURCE_
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()> -> _SOURCE_
<android.filterfw.core.Frame: long getBindingId()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getViaHost()> -> _SOURCE_
<android.view.View$DragShadowBuilder: android.view.View getView()> -> _SOURCE_
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AllowHeader createAllowHeader(java.lang.String)> -> _SOURCE_
<android.net.LinkProperties: java.util.Collection getRoutes()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberMatch: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber number()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlVersion()> -> _SOURCE_
<android.widget.ListPopupWindow: int getWidth()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginLine()> -> _SOURCE_
<android.widget.ExpandableListConnector: int getCount()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getSubjectAlternativeNames()> -> _SOURCE_
<android.webkit.WebView$PrivateAccess: int getHorizontalScrollbarHeight()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getError()> -> _SOURCE_
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_|LOCATION_INFORMATION
<android.net.NetworkStats: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.provider.Policy: android.content.ContentValues toContentValues()> -> _SOURCE_
<com.android.browser.homepages.RequestHandler: java.lang.String getUriResourcePath()> -> _SOURCE_
<com.android.browser.view.PieItem: float getSweep()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.UI getUi()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int)> -> _SOURCE_
<java.net.URL: java.lang.String getHost()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.Object clone()> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)> -> _SOURCE_
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<dalvik.system.SocketTagger: dalvik.system.SocketTagger get()> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getZipCode()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getType()> -> _SOURCE_
<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.util.Set getVaryFields()> -> _SOURCE_
<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getLastModified()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getDefaultFontSize()> -> _SOURCE_
<com.android.org.bouncycastle.util.io.pem.PemHeader: java.lang.String getName()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)> -> _SOURCE_
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()> -> _SOURCE_
<com.android.vcard.VCardProperty: java.lang.String getRawValue()> -> _SOURCE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelSize(int)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap access$000()> -> _SOURCE_
<android.webkit.ZoomManager: float getDefaultMinZoomScale()> -> _SOURCE_
<java.text.Collator: int getStrength()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getTypeColumn()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()> -> _SOURCE_
<com.android.emailcommon.internet.BinaryTempFileBody: java.io.InputStream getInputStream()> -> _SOURCE_
<java.util.zip.Inflater: int getTotalIn()> -> _SOURCE_
<android.database.MergeCursor: short getShort(int)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getPreferredDomesticCarrierCode()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getLocalName()> -> _SOURCE_
<android.content.IIntentReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int)> -> _SOURCE_
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()> -> _SOURCE_
<com.google.common.base.CharMatcher$8: com.google.common.base.CharMatcher negate()> -> _SOURCE_
<com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: int getContentLength()> -> _SOURCE_
<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey getPublicKey()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: int getPort()> -> _SOURCE_
<libcore.icu.LocaleData: java.lang.String getDateFormat(int)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: int getInt(int)> -> _SOURCE_
<java.net.ServerSocket: java.net.Socket accept()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getMax()> -> _SOURCE_
<android.renderscript.Element: android.renderscript.Element$DataType getDataType()> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: int getUserHandle(int)> -> _SOURCE_
<android.ddm.DdmHandleAppName: java.lang.String getAppName()> -> _SOURCE_
<java.net.URL: java.lang.Object getContent()> -> _SOURCE_
<android.app.ActivityOptions: android.os.Bundle toBundle()> -> _SOURCE_
<java.util.regex.Matcher: java.util.regex.Matcher reset()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: long getValue()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getDestinationTypeId()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getLocalPrincipal()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()> -> _SOURCE_
<java.nio.SocketChannelImpl$SocketAdapter: java.nio.channels.SocketChannel getChannel()> -> _SOURCE_
<android.view.View: float getScaleY()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()> -> _SOURCE_
<java.net.DatagramSocket: int getLocalPort()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)> -> _SOURCE_
<java.util.ArrayDeque: java.util.Iterator iterator()> -> _SOURCE_
<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getLaunchTimeToNowLocked(long)> -> _SOURCE_
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getViewTypeCount()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()> -> _SOURCE_
<android.os.storage.IMountService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams getFcParams()> -> _SOURCE_
<java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.lang.String toString()> -> _SOURCE_
<com.android.server.IntentResolver: java.util.Iterator filterIterator()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()> -> _SOURCE_
<com.android.mms.util.ImageCacheService: com.android.mms.util.ImageCacheService$ImageData getImageData(java.lang.String,int)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()> -> _SOURCE_
<org.apache.harmony.security.x509.EDIPartyName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.browser.BrowserSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: boolean isNull(int)> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: int getPointerCount()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: long getLocalAllDayCalendarTime(long,java.util.TimeZone)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getQName(int)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadLockCount()> -> _SOURCE_
<com.android.emailcommon.mail.PackedString$Builder: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.net.NetworkInfo: java.lang.String getExtraInfo()> -> _SOURCE_
<android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri,boolean)> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getDName()> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.String getName()> -> _SOURCE_
<android.nfc.INdefPushCallback$Stub$Proxy: android.nfc.NdefMessage createMessage()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getLookupUri()> -> _SOURCE_
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitCustomSlowCalls()> -> _SOURCE_
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: java.lang.String getCdmaEriText()> -> _SOURCE_
<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<android.widget.Editor$SelectionStartHandleView: int getCurrentCursorOffset()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: float maxBytesPerChar()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()> -> _SOURCE_
<android.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<java.util.zip.Deflater: int getAdler()> -> _SOURCE_
<com.android.mms.data.WorkingMessage: java.lang.CharSequence getText()> -> _SOURCE_
<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.util.List getText()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerProtocol()> -> _SOURCE_
<org.apache.http.message.BasicHeader: java.lang.String getValue()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector cloneSelector()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1Number()> -> _SOURCE_
<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMinor()> -> _SOURCE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream: byte[] access$300(org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream)> -> _SOURCE_
<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,android.net.Uri,boolean)> -> _SOURCE_
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getFormattedPhoneNumber()> -> _SOURCE_
<android.telephony.SmsMessage: byte[] getPdu()> -> _SOURCE_
<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolName()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayName()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getAutoFillEnabled()> -> _SOURCE_
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getPublicId()> -> _SOURCE_
<java.security.cert.CertPath: java.lang.Object writeReplace()> -> _SOURCE_
<java.util.SimpleTimeZone: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<android.view.ViewGroup: int[] onCreateDrawableState(int)> -> _SOURCE_
<java.io.CharArrayWriter: java.lang.String toString()> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: int getLastY()> -> _SOURCE_
<android.content.Intent: byte getByteExtra(java.lang.String,byte)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: boolean getDependencyMet()> -> _SOURCE_
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimImpi()> -> _SOURCE_
<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: int getCidSync()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: byte[] getEncodedName()> -> _SOURCE_
<com.android.browser.TitleBar: com.android.browser.NavigationBarBase getNavigationBar()> -> _SOURCE_
<android.app.Notification$Builder: android.app.Notification build()> -> _SOURCE_
<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getFocusAreas()> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamClass getSuperclass()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeysCache: com.android.inputmethod.keyboard.Key get(com.android.inputmethod.keyboard.Key)> -> _SOURCE_
<com.android.contacts.test.InjectedServices: android.content.SharedPreferences getSharedPreferences()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String,int)> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)> -> _SOURCE_
<android.widget.TextView: android.text.method.KeyListener getKeyListener()> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()> -> _SOURCE_
<com.android.internal.telephony.cat.BerTlv: int getTag()> -> _SOURCE_
<com.android.mail.utils.LogUtils: java.lang.String getLogTag()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getText()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: javax.sip.address.URI getAssociatedURI()> -> _SOURCE_
<android.drm.DrmEvent: int getUniqueId()> -> _SOURCE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)> -> _SOURCE_
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> -> _SOURCE_
<java.text.CollationKey: java.lang.String getSourceString()> -> _SOURCE_
<com.android.inputmethod.compat.SuggestionSpanUtils: java.lang.CharSequence getTextWithSuggestionSpan(android.content.Context,java.lang.CharSequence,com.android.inputmethod.latin.SuggestedWords,boolean)> -> _SOURCE_
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)> -> _SOURCE_
<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()> -> _SOURCE_
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getTitle()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$13: int getLength()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getLeadingDigitsPattern(int)> -> _SOURCE_
<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine()> -> _SOURCE_
<android.widget.CalendarView: int getFocusedMonthDateColor()> -> _SOURCE_
<com.android.i18n.phonenumbers.NumberParseException: com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType()> -> _SOURCE_
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()> -> _SOURCE_
<java.lang.reflect.Field: float getFloat(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getViaHost()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()> -> _SOURCE_
<com.android.contacts.calllog.CallTypeHelper: java.lang.Integer getHighlightedColor(int)> -> _SOURCE_
<libcore.io.ForwardingOs: java.io.FileDescriptor[] pipe()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getURI(int)> -> _SOURCE_
<android.os.IUpdateLock$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: java.lang.String getTimezoneDatabaseVersion()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: long getLong(int)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet entrySet()> -> _SOURCE_
<android.widget.ProgressBar$RefreshData: android.widget.ProgressBar$RefreshData getNextPoolable()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.LinkedHashMap access$800(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()> -> _SOURCE_
<com.android.i18n.phonenumbers.RegexCache$LRUCache: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingStart()> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()> -> _SOURCE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()> -> _SOURCE_
<android.net.WebAddress: java.lang.String toString()> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getContainerId()> -> _SOURCE_
<android.net.TrafficStats: long getTotalTxBytes()> -> _SOURCE_
<android.media.AudioService$SetModeDeathHandler: android.os.IBinder getBinder()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.widget.ListPopupWindow: int getInputMethodMode()> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getPhoneticName()> -> _SOURCE_
<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)> -> _SOURCE_
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: android.nfc.Tag rediscover(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoTimeout()> -> _SOURCE_
<com.android.exchange.EasSyncService: com.android.exchange.EasSyncService getServiceForMailbox(android.content.Context,com.android.emailcommon.provider.Mailbox)> -> _SOURCE_
<dalvik.system.profiler.HprofData: long getStartMillis()> -> _SOURCE_
<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.deskclock.Alarm$DaysOfWeek: java.util.HashSet getSetDays()> -> _SOURCE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Response getResponse()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)> -> _SOURCE_
<android.location.Location: long getElapsedRealtimeNanos()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getSortOrder()> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getLoadingView()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ReasonHeader createReasonHeader(java.lang.String,int,java.lang.String)> -> _SOURCE_
<android.view.View: float getAlpha()> -> _SOURCE_
<android.location.LocationRequest: long getInterval()> -> _SOURCE_
<com.android.server.IntentResolverOld: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)> -> _SOURCE_
<com.android.browser.BaseUi: boolean isEditingUrl()> -> _SOURCE_
<android.os.storage.StorageVolume: int getStorageId()> -> _SOURCE_
<android.hardware.Sensor: float getPower()> -> _SOURCE_
<org.apache.harmony.dalvik.ddmc.ChunkHandler: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)> -> _SOURCE_
<com.android.music.QueryBrowserActivity$QueryListAdapter: android.content.AsyncQueryHandler getQueryHandler()> -> _SOURCE_
<android.content.ContentProviderOperation: int getType()> -> _SOURCE_
<gov.nist.javax.sip.message.ListMap: java.lang.Class getListClass(java.lang.Class)> -> _SOURCE_
<java.util.EventObject: java.lang.Object getSource()> -> _SOURCE_
<android.server.search.SearchManagerService: android.content.ComponentName getAssistIntent(int)> -> _SOURCE_
<com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats getService()> -> _SOURCE_
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()> -> _SOURCE_
<android.net.sip.ISipSession$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: int getHoldCount()> -> _SOURCE_
<android.content.pm.IPackageInstallObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String toString()> -> _SOURCE_
<java.lang.Short: long longValue()> -> _SOURCE_
<android.view.KeyCharacterMap: char getDisplayLabel(int)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$ImKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.media.MiniThumbFile: long getMagic(long)> -> _SOURCE_
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()> -> _SOURCE_
<com.android.camera.Util: int getCameraFacingIntentExtras(android.app.Activity)> -> _SOURCE_
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$KindTitleViewEntry: java.lang.String getTitle()> -> _SOURCE_
<android.database.CursorWrapper: long getLong(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.util.List getPendingMmiCodes()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: com.android.inputmethod.latin.ExpandableDictionary$Node getWordNode()> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: long getItemId(int)> -> _SOURCE_
<android.net.http.AndroidHttpClient$2: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getBestValidType(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,boolean,int)> -> _SOURCE_
<android.util.SparseLongArray: android.util.SparseLongArray clone()> -> _SOURCE_
<java.net.InterfaceAddress: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getInputEncoding()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo: byte[] getEncoded()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()> -> _SOURCE_
<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()> -> _SOURCE_
<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)> -> _SOURCE_
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)> -> _SOURCE_
<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris(android.os.Parcelable[])> -> _SOURCE_
<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> android.permission.READ_SYNC_STATS -> _SOURCE_|SYNCHRONIZATION_DATA
<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()> -> _SOURCE_
<android.widget.GridLayout$Bounds: int getOffset(android.widget.GridLayout,android.view.View,android.widget.GridLayout$Alignment,int,boolean)> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object get(java.lang.Iterable,int,java.lang.Object)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getItemCount()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()> -> _SOURCE_
<com.android.exchange.provider.GalResult$GalData: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)> -> _SOURCE_
<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: int getItemViewType(int)> -> _SOURCE_
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)> -> _SOURCE_
<android.accounts.AccountManager: java.lang.Exception access$400(android.accounts.AccountManager,int,java.lang.String)> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableNumberFormatLocales()> -> _SOURCE_
<android.content.pm.PermissionInfo: java.lang.String toString()> -> _SOURCE_
<android.view.MotionEvent: long getEventTimeNano()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.BoundType lowerBoundType()> -> _SOURCE_
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getPageSize()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isOpen()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<java.text.NumberFormat: int getMinimumFractionDigits()> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()> -> _SOURCE_
<android.app.BackStackRecord: int getId()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getAddedCount(java.lang.Object)> -> _SOURCE_
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput: int getGroupCountSize(int)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.database.BulkCursorProxy: android.os.Bundle getExtras()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CertificateVerify: int getType()> -> _SOURCE_
<android.text.method.TextKeyListener: int getInputType()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesSent(int)> -> _SOURCE_
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: boolean getMute()> -> _SOURCE_
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)> -> _SOURCE_
<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] transceive(byte[])> -> _SOURCE_
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)> -> _SOURCE_
<java.security.KeyStoreSpi: boolean engineEntryInstanceOf(java.lang.String,java.lang.Class)> -> _SOURCE_
<java.util.Formatter: java.io.IOException ioException()> -> _SOURCE_
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()> -> _SOURCE_
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)> -> _SOURCE_
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.security.Permission getPermission()> -> _SOURCE_
<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()> -> _SOURCE_
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: com.android.ex.chips.BaseRecipientAdapter$DelayedMessageHandler access$1400(com.android.ex.chips.BaseRecipientAdapter)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerInetAddress()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.graphics.Rect getTargetRectFromView(android.content.Context,android.view.View)> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumHeight()> -> _SOURCE_
<java.nio.HeapByteBuffer: long getLong()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()> -> _SOURCE_
<java.sql.Date: java.lang.String toString()> -> _SOURCE_
<java.io.ObjectStreamClass: byte getFlags()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()> -> _SOURCE_
<com.android.calendar.Event: java.lang.String getTitleAndLocation()> -> _SOURCE_
<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)> -> _SOURCE_
<android.view.ActionMode: java.lang.Object getTag()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> -> _SOURCE_
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue[] getTo()> -> _SOURCE_
<org.apache.harmony.security.x509.DNParser: java.util.List parse()> -> _SOURCE_
<com.android.providers.telephony.MmsSmsDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<com.android.browser.SnapshotTab: byte[] compressBitmap(android.graphics.Bitmap)> -> _SOURCE_
<android.bluetooth.BluetoothPbap: int getState()> -> _SOURCE_
<java.lang.Math: int getExponent(float)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.SettingsValues: android.view.inputmethod.InputMethodSubtype[] getAdditionalSubtypes()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter$SuggestionResults: int getLineCount()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getFamilyName()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothProfileManager: com.android.settings.bluetooth.HeadsetProfile getHeadsetProfile()> -> _SOURCE_
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])> -> _SOURCE_
<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()> -> _SOURCE_
<android.os.UserManager: int getUserCount()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)> -> _SOURCE_
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getFragment()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<android.widget.AbsListView: int findClosestMotionRow(int)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection access$2100(com.android.internal.telephony.DataConnection)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> -> _SOURCE_
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getAdjustedMinimumFontSize(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getCreationTime()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.Class getRawType()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeType(int)> -> _SOURCE_
<android.os.WorkSource: android.os.WorkSource addReturningNewbs(android.os.WorkSource)> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_|ACCOUNT_INFORMATION
<com.android.server.ServiceWatcher: android.os.IBinder getBinder()> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()> -> _SOURCE_
<libcore.net.http.RawHeaders: int getHttpMinorVersion()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.content.DialogInterface$OnDismissListener access$3400(com.android.calendar.EventInfoFragment)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Message: long getKeyColumnLong(android.content.Context,long,java.lang.String)> -> _SOURCE_
<com.android.calendar.DayView: com.android.calendar.Event getNewEvent()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.lang.String toString()> -> _SOURCE_
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)> -> _SOURCE_
<java.net.URL: java.lang.String getQuery()> -> _SOURCE_
<com.android.contacts.vcard.ImportProcessor: int getType()> -> _SOURCE_
<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()> -> _SOURCE_
<com.android.browser.TitleBar: android.webkit.WebView getCurrentWebView()> -> _SOURCE_
<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()> -> _SOURCE_
<android.widget.HorizontalScrollView: int getMaxScrollAmount()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: float getOutlineAlphaForPage(int,int)> -> _SOURCE_
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)> -> _SOURCE_
<java.security.spec.ECFieldFp: java.math.BigInteger getP()> -> _SOURCE_
<android.app.LoadedApk$ServiceDispatcher: int getFlags()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.util.List getPendingMmiCodes()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getDataRoamingEnabled()> -> _SOURCE_
<android.view.View: int getPaddingEnd()> -> _SOURCE_
<android.webkit.WebSettings: boolean getUseWideViewPort()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range atLeast(java.lang.Comparable)> -> _SOURCE_
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.compat.InputMethodManagerCompatWrapper: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> -> _SOURCE_
<com.google.android.mms.pdu.PduHeaders: long getLongInteger(int)> -> _SOURCE_
<com.google.common.collect.RegularImmutableSortedSet: com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean)> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar(int)> -> _SOURCE_
<android.database.CursorWrapper: boolean isNull(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Unsupported: java.lang.String encodeBody()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestPackage()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)> -> _SOURCE_
<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)> -> _SOURCE_
<android.view.ViewGroup: android.view.View findFocus()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskWrites()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: java.util.Collection getApnListSync()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)> -> _SOURCE_
<com.android.vcard.VCardComposer: int getCount()> -> _SOURCE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()> -> _SOURCE_
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getLength()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: int getCount()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.StringBuffer encode(java.lang.StringBuffer)> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.util.Date getNotBefore()> -> _SOURCE_
<android.util.Spline: java.lang.String toString()> -> _SOURCE_
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()> -> _SOURCE_
<com.android.settings.AccountPreference: android.accounts.Account getAccount()> -> _SOURCE_
<android.util.SparseBooleanArray: boolean get(int,boolean)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView$5: int getFailedAttempts()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: char BeginToken()> -> _SOURCE_
<java.util.EnumMap: java.util.Collection values()> -> _SOURCE_
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: android.view.accessibility.AccessibilityEvent createAccessibilityEvent(com.android.inputmethod.keyboard.Key,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: com.android.org.bouncycastle.asn1.ASN1UTCTime getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()> -> _SOURCE_
<java.net.InterfaceAddress: java.net.InetAddress getAddress()> -> _SOURCE_
<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.String getTag()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)> -> _SOURCE_
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)> -> _SOURCE_
<java.util.logging.LoggingPermission: java.lang.String getActions()> -> _SOURCE_
<com.android.calendar.Utils: boolean getAllowWeekForDetailView()> -> _SOURCE_
<android.media.Metadata: double getDouble(int)> -> _SOURCE_
<java.util.ResourceBundle$Control: java.util.List getFormats(java.lang.String)> -> _SOURCE_
<android.graphics.Region: android.graphics.Path getBoundaryPath()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: int getVersion()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEROutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDLSubStream()> -> _SOURCE_
<android.widget.OverScroller: int getFinalY()> -> _SOURCE_
<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)> -> _SOURCE_
<com.android.settings.DataUsageSummary$ConfirmRestrictFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.internal.app.IUsageStats$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.settings.wifi.WifiSettings: int getHelpResource()> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getUserAgent()> -> _SOURCE_
<com.android.inputmethod.latin.AdditionalSubtype: android.view.inputmethod.InputMethodSubtype[] createAdditionalSubtypesArray(java.lang.String)> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedCollection: com.google.common.collect.AbstractMultimap$WrappedCollection getAncestor()> -> _SOURCE_
<android.app.AppGlobals: android.app.Application getInitialApplication()> -> _SOURCE_
<android.drm.ProcessedData: byte[] getData()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String pktcntPoll()> -> _SOURCE_
<com.android.phone.InCallUiState: com.android.phone.Constants$CallStatusCode getPendingCallStatusCode()> -> _SOURCE_
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()> -> _SOURCE_
<android.view.ViewConfiguration: int getLongPressTimeout()> -> _SOURCE_
<com.android.contacts.activities.DialtactsActivity$PageChangeListener: int getCurrentPosition()> -> _SOURCE_
<java.io.File: java.lang.String getAbsolutePath()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getCursorPosition(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoTimeout()> -> _SOURCE_
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> -> _SOURCE_
<com.android.calendar.CalendarViewAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getDomStorageEnabled()> -> _SOURCE_
<android.provider.MediaStore$Files: android.net.Uri getMtpReferencesUri(java.lang.String,long)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<java.nio.HeapByteBuffer: float getFloat()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: int getVoiceMessageCount()> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.LayoutAnimationController access$100(android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getDefaultAccount()> -> _SOURCE_
<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)> -> _SOURCE_
<java.io.File: java.io.File getParentFile()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc mergeFrom(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentEncodingHeader createContentEncodingHeader(java.lang.String)> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()> -> _SOURCE_
<android.nfc.tech.IsoDep: byte[] transceive(byte[])> -> _SOURCE_
<com.android.deskclock.TimerSetupView: int getTime()> -> _SOURCE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getPreviousSibling()> -> _SOURCE_
<android.view.animation.AnimationSet: long getStartTime()> -> _SOURCE_
<java.lang.reflect.Constructor: int getModifiers()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()> -> _SOURCE_
<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)> -> _SOURCE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()> -> _SOURCE_
<android.content.pm.ComponentInfo: int getIconResource()> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition()> -> _SOURCE_
<com.android.emailcommon.provider.Account: android.net.Uri getShortcutSafeUriFromUuid(java.lang.String)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()> -> _SOURCE_
<android.net.http.RequestQueue: android.net.http.Request getRequest()> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])> -> _SOURCE_
<com.android.contacts.activities.ActionBarAdapter: int getCurrentTab()> -> _SOURCE_
<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: java.lang.String toString()> -> _SOURCE_
<com.android.server.am.ProcessList: long getMemLevel(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()> -> _SOURCE_
<java.util.AbstractSequentialList: java.lang.Object remove(int)> -> _SOURCE_
<android.net.InterfaceConfiguration: java.lang.String toString()> -> _SOURCE_
<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)> -> _SOURCE_
<java.io.File: java.lang.String getName()> -> _SOURCE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getSuffix()> -> _SOURCE_
<com.android.ex.chips.Queries$Query: android.net.Uri getContentUri()> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader)> -> _SOURCE_
<android.app.Notification$Builder: android.app.Notification getNotification()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixForParsing()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtrees: byte[] getEncoded()> -> _SOURCE_
<com.android.phone.PhoneGlobals: com.android.internal.telephony.PhoneConstants$State getPhoneState()> -> _SOURCE_
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.telephony.ITelephony getTelephonyService()> -> _SOURCE_
<android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()> -> _SOURCE_
<android.app.BackStackRecord: int getTransition()> -> _SOURCE_
<android.view.View: int getSuggestedMinimumWidth()> -> _SOURCE_
<android.os.UserManager: int getUserSerialNumber(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValueList getParameters()> -> _SOURCE_
<android.widget.ExpandableListConnector: int getItemViewType(int)> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Property: java.util.List getParameters(java.lang.String)> -> _SOURCE_
<com.android.exchange.EasSyncService: java.lang.String getTargetCollectionClassFromCursor(android.database.Cursor)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getUseCaches()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getConfigFile()> -> _SOURCE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getPeerHost()> -> _SOURCE_
<android.widget.CalendarView: int getUnfocusedMonthDateColor()> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: double getResolvedOffset()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: boolean getSpecified()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)> -> _SOURCE_
<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()> -> _SOURCE_
<com.android.phone.EditPhoneNumberPreference: java.lang.CharSequence getSummaryOn()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getCountView()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment: com.android.contacts.model.Contact getContactData()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: javax.net.ssl.SSLSession getSSLSession()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: int getTagNo()> -> _SOURCE_
<android.telephony.ServiceState: int getRadioTechnology()> -> _SOURCE_
<android.app.ContextImpl$2: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFromTag()> -> _SOURCE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<com.android.mms.ui.MessageItem: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()> -> _SOURCE_
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getAlgorithm()> -> _SOURCE_
<android.view.View: int getMinimumHeight()> -> _SOURCE_
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<android.view.View$6: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.DialogFilter: java.lang.String getProcessingInfo()> -> _SOURCE_
<android.os.Looper: android.os.MessageQueue getQueue()> -> _SOURCE_
<android.graphics.drawable.RotateDrawable$RotateState: int getChangingConfigurations()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaType()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.BiMap inverse()> -> _SOURCE_
<com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils: com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils getInstance()> -> _SOURCE_
<android.widget.LinearLayout: int getBaseline()> -> _SOURCE_
<com.android.exchange.EasResponse: org.apache.http.Header getHeader(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.animation.ValueAnimator: float getAnimatedFraction()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()> -> _SOURCE_
<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()> -> _SOURCE_
<com.android.inputmethod.compat.InputMethodManagerCompatWrapper: com.android.inputmethod.compat.InputMethodManagerCompatWrapper getInstance()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: boolean isKeyguardSecure()> -> _SOURCE_
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)> -> _SOURCE_
<android.content.Intent: java.lang.String toURI()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getPageNearestToPoint(float)> -> _SOURCE_
<com.android.browser.Tab: com.android.browser.Tab$SecurityState getSecurityState()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager: java.lang.String getFtsMatchQuery(java.lang.String,com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder)> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: int getLength()> -> _SOURCE_
<com.android.providers.contacts.util.SelectionBuilder: com.android.providers.contacts.util.SelectionBuilder addClause(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)> android.permission.WRITE_SOCIAL_STREAM -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)> -> _SOURCE_
<com.android.browser.SuggestionsAdapter$SuggestCursor: com.android.browser.SuggestionsAdapter$SuggestItem getItem()> -> _SOURCE_
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createACKRequest()> -> _SOURCE_
<com.android.internal.telephony.cat.ComprehensionTlv: byte[] getRawValue()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethodParam()> -> _SOURCE_
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()> -> _SOURCE_
<java.util.EnumMap$EnumMapValueCollection$1: java.lang.Object get(java.util.MapEntry)> -> _SOURCE_
<android.webkit.WebView$HitTestResult: int getType()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.ElementType type()> -> _SOURCE_
<java.net.URI: java.lang.String getRawFragment()> -> _SOURCE_
<com.android.internal.location.ILocationProvider$Stub$Proxy: long getStatusUpdateTime()> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean isInEmergencyCall()> -> _SOURCE_
<libcore.net.http.HttpEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()> -> _SOURCE_
<android.telephony.ServiceState: int getSystemId()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.WindowManager$LayoutParams getRecentsLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: byte[] decrypt(byte,byte[],int,int)> -> _SOURCE_
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()> -> _SOURCE_
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)> -> _SOURCE_
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)> -> _SOURCE_
<android.widget.ListPopupWindow: int getPromptPosition()> -> _SOURCE_
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()> -> _SOURCE_
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$Builder: com.android.inputmethod.keyboard.Keyboard build()> -> _SOURCE_
<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getPhoneticNameEditor()> -> _SOURCE_
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.account.AccountType$EditType getType()> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthority(int)> -> _SOURCE_
<java.util.ArrayList: java.lang.Object get(int)> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getName()> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter: int getItemViewType(int,int)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Message: android.content.ContentValues toContentValues()> -> _SOURCE_
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getURI(int)> -> _SOURCE_
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.String,boolean,boolean)> android.permission.STOP_APP_SWITCHES -> _SOURCE_|CONTACT_INFORMATION
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.widget.ActionBarView: android.view.View getCustomNavigationView()> -> _SOURCE_
<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodManager getInputMethodManager(android.content.Context)> -> _SOURCE_
<android.app.ContextImpl$39: java.lang.Object getService(android.app.ContextImpl)> -> _SOURCE_
<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1Number()> -> _SOURCE_
<com.android.internal.view.IInputMethodCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()> -> _SOURCE_
<com.android.calendar.Event: int getColumn()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageChannel access$000(gov.nist.javax.sip.stack.SIPTransaction)> -> _SOURCE_
<android.telephony.CellIdentityGsm: int getMcc()> -> _SOURCE_
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.statusbar.IStatusBarService getStatusBarService()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.apache.harmony.xml.dom.DocumentFragmentImpl createDocumentFragment()> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)> -> _SOURCE_
<com.android.internal.telephony.AdnRecord: java.lang.String getAlphaTag()> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker$TimeRecorder: long getLastLetterTypingTime()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: java.lang.Object clone()> -> _SOURCE_
<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])> -> _SOURCE_
<com.android.camera.ListPreference: java.lang.String getEntry()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()> -> _SOURCE_
<libcore.net.http.RawHeaders: libcore.net.http.RawHeaders getAll(java.util.Set)> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset$1$1: int getCount()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getPageNearestToCenterOfScreen()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getAllowFileAccessFromFileURLs()> -> _SOURCE_
<android.widget.RelativeLayout$LayoutParams: int[] getRules()> -> _SOURCE_
<android.content.ClipDescription: int getMimeTypeCount()> -> _SOURCE_
<android.text.StaticLayout: int getLineDescent(int)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSigAlgParams()> -> _SOURCE_
<android.widget.Editor$SelectionStartHandleView: android.widget.Editor$ActionPopupWindow getActionPopupWindow()> -> _SOURCE_
<com.android.browser.TitleBar: com.android.browser.PageProgressView getProgressView()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: float getPreference()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getG()> -> _SOURCE_
<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object getFirst()> -> _SOURCE_
<com.android.contacts.model.RawContact: long getVersion()> -> _SOURCE_
<com.android.i18n.phonenumbers.RegexCache: java.util.regex.Pattern getPatternForRegex(java.lang.String)> -> _SOURCE_
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getAddedCount()> -> _SOURCE_
<java.net.URL: java.lang.String toString()> -> _SOURCE_
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()> -> _SOURCE_
<android.text.StaticLayout: int getEllipsizedWidth()> -> _SOURCE_
<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getFirstHeader(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getUseClientMode()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: float getFloat()> -> _SOURCE_
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getExpandedViewMaxHeight()> -> _SOURCE_
<com.android.providers.calendar.CalendarInstancesHelper: java.lang.String getSyncIdKey(java.lang.String,long)> -> _SOURCE_
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String getCurrentKeyboardLayout()> -> _SOURCE_
<android.widget.TabHost: android.view.View getCurrentView()> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getService(java.lang.String)> -> _SOURCE_
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()> -> _SOURCE_
<android.media.Metadata: int getInt(int)> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)> -> _SOURCE_
<com.android.mms.data.WorkingMessage: java.lang.String getWorkingRecipients()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getOrientationFromAppTokensLocked()> -> _SOURCE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getHttpParams()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: com.android.internal.widget.LockPatternUtils getLockPatternUtils()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)> -> _SOURCE_
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.List)> -> _SOURCE_
<android.view.View: int getHorizontalFadingEdgeLength()> -> _SOURCE_
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardStatus$PinState PinStateFromRILInt(int)> -> _SOURCE_
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: java.util.List getActiveAdmins(int)> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance(java.util.Locale)> -> _SOURCE_
<android.net.NetworkInfo: int getSubtype()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeValue()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain)> -> _SOURCE_
<org.apache.harmony.security.x509.CRLDistributionPoints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()> -> _SOURCE_
<com.android.contacts.group.GroupBrowseListAdapter$GroupListItemViewCache: android.net.Uri getUri()> -> _SOURCE_
<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()> -> _SOURCE_
<android.app.ActivityOptions: int getAnimationType()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: int getOpacity()> -> _SOURCE_
<android.net.http.HttpsConnection$1: java.security.cert.X509Certificate[] getAcceptedIssuers()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.support.v4.view.ViewPager$SavedState: java.lang.String toString()> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getDSLLocation()> -> _SOURCE_
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker: int getMonth()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralSubtree: byte[] getEncoded()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Iterator entryIterator()> -> _SOURCE_
<android.os.StatFs: int getFreeBlocks()> -> _SOURCE_
<com.android.browser.Tab: java.util.Vector getChildren()> -> _SOURCE_
<org.apache.james.mime4j.field.address.MailboxList: org.apache.james.mime4j.field.address.Mailbox get(int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardMessageArea: java.lang.CharSequence getCurrentMessage()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters()> -> _SOURCE_
<android.telephony.SmsCbMessage: int getGeographicalScope()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getLongdesc()> -> _SOURCE_
<org.apache.james.mime4j.field.Field: java.lang.String toString()> -> _SOURCE_
<android.telephony.TelephonyManager: int getNetworkType()> -> _SOURCE_
<android.text.style.SuggestionSpan: int getSpanTypeId()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)> -> _SOURCE_
<java.text.RuleBasedCollator: java.lang.Object clone()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getWebsiteList()> -> _SOURCE_
<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerPath(java.lang.String)> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields()> -> _SOURCE_
<com.android.browser.Tab: android.webkit.WebView getWebView()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: com.android.emailcommon.provider.EmailContent$Body restoreBodyWithMessageId(android.content.Context,long)> -> _SOURCE_
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<android.webkit.WebViewInputDispatcher$TouchStream: android.view.MotionEvent getLastEvent()> -> _SOURCE_
<org.apache.harmony.security.x509.Time$1: java.lang.Object getObjectToEncode(java.lang.Object)> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)> android.permission.INTERNET -> _SOURCE_|FILE_INFORMATION
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getDepartment()> -> _SOURCE_
<android.text.BoringLayout: int getBottomPadding()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Component: java.lang.String toString()> -> _SOURCE_
<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaPrlVersion()> -> _SOURCE_
<android.net.sip.ISipService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.homepages.Template: com.android.browser.homepages.Template copy()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getColorEffect()> -> _SOURCE_
<gov.nist.javax.sip.stack.HopImpl: java.lang.String toString()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<com.android.mms.ui.MessageListAdapter: int getItemViewType(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionErrorEvent: int getErrorID()> -> _SOURCE_
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()> -> _SOURCE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getReadLockCount()> -> _SOURCE_
<java.security.MessageDigest: java.lang.String toString()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.browser.BreadCrumbView: java.lang.Object getTopData()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getViewTypeCount()> -> _SOURCE_
<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: java.lang.String getProductName()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set$1: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.Object clone()> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getCharset()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)> -> _SOURCE_
<com.android.mms.util.Recycler: int getMessageMaxLimit()> -> _SOURCE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: long getLong(int)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumHeight()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardPasswordView: int getPasswordTextViewId()> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()> -> _SOURCE_
<org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)> -> _SOURCE_
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()> -> _SOURCE_
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()> -> _SOURCE_
<android.net.wifi.WpsResult: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorFragment: android.database.Cursor access$1202(com.android.contacts.editor.ContactEditorFragment,android.database.Cursor)> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getEras()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()> -> _SOURCE_
<com.android.browser.SnapshotTab: long getDateCreated()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedGlobalNetworkCallingCodes()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)> -> _SOURCE_
<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()> -> _SOURCE_
<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap build()> -> _SOURCE_
<com.google.common.collect.Count: int getAndSet(int)> -> _SOURCE_
<com.android.phone.CdmaPhoneCallState: com.android.phone.CdmaPhoneCallState$PhoneCallState getCurrentCallState()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()> -> _SOURCE_
<java.util.UUID: long getMostSignificantBits()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()> -> _SOURCE_
<org.apache.harmony.security.x509.AccessDescription$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.view.DisplayInfo: java.lang.String toString()> -> _SOURCE_
<android.view.IOnKeyguardExitResult$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRecords: com.android.internal.util.StateMachine$LogRec get(int)> -> _SOURCE_
<android.content.pm.PathPermission: java.lang.String getWritePermission()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String encodeBody()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName,int)> -> _SOURCE_
<com.android.mms.util.Recycler: com.android.mms.util.Recycler$SmsRecycler getSmsRecycler()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])> android.permission.STOP_APP_SWITCHES -> _SOURCE_|NETWORK_INFORMATION
<com.android.settings.DataUsageSummary$WarningEditorFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.List getAllCellInfo()> -> _SOURCE_
<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)> -> _SOURCE_
<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()> -> _SOURCE_
<com.android.server.NsdService$NsdStateMachine: java.lang.String getWhatToString(int)> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getCompleteVoiceMailNumber()> -> _SOURCE_
<android.media.AudioService$VolumeStreamState: int getMaxIndex()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List getPreferredPackages(int)> -> _SOURCE_
<android.database.MatrixCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandlerForProfile(java.lang.String)> -> _SOURCE_
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.util.Set createElementSet()> -> _SOURCE_
<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String[] getKeyboardLayouts()> -> _SOURCE_
<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()> -> _SOURCE_
<gov.nist.core.Token: int getTokenType()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)> -> _SOURCE_
<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableMultimap build()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getCompleteVoiceMailNumber()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ProfileProvider newProfileProvider()> -> _SOURCE_
<android.webkit.WebViewClassic: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()> -> _SOURCE_
<libcore.io.StructPollfd: java.lang.String toString()> -> _SOURCE_
<android.nfc.NfcAdapter: int getSdkVersion()> -> _SOURCE_
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)> -> _SOURCE_
<java.security.Security: java.util.Set getAlgorithms(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHA()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: short getFillDefault()> -> _SOURCE_
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)> -> _SOURCE_
<android.view.DragEvent: android.content.ClipDescription getClipDescription()> -> _SOURCE_
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getSharedQueuedThreads()> -> _SOURCE_
<android.view.VelocityTracker: android.view.VelocityTracker getNextPoolable()> -> _SOURCE_
<android.app.IProcessObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.net.http.HttpConnection: java.net.Socket getSocket()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getPackageId(java.lang.String)> -> _SOURCE_
<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.database.CursorWrapper: float getFloat(int)> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.lang.String getComments()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: int getFeatureState()> -> _SOURCE_
<android.sax.Children: android.sax.Element getOrCreate(android.sax.Element,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.DataRowHandler: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getLastAudibleMasterVolume()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.ims.IsimRecords getIsimRecords()> -> _SOURCE_
<android.content.res.TypedArray: float getFraction(int,int,int,float)> -> _SOURCE_
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)> -> _SOURCE_
<android.net.NetworkTemplate: java.lang.String getSubscriberId()> -> _SOURCE_
<gov.nist.javax.sip.header.Reason: java.lang.String getName()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getMaximumFractionDigits()> -> _SOURCE_
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()> -> _SOURCE_
<java.net.Socks4Message: int getLength()> -> _SOURCE_
<android.media.Metadata: java.util.Set keySet()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)> -> _SOURCE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String getSubtype()> -> _SOURCE_
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])> -> _SOURCE_
<com.android.internal.telephony.CallManager: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPacketSourcePort()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> -> _SOURCE_
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNormalizedNumber()> -> _SOURCE_
<java.util.IdentityHashMap: java.util.Collection values()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: long getInstanceId(int)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String toString()> -> _SOURCE_
<java.net.InetSocketAddress: int getPort()> -> _SOURCE_
<com.android.exchange.adapter.PingParser: java.util.ArrayList getSyncList()> -> _SOURCE_
<android.widget.FastScroller: int getWidth()> -> _SOURCE_
<java.security.spec.EllipticCurve: java.math.BigInteger getA()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getLayoutInsets()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: int notifyTypedAgainAndGetFrequency()> -> _SOURCE_
<java.security.Provider$Service: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getPort()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getSansSerifFontFamily()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()> -> _SOURCE_
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)> -> _SOURCE_
<libcore.io.IoBridge: java.lang.Object getSocketOption(java.io.FileDescriptor,int)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getWidgetScheduledUpdateAction(android.content.Context)> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionary$UpdateBinaryTask: int getFrequency(java.lang.String,java.lang.String)> -> _SOURCE_
<java.security.cert.TrustAnchor: byte[] getNameConstraints()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String getNegativeSuffix()> -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpResponse receiveResponseHeader()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getName()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: long getIfModifiedSince()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|LOCATION_INFORMATION
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getData()> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getDisplayedDatetime(long,long,long,java.lang.String,boolean,android.content.Context)> -> _SOURCE_
<com.android.ex.chips.RecipientAlternatesAdapter: java.util.HashMap getMatchingRecipients(android.content.Context,java.util.ArrayList,int)> -> _SOURCE_
<android.os.Bundle: short[] getShortArray(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()> -> _SOURCE_
<com.android.browser.Controller: android.content.Context getContext()> -> _SOURCE_
<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: int getHeight()> -> _SOURCE_
<android.view.SurfaceView$4: android.graphics.Rect getSurfaceFrame()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String getMessage()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getPrefix()> -> _SOURCE_
<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: long getItemId(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralString: com.android.org.bouncycastle.asn1.DERGeneralString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.widget.SearchView: int getImeOptions()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCode(int)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getFullName()> -> _SOURCE_
<android.net.wifi.WifiManager: int getWifiApState()> -> _SOURCE_
<com.android.internal.content.PackageMonitor: int getChangingUserId()> -> _SOURCE_
<java.nio.ShortArrayBuffer: short get(int)> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: float getRepeatDur()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.ElementType parent()> -> _SOURCE_
<java.net.InetAddress: java.lang.String getHostAddress()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl$1: int getUtf16Offset()> -> _SOURCE_
<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)> -> _SOURCE_
<android.database.CursorWindow: byte[] getBlob(int,int)> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView: com.android.internal.widget.ScrollingTabContainerView$TabView access$300(com.android.internal.widget.ScrollingTabContainerView,android.app.ActionBar$Tab,boolean)> -> _SOURCE_
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> android.permission.RECEIVE_SMS -> _SOURCE_|SMS_MMS
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeName()> -> _SOURCE_
<com.android.internal.telephony.AdnRecord: java.lang.String[] getEmails()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimImsimLoaded: java.lang.String getEfName()> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getDisposition()> -> _SOURCE_
<com.android.music.MusicUtils: int getCurrentShuffleMode()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getLayoutDirection()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> -> _SOURCE_
<libcore.io.ForwardingOs: java.net.InetAddress inet_pton(int,java.lang.String)> -> _SOURCE_
<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getUuids()> -> _SOURCE_
<libcore.io.ForwardingOs: long lseek(java.io.FileDescriptor,long,int)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: int getReadReport()> -> _SOURCE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String getUser()> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()> -> _SOURCE_
<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.Key getKey()> -> _SOURCE_
<android.net.wifi.WifiStateMachine: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromIterator(java.util.Iterator)> -> _SOURCE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String getPassword()> -> _SOURCE_
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()> -> _SOURCE_
<android.webkit.WebBackForwardList: int getCurrentIndex()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher precomputed()> -> _SOURCE_
<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()> -> _SOURCE_
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getNoLanguageSubtype()> -> _SOURCE_
<java.util.jar.Attributes$Name: java.lang.String getName()> -> _SOURCE_
<java.util.ServiceLoader: java.lang.String toString()> -> _SOURCE_
<com.android.mms.data.Conversation: long getThreadId()> -> _SOURCE_
<android.view.inputmethod.InputBinding: java.lang.String toString()> -> _SOURCE_
<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()> -> _SOURCE_
<android.graphics.Bitmap: byte[] getNinePatchChunk()> -> _SOURCE_
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> -> _SOURCE_
<android.view.MotionEvent: float getRawY()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getNetworkOperator()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPDate: int getHour()> -> _SOURCE_
<android.net.sip.SipManager: boolean isOpened(java.lang.String)> -> _SOURCE_
<java.net.URI: java.net.URL toURL()> -> _SOURCE_
<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForNonGeoEntity(int)> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()> -> _SOURCE_
<com.android.emailcommon.service.ServiceProxy: com.android.emailcommon.service.ServiceProxy$ProxyTask access$300(com.android.emailcommon.service.ServiceProxy)> -> _SOURCE_
<java.util.BitSet: byte[] toByteArray()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: long getExpirationTime()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: java.lang.CharSequence getText(java.lang.Object)> -> _SOURCE_
<android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()> -> _SOURCE_
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(int)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: int getInt(int)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText()> -> _SOURCE_
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<android.webkit.WebSettings: int getDefaultFixedFontSize()> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl: java.util.List getStatusMessages(android.database.Cursor)> -> _SOURCE_
<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.net.ThrottleManager: long getResetTime(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getType()> -> _SOURCE_
<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int)> -> _SOURCE_
<android.webkit.ZoomManager: android.view.View getExternalZoomPicker()> -> _SOURCE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.SipAddressDataItem: int getType()> -> _SOURCE_
<org.apache.http.client.methods.HttpPost: java.lang.String getMethod()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CallTracker getCallTracker()> -> _SOURCE_
<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)> -> _SOURCE_
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMergeId()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> -> _SOURCE_
<com.android.providers.contacts.ContactDirectoryManager: com.android.providers.contacts.ContactsDatabaseHelper getDbHelper()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCurrentCountryIso()> -> _SOURCE_
<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.ProximityInfo getProximityInfo()> -> _SOURCE_
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()> -> _SOURCE_
<com.google.android.mms.pdu.SendConf: byte[] getMessageId()> -> _SOURCE_
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.calendar.CalendarEventModel$Attendee: java.lang.String getDisplayName()> -> _SOURCE_
<java.nio.FloatArrayBuffer: float get(int)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeNamespace(int)> -> _SOURCE_
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ErrorInfoList getErrorInfoHeaders()> -> _SOURCE_
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()> -> _SOURCE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.Iterator getContents()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)> -> _SOURCE_
<java.nio.DirectByteBuffer: float getFloat()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)> -> _SOURCE_
<java.security.AccessController: java.security.AccessControlContext getContext()> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getScheme()> -> _SOURCE_
<android.filterfw.core.NativeFrame: int getCapacity()> -> _SOURCE_
<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype(android.content.Context,android.view.inputmethod.InputMethodSubtype)> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getVerticalGap()> -> _SOURCE_
<com.android.ex.chips.RecipientChip: com.android.ex.chips.RecipientEntry getEntry()> -> _SOURCE_
<android.database.AbstractWindowedCursor: java.lang.String getString(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String encodeBody()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone getActivePhone()> -> _SOURCE_
<android.location.LocationProvider: int getPowerRequirement()> -> _SOURCE_
<android.view.DragEvent: int getAction()> -> _SOURCE_
<android.net.http.HttpConnection: java.lang.String getScheme()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent restoreContentWithId(android.content.Context,java.lang.Class,android.net.Uri,java.lang.String[],long)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()> -> _SOURCE_
<android.widget.Filter: java.lang.Object access$300(android.widget.Filter)> -> _SOURCE_
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.EncodedStringValue getFrom()> -> _SOURCE_
<com.android.mms.model.RegionModel: int getTop()> -> _SOURCE_
<android.nfc.tech.IsoDep: boolean isConnected()> -> _SOURCE_
<com.android.contacts.model.dataitem.WebsiteDataItem: java.lang.String getLabel()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getExposureCompensation()> -> _SOURCE_
<android.net.wifi.WifiNative: java.lang.String listNetworks()> -> _SOURCE_
<android.media.MediaRouter$UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()> -> _SOURCE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getSentBy()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getRequestProperties()> -> _SOURCE_
<java.nio.DirectByteBuffer: long getLong(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String,boolean)> -> _SOURCE_
<android.app.backup.BackupDataInputStream: java.lang.String getKey()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)> -> _SOURCE_
<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)> -> _SOURCE_
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.LazyEncodedSequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap of()> -> _SOURCE_
<com.android.camera.IconListPreference: int[] getLargeIconIds()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getFirst()> -> _SOURCE_
<libcore.io.StructTimeval: long toMillis()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: android.telephony.CellSignalStrength copy()> -> _SOURCE_
<com.android.contacts.editor.GroupMembershipView$GroupSelectionItem: java.lang.String toString()> -> _SOURCE_
<org.apache.http.message.BasicHeader: org.apache.http.HeaderElement[] getElements()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)> -> _SOURCE_
<android.view.AbsSavedState: android.os.Parcelable getSuperState()> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()> -> _SOURCE_
<android.widget.Editor$EasyEditPopupWindow: int getVerticalLocalPosition(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getDisplayZoomControls()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String getPositivePrefix()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getFit()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Encodable[] toArray()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()> -> _SOURCE_
<java.security.SecureRandom: java.security.Provider getProvider()> -> _SOURCE_
<com.android.providers.downloads.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.ProximityInfo: com.android.inputmethod.keyboard.ProximityInfo createSpellCheckerProximityInfo(int[],int,int,int)> -> _SOURCE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.Locale: java.lang.String getISO3Language()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getLoadsImagesAutomatically()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])> -> _SOURCE_
<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicWidth()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.BluetoothEventManager getEventManager()> -> _SOURCE_
<com.android.internal.telephony.IccIoResult: java.lang.String toString()> -> _SOURCE_
<android.widget.ListPopupWindow: int getVerticalOffset()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> -> _SOURCE_
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getInvitableAccountTypes()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Exception: java.lang.Throwable getCause()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: long getEventTime()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: int getMovementGranularities(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.Object getParent(java.lang.Object)> -> _SOURCE_
<android.accounts.AccountManager: android.os.Handler access$600(android.accounts.AccountManager)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<com.android.server.wm.WindowAnimator: com.android.server.wm.ScreenRotationAnimation getScreenRotationAnimationLocked(int)> -> _SOURCE_
<com.android.server.AppWidgetServiceImpl: android.widget.RemoteViews getAppWidgetViews(int)> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: long getItemId(int)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList: org.apache.harmony.security.x509.TBSCertList getTbsCertList()> -> _SOURCE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()> -> _SOURCE_
<android.drm.DrmEvent: int getType()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetDescriptionsResourceId()> -> _SOURCE_
<java.util.AbstractList: java.lang.Object remove(int)> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: java.lang.Object clone()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerCount(android.view.MotionEvent)> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()> -> _SOURCE_
<com.android.contacts.editor.KindSectionView: int getEditorCount()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getText()> -> _SOURCE_
<com.android.providers.contacts.ContactDirectoryManager: java.lang.String providerDescription(android.content.pm.ProviderInfo)> -> _SOURCE_
<java.util.HashMap: java.lang.Object clone()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: int getHeight()> -> _SOURCE_
<android.text.style.StrikethroughSpan: int getSpanTypeId()> -> _SOURCE_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.emailcommon.mail.PackedString: java.lang.String get(java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForEmail()> -> _SOURCE_
<android.app.Fragment: android.app.Fragment getParentFragment()> -> _SOURCE_
<com.android.emailcommon.service.IAccountService$Stub$Proxy: java.lang.String getDeviceId()> -> _SOURCE_
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)> -> _SOURCE_
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getBackupSecurityMode(com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode)> -> _SOURCE_
<com.android.emailcommon.mail.Message: java.lang.String toString()> -> _SOURCE_
<gov.nist.core.NameValueList: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: long getFirstVisibleTime(com.android.calendar.agenda.AgendaWindowAdapter$EventInfo)> -> _SOURCE_
<android.view.View: int getLayerType()> -> _SOURCE_
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()> -> _SOURCE_
<com.android.browser.Controller: int getDesiredThumbnailWidth(android.content.Context)> -> _SOURCE_
<java.util.FormatFlagsConversionMismatchException: java.lang.String getFlags()> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getAccountName()> -> _SOURCE_
<android.view.InputDevice: java.util.List getMotionRanges()> -> _SOURCE_
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> -> _SOURCE_
<java.nio.charset.CharsetEncoder: byte[] replacement()> -> _SOURCE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)> -> _SOURCE_
<com.android.ex.chips.RecipientAlternatesAdapter: com.android.ex.chips.RecipientEntry getRecipientEntry(int)> -> _SOURCE_
<com.android.providers.contacts.AbstractContactsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Primitive getExternalContent()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: com.android.internal.telephony.IccCardConstants$State getSimState()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.lang.String toString()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndColumn()> -> _SOURCE_
<com.android.settings.DataUsageSummary$DataUsageAdapter: long getItemId(int)> -> _SOURCE_
<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem(java.lang.String,long,android.database.Cursor)> -> _SOURCE_
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String encode()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getToken(int)> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: int getType()> -> _SOURCE_
<org.apache.james.mime4j.field.Field: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.security.x501.AttributeValue: int getTag()> -> _SOURCE_
<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getCurrentPage()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: int getHash()> -> _SOURCE_
<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)> -> _SOURCE_
<com.android.emailcommon.provider.Account: int getSyncLookback()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.UnmodifiableIterator valueIterator()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()> -> _SOURCE_
<com.android.browser.provider.SQLiteContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SOURCE_
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Join: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> -> _SOURCE_
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getLocalPrincipal()> -> _SOURCE_
<android.text.Editable$Factory: android.text.Editable$Factory getInstance()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> -> _SOURCE_
<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getTitle()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<libcore.net.url.JarURLConnectionImpl: java.lang.String getContentType()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getTimeAtCpuSpeedStep(int,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmServiceStateTracker: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<java.util.zip.Inflater: int getTotalOut()> -> _SOURCE_
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()> -> _SOURCE_
<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getStats(int)> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.res.ObbInfo getObbInfo(java.lang.String)> -> _SOURCE_
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] getChangeCipherSpecMesage(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)> -> _SOURCE_
<java.nio.LongArrayBuffer: java.nio.LongBuffer get(long[],int,int)> -> _SOURCE_
<android.webkit.HTML5VideoView: boolean getStartWhenPrepared()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPhoneNumber()> -> _SOURCE_
<android.os.ParcelUuid: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec: java.lang.String toString()> -> _SOURCE_
<android.net.rtp.AudioGroup: int getMode()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()> -> _SOURCE_
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.PduBody getBody()> -> _SOURCE_
<java.util.IllegalFormatFlagsException: java.lang.String getMessage()> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getCount()> -> _SOURCE_
<com.android.browser.BrowserSettings: com.android.browser.search.SearchEngine getSearchEngine()> -> _SOURCE_
<org.apache.harmony.security.x509.Extension$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)> -> _SOURCE_
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCard getUiccCard()> -> _SOURCE_
<java.util.TreeMap$NavigableSubMap: java.util.Set entrySet()> -> _SOURCE_
<android.app.Notification$BigPictureStyle: android.app.Notification build()> -> _SOURCE_
<com.android.browser.TabScrollView: android.view.View getSelectedTab()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()> -> _SOURCE_
<java.lang.Float: byte byteValue()> -> _SOURCE_
<org.apache.harmony.xml.dom.TextImpl: short getNodeType()> -> _SOURCE_
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: boolean isPlaying()> -> _SOURCE_
<org.apache.http.message.BasicHeader: java.lang.String toString()> -> _SOURCE_
<android.preference.GenericInflater: android.content.Context getContext()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralNames$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: byte[] getTransactionId()> -> _SOURCE_
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: java.lang.String getTitle()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RouteList getRouteHeaders()> -> _SOURCE_
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)> android.permission.WRITE_SETTINGS -> _SOURCE_
<android.app.ContextImpl: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> -> _SOURCE_
<java.util.zip.ZipEntry: java.lang.String getName()> -> _SOURCE_
<android.emoji.EmojiFactory: java.lang.String name()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: boolean getRequiresReload()> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)> -> _SOURCE_
<gov.nist.core.MultiValueMapImpl: java.util.Set entrySet()> -> _SOURCE_
<android.view.IInputFilterHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.NetworkStatsHistory: long getTotalBytes()> -> _SOURCE_
<com.android.mms.dom.smil.ElementTimeImpl: short getFill()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl$ProxyConnectEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity getValidity()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.Path: java.lang.String encodeBody()> -> _SOURCE_
<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: java.util.List getText(java.lang.Object)> -> _SOURCE_
<java.net.URLConnection: java.util.Map getRequestProperties()> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toHours(long)> -> _SOURCE_
<com.android.uiautomator.core.QueryController: java.lang.String getCurrentPackageName()> -> _SOURCE_
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()> -> _SOURCE_
<com.android.calendar.AsyncQueryServiceHelper$OperationInfo: long getDelay(java.util.concurrent.TimeUnit)> -> _SOURCE_
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.DataRowHandlerForOrganization: int getTypeRank(int)> -> _SOURCE_
<java.lang.BootClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet: com.android.inputmethod.keyboard.internal.KeyStyle getKeyStyle(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebView getWebView()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getNamespaceURI()> -> _SOURCE_
<gov.nist.javax.sip.header.AlertInfo: java.lang.Object clone()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getIfModifiedSince()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getContainerId()> -> _SOURCE_
<java.util.BitSet: java.util.BitSet get(int,int)> -> _SOURCE_
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getName()> -> _SOURCE_
<android.view.MotionEvent: int getEdgeFlags()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> -> _SOURCE_
<com.android.mms.model.MediaModel: java.lang.String getSrc()> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()> -> _SOURCE_
<android.webkit.WebViewClassic: int getHeight()> -> _SOURCE_
<java.util.zip.ZipEntry: long getCompressedSize()> -> _SOURCE_
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()> -> _SOURCE_
<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getAttributeName(int)> -> _SOURCE_
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])> -> _SOURCE_
<android.widget.NumberPicker: boolean getWrapSelectorWheel()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getNeedClientAuth()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getCipherSuite()> -> _SOURCE_
<gov.nist.core.MultiValueMapImpl: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: java.lang.String getTextContent()> -> _SOURCE_
<android.app.SearchManager: boolean isVisible()> -> _SOURCE_
<com.android.providers.contacts.ReorderingCursorWrapper: int getType(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getAlgorithm()> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)> -> _SOURCE_
<android.view.View$11: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.browser.AddBookmarkPage$BookmarkAccount: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String encode()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()> -> _SOURCE_
<com.android.server.MountService: int getEncryptionState()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeNameResource(int)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment$SettingsDialogFragment: int getDialogId()> -> _SOURCE_
<com.android.inputmethod.latin.LatinIME: android.view.View onCreateInputView()> -> _SOURCE_
<android.view.View: int getScrollBarFadeDuration()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: int getVisible(int)> -> _SOURCE_
<android.app.ISearchManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)> -> _SOURCE_
<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)> -> _SOURCE_
<com.android.browser.BrowserSettings: android.webkit.WebSettings$PluginState getPluginState()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: android.graphics.drawable.Drawable getDisplayIcon(android.content.Context)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object getLast(java.util.Iterator,java.lang.Object)> -> _SOURCE_
<android.view.View: float getPivotX()> -> _SOURCE_
<com.android.phone.CallerInfoCache: com.android.phone.CallerInfoCache$CacheEntry getCacheEntry(java.lang.String)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock$Sync: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNumber()> -> _SOURCE_
<gov.nist.javax.sip.header.UserAgent: java.lang.String encodeBody()> -> _SOURCE_
<android.widget.Scroller: int getDuration()> -> _SOURCE_
<android.location.Address: java.lang.String getPhone()> -> _SOURCE_
<android.filterfw.core.StreamPort: android.filterfw.core.Frame pullFrame()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()> -> _SOURCE_
<android.webkit.WebStorage$Origin: long getQuota()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForOrganization()> -> _SOURCE_
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry(java.lang.Long)> -> _SOURCE_
<android.app.Dialog: int getVolumeControlStream()> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: int getStatusCode()> -> _SOURCE_
<android.view.InputDevice: java.lang.String getName()> -> _SOURCE_
<android.view.MotionEvent: long getHistoricalEventTime(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ExpiresHeader getExpires()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptimeMs()> -> _SOURCE_
<com.android.internal.database.SortCursor: short getShort(int)> -> _SOURCE_
<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.emailcommon.internet.MimeHeader: java.lang.String getFirstHeader(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormat: int getMultiplier()> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: byte[] getContentDisposition()> -> _SOURCE_
<android.preference.Preference: java.lang.CharSequence getSummary()> -> _SOURCE_
<java.net.URLConnection: boolean getAllowUserInteraction()> -> _SOURCE_
<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumWidth()> -> _SOURCE_
<java.lang.VMClassLoader: java.util.List getResources(java.lang.String)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)> -> _SOURCE_
<android.view.InputDevice: int[] getDeviceIds()> -> _SOURCE_
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getWriteHoldCount()> -> _SOURCE_
<com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri getAttachmentThumbnailUri(long,long,int,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isBound()> -> _SOURCE_
<java.net.URLConnection: java.lang.Object getContent()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getCurrentDataConnectionState()> -> _SOURCE_
<android.content.Context: int getThemeResId()> -> _SOURCE_
<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()> -> _SOURCE_
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.View getCustomView()> -> _SOURCE_
<com.android.vcard.VCardEntry$NicknameData: java.lang.String toString()> -> _SOURCE_
<android.view.MotionEvent: float getTouchMajor(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment restoreAttachmentWithId(android.content.Context,long)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider getGpsStatusProvider()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetProvider: android.app.PendingIntent getUpdateIntent(android.content.Context)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: java.util.Set getAvailableEncodingSet()> -> _SOURCE_
<android.net.NetworkTemplate: java.lang.String getNetworkId()> -> _SOURCE_
<android.webkit.CertTool: java.lang.String[] getKeyStrengthList()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getAboveUniverseLayer()> -> _SOURCE_
<com.android.camera.ComboPreferences: float getFloat(java.lang.String,float)> -> _SOURCE_
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()> -> _SOURCE_
<java.lang.Class: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<android.widget.ProgressBar: int getProgress()> -> _SOURCE_
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()> -> _SOURCE_
<android.telephony.CellInfoLte: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)> -> _SOURCE_
<java.net.URI: java.lang.String getRawPath()> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)> -> _SOURCE_
<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$Builder: com.android.inputmethod.keyboard.Keyboard build()> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getSubscriberId()> -> _SOURCE_
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> -> _SOURCE_
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getSubscriberId()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledCipherSuites()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|SYSTEM_SETTINGS
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ClientSessionContext getClientSessionContext()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getHost()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: int hashCode()> -> _SOURCE_
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<com.android.mms.data.Contact: android.graphics.drawable.Drawable getAvatar(android.content.Context,android.graphics.drawable.Drawable)> -> _SOURCE_
<libcore.icu.LocaleData: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.utility.Utility$4: java.lang.Integer get(android.database.Cursor,int)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: long getItemId(int)> -> _SOURCE_
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> -> _SOURCE_
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)> -> _SOURCE_
<java.lang.Character: byte getDirectionality(char)> -> _SOURCE_
<android.app.ListFragment: android.widget.ListView getListView()> -> _SOURCE_
<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()> -> _SOURCE_
<android.accessibilityservice.UiTestAutomationBridge: java.util.List findAccessibilityNodeInfosByTextInActiveWindow(java.lang.String)> -> _SOURCE_
<com.android.systemui.statusbar.phone.QuickSettingsTileView: int getColumnSpan()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> -> _SOURCE_
<android.widget.RemoteViews$ViewPaddingAction: java.lang.String getActionName()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.Thread getOwner()> -> _SOURCE_
<android.net.http.Headers: java.util.ArrayList getSetCookie()> -> _SOURCE_
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])> -> _SOURCE_
<com.android.mms.model.RegionMediaModel: com.android.mms.model.RegionModel getRegion()> -> _SOURCE_
<java.net.URI: java.lang.String getUserInfo()> -> _SOURCE_
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()> -> _SOURCE_
<android.os.Environment: java.io.File getRootDirectory()> -> _SOURCE_
<com.android.internal.database.SortCursor: boolean isNull(int)> -> _SOURCE_
<android.view.GLES20Canvas: int getStencilSize()> -> _SOURCE_
<libcore.icu.CollationElementIteratorICU: int getMaxExpansion(int)> -> _SOURCE_
<android.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: int indexOf(java.lang.Object)> -> _SOURCE_
<libcore.io.EventLogger: libcore.io.EventLogger$Reporter getReporter()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(double)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)> -> _SOURCE_
<com.android.contacts.GroupMetaData: java.lang.String getTitle()> -> _SOURCE_
<android.net.NetworkTemplate: java.lang.String toString()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean,java.lang.String)> -> _SOURCE_
<java.math.BigInteger: float floatValue()> -> _SOURCE_
<android.security.KeyStore: byte[] getPubkey(java.lang.String)> -> _SOURCE_
<android.animation.Keyframe: java.lang.Class getType()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<com.google.common.collect.DiscreteDomain: java.lang.Comparable maxValue()> -> _SOURCE_
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object)> -> _SOURCE_
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: char getShortcut()> -> _SOURCE_
<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)> -> _SOURCE_
<com.android.mms.MmsConfig: java.lang.String getHttpParamsLine1Key()> -> _SOURCE_
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Map backingMap()> -> _SOURCE_
<android.app.ContextImpl: android.content.Context getOuterContext()> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getItemViewType(int)> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getHeadersCount()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsHexInt(java.lang.String)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: int getPrefix(int)> -> _SOURCE_
<android.telephony.CellInfo: java.lang.String toString()> -> _SOURCE_
<android.location.Geofence: double getLatitude()> -> _SOURCE_
<com.android.internal.telephony.DataConnection: int getRetryTimer()> -> _SOURCE_
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)> -> _SOURCE_
<android.media.AudioManager: int getLastAudibleMasterVolume()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox getMailboxForPath(android.content.Context,long,java.lang.String)> -> _SOURCE_
<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.content.res.CompatibilityInfo)> -> _SOURCE_
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalOrientation(int,int)> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: int getColor()> -> _SOURCE_
<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getFromTag()> -> _SOURCE_
<org.apache.http.message.BufferedHeader: java.lang.String getName()> -> _SOURCE_
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageObbDirectory()> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getReturnCallIntentProvider(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.TelephoneNumber getTelephoneSubscriber()> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: int getSignalStrengthLevelAsu()> -> _SOURCE_
<gov.nist.core.MultiValueMapImpl: boolean isEmpty()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteAsuLevel()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: long getCreateTime()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.WWWAuthenticateHeader createWWWAuthenticateHeader(java.lang.String)> -> _SOURCE_
<com.android.server.location.PassiveProvider: com.android.internal.location.ProviderProperties getProperties()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|LOCATION_INFORMATION
<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getRadius()> -> _SOURCE_
<com.android.server.display.HeadlessDisplayAdapter$HeadlessDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quart$1: float getInterpolation(float)> -> _SOURCE_
<com.google.common.collect.TreeMultiset$LiveEntry: java.lang.Object getElement()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int)> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> -> _SOURCE_
<android.preference.EditTextPreference: android.widget.EditText getEditText()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: boolean isChallengeOverlapping()> -> _SOURCE_
<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getChildIndexForRelativeOffset(int)> -> _SOURCE_
<com.android.calendar.Utils: boolean getSharedPreference(android.content.Context,java.lang.String,boolean)> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: java.lang.String getEfName()> -> _SOURCE_
<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()> -> _SOURCE_
<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<libcore.io.ForwardingOs: int geteuid()> -> _SOURCE_
<com.android.vcard.VCardEntry$IsIgnorableIterator: boolean getResult()> -> _SOURCE_
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RectShape clone()> -> _SOURCE_
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()> -> _SOURCE_
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getViewTypeCount()> -> _SOURCE_
<java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()> -> _SOURCE_
<android.renderscript.Element: int getSubElementOffsetBytes(int)> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector: int getDistanceFromDownEvent(int,int)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: java.lang.String getString(android.content.res.TypedArray,int)> -> _SOURCE_
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] getApplicationData()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.lang.String toString()> -> _SOURCE_
<com.android.exchange.adapter.ProvisionParser: java.lang.String getSecuritySyncKey()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getSMSDeliveryReportsEnabled()> -> _SOURCE_
<android.os.Looper: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnection getDataConnection()> -> _SOURCE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()> -> _SOURCE_
<android.widget.GridView: int getNumColumns()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Shader getShader()> -> _SOURCE_
<java.util.jar.JarFile: java.util.Enumeration entries()> -> _SOURCE_
<com.android.mms.ui.ManageSimMessages: android.database.Cursor access$100(com.android.mms.ui.ManageSimMessages)> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentDispositionHeader getContentDisposition()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: int getWordFrequency(java.lang.CharSequence)> -> _SOURCE_
<android.content.BroadcastReceiver: java.lang.String getResultData()> -> _SOURCE_
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()> -> _SOURCE_
<com.android.calendar.CalendarEventModel: java.lang.String getAttendeesString()> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getItemCount(java.lang.Object)> -> _SOURCE_
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()> -> _SOURCE_
<com.android.internal.util.AsyncService: int onStartCommand(android.content.Intent,int,int)> -> _SOURCE_
<com.android.internal.telephony.Connection: java.lang.Object getUserData()> -> _SOURCE_
<android.view.View: int getTopPaddingOffset()> -> _SOURCE_
<com.android.browser.BaseUi: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.security.Principal getIssuerDN()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$RelationActionInflater: int getTypeLabelResource(java.lang.Integer)> -> _SOURCE_
<java.util.EnumMap: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNamespaceURI()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()> -> _SOURCE_
<com.android.mms.util.Recycler$SmsRecycler: long getThreadId(android.database.Cursor)> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker softValues()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: java.lang.String getValue()> -> _SOURCE_
<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()> -> _SOURCE_
<android.content.pm.IPackageMoveObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.lang.Character: int getType(char)> -> _SOURCE_
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.net.ConnectivityManager: boolean isTetheringSupported()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()> -> _SOURCE_
<android.os.SystemProperties: int getInt(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.xml.dom.CommentImpl: java.lang.String getNodeName()> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[])> -> _SOURCE_
<libcore.net.http.HttpsHandler: int getDefaultPort()> -> _SOURCE_
<java.util.Formatter$FormatToken: char getConversionType()> -> _SOURCE_
<com.google.common.collect.Maps$KeySet: boolean isEmpty()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader remove(int)> -> _SOURCE_
<android.media.IRemoteControlDisplay$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getMasterStreamType()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getLength()> -> _SOURCE_
<com.android.contacts.model.RawContactDeltaList: java.lang.Long getRawContactId(int)> -> _SOURCE_
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.http.Headers: java.lang.String getLocation()> -> _SOURCE_
<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.net.wifi.WifiStateMachine: android.net.DhcpInfo syncGetDhcpInfo()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: boolean isDiscovering()> -> _SOURCE_
<android.database.CursorWrapper: int getType(int)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: byte[] getBlob(int)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)> -> _SOURCE_
<android.text.method.TimeKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<android.content.ContentResolver: java.util.List getCurrentSyncs()> -> _SOURCE_
<android.preference.Preference: android.content.Context getContext()> -> _SOURCE_
<android.bluetooth.BluetoothServerSocket: int getChannel()> -> _SOURCE_
<com.android.internal.telephony.sip.SipCallBase: java.util.List getConnections()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: java.lang.String getUrl()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getAcceptLanguage()> -> _SOURCE_
<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int,java.net.InetAddress)> -> _SOURCE_
<android.app.UiModeManager: int getNightMode()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: int getResponseCode()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getAddress()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getBandwidthTypes()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getWindowId()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfPlLoaded: java.lang.String getEfName()> -> _SOURCE_
<java.util.ResourceBundle$NoFallbackControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String,java.lang.Integer)> -> _SOURCE_
<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getYear()> -> _SOURCE_
<java.util.TreeMap: java.util.NavigableSet navigableKeySet()> -> _SOURCE_
<com.android.mms.model.SlideModel: java.util.Iterator iterator()> -> _SOURCE_
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()> -> _SOURCE_
<com.google.common.collect.Ordering: java.util.List sortedCopy(java.lang.Iterable)> -> _SOURCE_
<android.animation.LayoutTransition: java.util.List getTransitionListeners()> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.WebStorage getWebStorage()> -> _SOURCE_
<android.content.ComponentName: java.lang.String toString()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)> -> _SOURCE_|SYSTEM_SETTINGS
<android.graphics.Canvas: android.graphics.Rect getClipBounds()> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: java.lang.String localName()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.lang.String getBirthday()> -> _SOURCE_
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> -> _SOURCE_
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)> -> _SOURCE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getLocalName(int)> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructStat fstat(java.io.FileDescriptor)> -> _SOURCE_
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)> -> _SOURCE_
<android.widget.TabHost$FactoryContentStrategy: android.view.View getContentView()> -> _SOURCE_
<com.android.mms.data.Contact: com.android.mms.data.Contact get(java.lang.String,boolean)> -> _SOURCE_
<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SOURCE_
<android.media.AudioService$VolumeStreamState: int getStreamType()> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getNeedClientAuth()> -> _SOURCE_
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getMimetype()> -> _SOURCE_
<android.net.http.HttpsConnection: java.lang.String toString()> -> _SOURCE_
<android.nfc.NdefMessage: byte[] toByteArray()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()> -> _SOURCE_
<java.util.Calendar: long getTimeInMillis()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,byte[])> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getCount()> -> _SOURCE_
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<java.io.EmulatedFieldsForLoading: java.lang.Object get(java.lang.String,java.lang.Object)> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor buildSingleRowResult(java.lang.String[],java.lang.String[],java.lang.Object[])> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaSubType()> -> _SOURCE_
<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: int getAttributeCount()> -> _SOURCE_
<dalvik.system.profiler.HprofData$StackTrace: int getThreadId()> -> _SOURCE_
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])> -> _SOURCE_
<android.text.style.QuoteSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.vcard.VCardUtils: com.android.vcard.VCardParser getAppropriateParser(int)> -> _SOURCE_
<android.text.Layout: int getLineForOffset(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getSid()> -> _SOURCE_
<com.android.contacts.list.ContactsSectionIndexer: java.lang.Object[] getSections()> -> _SOURCE_
<java.util.concurrent.Semaphore$Sync: int getPermits()> -> _SOURCE_
<android.app.IAlarmManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeadersAsEncodedStrings()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<android.widget.SimpleAdapter: int getCount()> -> _SOURCE_
<com.android.vcard.VCardEntry$AnniversaryData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode()> -> _SOURCE_
<com.android.camera.Util: android.hardware.Camera$Size getOptimalPreviewSize(android.app.Activity,java.util.List,double)> -> _SOURCE_
<com.android.ex.chips.Queries$Query: java.lang.String[] getProjection()> -> _SOURCE_
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)> -> _SOURCE_
<java.net.MulticastSocket: int getTimeToLive()> -> _SOURCE_
<org.apache.http.entity.HttpEntityWrapper: boolean isRepeatable()> -> _SOURCE_
<java.net.URI: java.lang.String getRawUserInfo()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.dataitem.DataKind getKind()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getViaHost()> -> _SOURCE_
<android.nfc.NdefRecord: java.lang.String toString()> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getFirstVisibleEvent()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet of()> -> _SOURCE_
<com.android.mms.ui.MessageItem: int getBoxId()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle$Control)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> -> _SOURCE_
<android.content.pm.ParceledListSlice: android.os.Parcelable populateList(java.util.List,android.os.Parcelable$Creator)> -> _SOURCE_
<android.os.Bundle: double[] getDoubleArray(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolVersion()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)> -> _SOURCE_
<com.android.server.wm.WindowState: com.android.server.wm.WindowList getWindowList()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence getMessage()> -> _SOURCE_
<android.widget.TextView: int getShadowColor()> -> _SOURCE_
<com.android.emailcommon.provider.Account: long getAccountIdForMessageId(android.content.Context,long)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: int getGroupId()> -> _SOURCE_
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(int,boolean)> -> _SOURCE_
<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)> -> _SOURCE_
<android.widget.CompoundButton: int getCompoundPaddingRight()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()> -> _SOURCE_
<org.apache.http.impl.auth.BasicScheme: java.lang.String getSchemeName()> -> _SOURCE_
<android.text.style.ForegroundColorSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: long getItemId(int)> -> _SOURCE_
<com.android.browser.TabScrollView: int getScroll()> -> _SOURCE_
<android.media.AudioManager: int getRouting(int)> -> _SOURCE_
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket()> -> _SOURCE_
<android.widget.AbsListView: int[] onCreateDrawableState(int)> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()> -> _SOURCE_
<android.os.TokenWatcher: java.util.WeakHashMap access$000(android.os.TokenWatcher)> -> _SOURCE_
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> -> _SOURCE_
<org.xml.sax.SAXParseException: java.lang.String getSystemId()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.DERBoolean getInstance(byte[])> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.util.Iterator iterator()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.OperatedClientConnection createConnection()> -> _SOURCE_
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()> -> _SOURCE_
<com.android.contacts.detail.StreamItemAdapter: int getItemViewType(int)> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar()> -> _SOURCE_
<com.android.internal.util.StateMachine: java.lang.String getWhatToString(int)> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()> -> _SOURCE_
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()> -> _SOURCE_
<android.content.Loader: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.lang.String getDefaultUserAgent()> -> _SOURCE_
<android.app.Dialog: android.view.Window getWindow()> -> _SOURCE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)> -> _SOURCE_
<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()> -> _SOURCE_
<android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.widget.TimePicker$SavedState: int getHour()> -> _SOURCE_
<com.android.calendar.CalendarController$EventInfo: int getResponse()> -> _SOURCE_
<com.android.exchange.utility.FileLogger: com.android.exchange.utility.FileLogger getLogger(android.content.Context)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getIssuer()> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)> -> _SOURCE_
<android.content.res.TypedArray: float getFloat(int,float)> -> _SOURCE_
<com.android.mms.ui.IconListAdapter$IconListItem: int getResource()> -> _SOURCE_
<java.nio.NioUtils: int getDirectBufferAddress(java.nio.Buffer)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getProcessesInErrorState()> -> _SOURCE_
<com.android.emailcommon.service.IAccountService$Stub$Proxy: int getAccountColor(long)> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getEncoded()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailUpdatesFragment: int getFirstListItemOffset()> -> _SOURCE_
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.DEREnumerated getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()> -> _SOURCE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebViewClient getWebViewClient()> -> _SOURCE_
<gov.nist.javax.sip.address.Authority: java.lang.String getPassword()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthority(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<com.android.mms.data.Contact: java.lang.String getPresenceText()> -> _SOURCE_
<java.lang.Float: java.lang.String toString()> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()> -> _SOURCE_
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()> -> _SOURCE_
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()> -> _SOURCE_
<org.apache.james.mime4j.CloseShieldInputStream: java.io.InputStream getUnderlyingStream()> -> _SOURCE_
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()> -> _SOURCE_
<android.webkit.WebSettings: boolean getJavaScriptEnabled()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: int getPhonebookPermissionChoice()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: long getItemId(int)> -> _SOURCE_
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()> -> _SOURCE_
<android.location.LocationRequest: java.lang.String getProvider()> -> _SOURCE_
<android.content.Intent: char getCharExtra(java.lang.String,char)> -> _SOURCE_
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: int getMappedViewType(int)> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getGravity()> -> _SOURCE_
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)> -> _SOURCE_
<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)> -> _SOURCE_
<android.content.SyncStorageEngine: int getIntColumn(android.database.Cursor,java.lang.String)> -> _SOURCE_
<com.android.contacts.interactions.GroupCreationDialogFragment: int getTitleResourceId()> -> _SOURCE_
<java.util.UnknownFormatConversionException: java.lang.String getMessage()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: java.lang.String getString(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()> -> _SOURCE_
<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)> -> _SOURCE_
<java.io.RandomAccessFile: long getFilePointer()> -> _SOURCE_
<java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)> -> _SOURCE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getDataState()> -> _SOURCE_
<libcore.net.http.HttpConnectionPool: libcore.net.http.HttpConnection get(libcore.net.http.HttpConnection$Address,int)> -> _SOURCE_
<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getData()> -> _SOURCE_
<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.WallpaperManagerService$WallpaperData)> -> _SOURCE_
<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()> -> _SOURCE_
<com.android.providers.contacts.ProfileProvider: java.util.Locale getLocale()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(int)> -> _SOURCE_
<java.lang.reflect.Field: int getModifiers()> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> -> _SOURCE_
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue getSubject()> -> _SOURCE_
<com.android.mms.model.RegionModel: int getHeight()> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token jjFillToken()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: int hashCode()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuView: int getWindowAnimations()> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: java.util.List getUsers(boolean)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getSharedPreference(android.content.Context,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.emailcommon.provider.Account: int getDeletePolicy()> -> _SOURCE_
<com.google.common.collect.Multisets$UnmodifiableSortedMultiset: java.util.Set createElementSet()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()> -> _SOURCE_
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()> -> _SOURCE_
<android.telephony.SmsMessage: int getIndexOnIcc()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.ims.SecurityVerifyHeader createSecurityVerifyHeader()> -> _SOURCE_
<android.view.MotionEvent: float getY(int)> -> _SOURCE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: int getDisplayRule(java.lang.String)> -> _SOURCE_
<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()> -> _SOURCE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.List getConnections()> -> _SOURCE_
<com.android.browser.SnapshotTab: android.graphics.Bitmap getScreenshot()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemPhotoActivity()> -> _SOURCE_
<android.widget.TextView: int getPaintFlags()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getUserName()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<dalvik.system.profiler.HprofData: java.util.Set getSamples()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: android.net.LinkProperties getLinkPropertiesSync()> -> _SOURCE_
<java.lang.Long: long longValue()> -> _SOURCE_
<org.xml.sax.InputSource: java.io.Reader getCharacterStream()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: long getStartTime(int)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String toString()> -> _SOURCE_
<java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadsetPhone$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.View: int getRawTextDirection()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec: java.lang.String toString()> -> _SOURCE_
<com.android.browser.Tab: int getLoadProgress()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> -> _SOURCE_
<com.android.contacts.util.DataStatus: android.graphics.drawable.Drawable getIcon(android.content.Context)> -> _SOURCE_
<android.location.Address: java.lang.String getAdminArea()> -> _SOURCE_
<android.view.animation.Transformation: int getTransformationType()> -> _SOURCE_
<com.android.mms.data.WorkingMessage: java.lang.CharSequence getSubject()> -> _SOURCE_
<gov.nist.javax.sip.header.TimeStamp: float getTimeStamp()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()> -> _SOURCE_
<android.widget.TextView: int getMaxEms()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: int getAlpha()> -> _SOURCE_
<com.android.mms.model.AudioModel: java.util.Map getExtras()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.header.Via getViaHeader()> -> _SOURCE_
<android.app.IUserSwitchObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.view.animation.Animation: long getStartTime()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)> -> _SOURCE_
<org.apache.http.auth.AuthScope: int getPort()> -> _SOURCE_
<org.apache.harmony.security.x509.BasicConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<android.content.pm.VerificationParams: java.lang.String toString()> -> _SOURCE_
<java.nio.DirectByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> -> _SOURCE_
<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()> -> _SOURCE_
<java.lang.Enum: java.lang.String name()> -> _SOURCE_
<com.android.emailcommon.mail.MessagingException: java.lang.Object getExceptionData()> -> _SOURCE_
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)> -> _SOURCE_
<android.webkit.WebSyncManager: java.lang.Object clone()> -> _SOURCE_
<libcore.util.ZoneInfoDB: java.lang.String getVersion()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getProtocol()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object[] getSections()> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String encodeBody()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getShortClassName()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: int getVersion()> -> _SOURCE_
<android.app.IThumbnailRetriever$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.util.Set entrySet()> -> _SOURCE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[])> -> _SOURCE_
<android.net.wifi.WifiInfo: int getRssi()> -> _SOURCE_
<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaPrlVersion()> -> _SOURCE_
<com.android.browser.XLargeUi: android.graphics.drawable.Drawable getFaviconDrawable(android.graphics.Bitmap)> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()> -> _SOURCE_
<android.view.ViewStub: android.view.View inflate()> -> _SOURCE_
<android.preference.Preference: java.lang.String getDependency()> -> _SOURCE_
<com.android.browser.widget.BookmarkThumbnailWidgetProvider: android.content.ComponentName getComponentName(android.content.Context)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Collection values()> -> _SOURCE_
<android.text.Layout$SpannedEllipsizer: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean isWriteLockedByCurrentThread()> -> _SOURCE_
<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> -> _SOURCE_
<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNumberDescByType(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)> -> _SOURCE_
<android.widget.PopupWindow: int getHeight()> -> _SOURCE_
<com.google.common.io.LineReader: java.lang.String readLine()> -> _SOURCE_
<android.content.ContextWrapper: boolean isRestricted()> -> _SOURCE_
<android.app.ActivityManagerProxy: int[] getRunningUserIds()> -> _SOURCE_
<java.lang.Class: java.lang.String getCanonicalName()> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: int getSchemeFlags(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: char getNumber()> -> _SOURCE_
<com.android.contacts.editor.AggregationSuggestionEngine: java.util.List getSuggestions()> -> _SOURCE_
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.String getAsString(java.lang.String)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getIndicatorId()> -> _SOURCE_
<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: long getDisconnectTime()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getApplicationIdentifiers()> -> _SOURCE_
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<android.location.Location: long getTime()> -> _SOURCE_
<android.view.View: android.graphics.Matrix getMatrix()> -> _SOURCE_
<android.view.View: int getVerticalScrollbarPosition()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: byte[] getStatistics()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getAddedCount(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getUrl()> -> _SOURCE_
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer get(double[],int,int)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> -> _SOURCE_
<com.android.providers.media.MediaThumbRequest: java.util.Comparator getComparator()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getEsn()> -> _SOURCE_
<com.android.contacts.preference.ContactsPreferences: int getDisplayOrder()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: short getNodeType()> -> _SOURCE_
<java.text.AttributedCharacterIterator$Attribute: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getDisposition()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> -> _SOURCE_
<java.io.Console: java.io.PrintWriter writer()> -> _SOURCE_
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)> -> _SOURCE_
<android.media.IRingtonePlayer$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<org.json.JSONArray: int getInt(int)> -> _SOURCE_
<java.net.URLConnection: boolean getDoInput()> -> _SOURCE_
<android.widget.TextView: int getMinLines()> -> _SOURCE_
<gov.nist.javax.sip.header.CallInfo: java.lang.String encodeBody()> -> _SOURCE_
<com.android.camera.RecordLocationPreference: java.lang.String getValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: javax.net.ssl.SSLSession getSession(byte[])> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()> -> _SOURCE_
<java.lang.Class: java.lang.ClassLoader getClassLoaderImpl()> -> _SOURCE_
<android.filterfw.geometry.Rectangle: float getHeight()> -> _SOURCE_
<android.os.DropBoxManager$Entry: long getTimeMillis()> -> _SOURCE_
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getTrafficClass()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.emailcommon.mail.Address: java.lang.String getAddress()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)> -> _SOURCE_
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()> -> _SOURCE_
<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngineInfo getSearchEngineInfo(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: float getScrollProgress(int,android.view.View,int)> -> _SOURCE_
<android.view.InputDevice: int getSources()> -> _SOURCE_
<android.content.ContentService: boolean getMasterSyncAutomatically()> -> _SOURCE_
<android.content.CursorEntityIterator: android.content.Entity next()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.ims.IsimRecords getIsimRecords()> -> _SOURCE_
<java.util.Calendar: int hashCode()> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerInetAddress()> -> _SOURCE_
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getFormat()> -> _SOURCE_
<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)> -> _SOURCE_
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getDisplayLabel(android.content.Context)> -> _SOURCE_
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: int getDiscoverableTimeoutIndex()> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()> -> _SOURCE_
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)> -> _SOURCE_
<com.android.internal.telephony.IWapPushManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.util.zip.CRC32: long getValue()> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary: android.content.Context getContext()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int getApnProfileID(java.lang.String)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type getType(java.lang.reflect.Type)> -> _SOURCE_
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()> -> _SOURCE_
<android.security.IKeyChainAliasCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getHost()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)> -> _SOURCE_
<libcore.net.http.HttpEngine$1: java.util.Map getHeaders()> -> _SOURCE_
<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)> -> _SOURCE_
<com.android.systemui.recent.TaskDescription: java.lang.CharSequence getLabel()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$1: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.preference.PreferenceScreen: android.app.Dialog getDialog()> -> _SOURCE_
<android.os.storage.IMountShutdownObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<android.preference.PreferenceActivity$HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: boolean getIccRecordsLoaded()> -> _SOURCE_
<android.filterfw.core.Filter: int getNumberOfInputs()> -> _SOURCE_
<com.android.mms.ui.MessageUtils: java.lang.String getLocalNumber()> -> _SOURCE_
<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)> -> _SOURCE_
<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getEarliestConnection()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()> -> _SOURCE_
<dalvik.system.BaseDexClassLoader: java.util.Enumeration findResources(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean isMinInfoReady()> -> _SOURCE_
<org.apache.harmony.security.x509.Extensions: java.util.Set getCriticalExtensions()> -> _SOURCE_
<android.view.ViewConfiguration: float getScrollFriction()> -> _SOURCE_
<libcore.net.url.FtpURLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakEntry: java.lang.Object getKey()> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptEncoding: float getQValue()> -> _SOURCE_
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> -> _SOURCE_
<android.content.res.Resources: boolean getBoolean(int)> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)> -> _SOURCE_
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer get(char[],int,int)> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys: java.util.Set elementSet()> -> _SOURCE_
<com.android.emailcommon.mail.Multipart: com.android.emailcommon.mail.Part getParent()> -> _SOURCE_
<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMajor()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getSmscAddress(android.os.Message)> -> _SOURCE_
<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams getFcParams()> -> _SOURCE_
<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)> android.permission.READ_CALENDAR -> _SOURCE_
<com.android.internal.util.ProcFileReader: long nextLong()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getGrParam()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String encode()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$PostDialState getPostDialState()> -> _SOURCE_
<java.util.Arrays$ArrayList: java.lang.Object get(int)> -> _SOURCE_
<android.app.ProgressDialog: int getProgress()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Body: java.lang.String restoreReplyTextWithMessageId(android.content.Context,long)> -> _SOURCE_
<com.android.calendar.Utils: int getSharedPreference(android.content.Context,java.lang.String,int)> -> _SOURCE_
<java.lang.Float: boolean isInfinite()> -> _SOURCE_
<android.text.Layout: int getWidth()> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getParent()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceMaxResults()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputingMapAdapter: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getSerialNumber()> -> _SOURCE_
<com.android.internal.location.GpsNetInitiatedHandler: byte[] stringToByteArray(java.lang.String,boolean)> -> _SOURCE_
<java.io.File: java.io.File[] listFiles()> -> _SOURCE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getG()> -> _SOURCE_
<android.widget.DatePicker: int getDayOfMonth()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500NameBuilder: com.android.org.bouncycastle.asn1.x500.X500Name build()> -> _SOURCE_
<org.apache.commons.codec.binary.Base64: byte[] discardWhitespace(byte[])> -> _SOURCE_
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoSnr()> -> _SOURCE_
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.net.Socket createSocket()> -> _SOURCE_
<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1SetParser parser()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String,int)> -> _SOURCE_
<android.text.style.TextAppearanceSpan: int getTextStyle()> -> _SOURCE_
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)> -> _SOURCE_
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)> -> _SOURCE_
<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(int)> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)> -> _SOURCE_
<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()> -> _SOURCE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: long getContentLength()> -> _SOURCE_
<com.android.browser.Tab: com.android.browser.ErrorConsoleView getErrorConsole(boolean)> -> _SOURCE_
<android.animation.ObjectAnimator: java.lang.Object getTarget()> -> _SOURCE_
<com.android.contacts.util.StopWatch: com.android.contacts.util.StopWatch getNullStopWatch()> -> _SOURCE_
<android.view.Surface$CompatibleCanvas: int getHeight()> -> _SOURCE_
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)> -> _SOURCE_
<java.util.TreeMap: java.util.Map$Entry pollLastEntry()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.math.BigInteger getSerialNumber()> -> _SOURCE_
<android.telephony.CellIdentityLte: int getMcc()> -> _SOURCE_
<com.android.browser.BookmarkUtils: android.content.Intent createAddToHomeIntent(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)> -> _SOURCE_
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)> -> _SOURCE_
<com.android.settings.widget.ChartNetworkSeriesView: long getMaxVisible()> -> _SOURCE_
<gov.nist.core.net.DefaultNetworkLayer: java.net.DatagramSocket createDatagramSocket()> -> _SOURCE_
<com.android.calendar.DayView: android.text.format.Time getSelectedDay()> -> _SOURCE_
<org.apache.james.mime4j.field.Field: java.lang.String getBody()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.Object[] toArray()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: com.android.browser.SuggestionsAdapter$SuggestItem getItem(int)> -> _SOURCE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> -> _SOURCE_
<com.android.calendar.Utils: java.lang.String getSearchAuthority(android.content.Context)> -> _SOURCE_
<android.widget.TextView: boolean getFreezesText()> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: java.util.List getGlobalSearchActivities()> -> _SOURCE_
<javax.xml.validation.ValidatorHandler: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.view.Display: int getType()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: java.lang.String getUidFromGlobalObjId(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.media.MediaRouter$RouteGroup: int getRouteCount()> -> _SOURCE_
<android.text.format.Time: int getWeekNumber()> -> _SOURCE_
<android.view.ViewRootImpl$2: android.view.Surface getSurface()> -> _SOURCE_
<android.net.TrafficStats: long getRxBytes(java.lang.String)> -> _SOURCE_
<android.view.Window: android.view.View findViewById(int)> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: boolean getBoolean(int)> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccounts(int)> -> _SOURCE_
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)> -> _SOURCE_
<android.net.NetworkIdentity: boolean getRoaming()> -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String encodeBody()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Phone getPhone()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Long)> -> _SOURCE_
<org.apache.harmony.security.x509.PolicyConstraints: byte[] getEncoded()> -> _SOURCE_
<android.view.animation.Animation: int getZAdjustment()> -> _SOURCE_
<java.util.UUID: long timestamp()> -> _SOURCE_
<android.webkit.JsPromptResult: java.lang.String getStringResult()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()> -> _SOURCE_
<java.util.Currency: java.lang.String getSymbol(java.util.Locale)> -> _SOURCE_
<java.util.TreeMap$MapIterator: java.util.TreeMap$Node stepBackward()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getDoubleTapZoom()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getMMSDeliveryReportsEnabled()> -> _SOURCE_
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)> -> _SOURCE_
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()> -> _SOURCE_
<android.graphics.NinePatch: int getWidth()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()> -> _SOURCE_
<android.support.v4.view.ViewPager: int getOffscreenPageLimit()> -> _SOURCE_
<android.animation.Animator: java.util.ArrayList getListeners()> -> _SOURCE_
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()> -> _SOURCE_
<android.view.Display: int getMaximumSizeDimension()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()> -> _SOURCE_
<android.text.method.TimeKeyListener: int getInputType()> -> _SOURCE_
<com.google.common.collect.BstCountBasedBalancePolicies$3: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String toString()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.SignalStrength: int getAsuLevel()> -> _SOURCE_
<com.google.common.collect.ImmutableList: java.util.ListIterator listIterator(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: int getType()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()> -> _SOURCE_
<org.apache.harmony.security.x509.PolicyInformation$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmSignalStrength()> -> _SOURCE_
<com.android.server.IntentResolverOld: java.util.Set filterSet()> -> _SOURCE_
<android.widget.CalendarView$WeeksAdapter: java.util.Calendar getSelectedDay()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()> -> _SOURCE_
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)> -> _SOURCE_
<com.google.common.collect.GenericMapMaker: com.google.common.collect.MapMaker$RemovalListener getRemovalListener()> -> _SOURCE_
<com.android.camera.CameraHolder: android.hardware.Camera$CameraInfo[] getCameraInfo()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.AsYouTypeFormatter getAsYouTypeFormatter(java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByName(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.DirectoryPartition: java.lang.String getDisplayName()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> -> _SOURCE_
<java.net.Socks4Message: byte[] getBytes()> -> _SOURCE_
<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getContentDisposition()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)> -> _SOURCE_
<javax.net.ssl.SSLParameters: boolean getWantClientAuth()> -> _SOURCE_
<android.app.DownloadManager$Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)> -> _SOURCE_
<org.apache.http.util.VersionInfo: java.lang.String toString()> -> _SOURCE_
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)> -> _SOURCE_
<android.os.Message: android.os.Handler getTarget()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: java.lang.String getSuggestionUrl(com.android.browser.SuggestionsAdapter$SuggestItem)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getImei()> -> _SOURCE_
<android.bluetooth.IBluetoothPbap$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.browser.DeviceAccountLogin: int getState()> -> _SOURCE_
<libcore.net.http.RequestHeaders: int getContentLength()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.widget.RemoteViews$SetPendingIntentTemplate: java.lang.String getActionName()> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.internal.os.PowerProfile: int getNumSpeedSteps()> -> _SOURCE_
<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)> -> _SOURCE_
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)> -> _SOURCE_
<android.graphics.drawable.shapes.Shape: float getWidth()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)> -> _SOURCE_
<java.net.DatagramSocket: int getReceiveBufferSize()> -> _SOURCE_
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)> -> _SOURCE_
<java.text.DecimalFormat: boolean isParseBigDecimal()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getPhotoUri()> -> _SOURCE_
<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getStartCount()> -> _SOURCE_
<android.animation.LayoutTransition: long getStagger(int)> -> _SOURCE_
<android.net.LocalSocket: java.io.InputStream getInputStream()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: java.lang.String toString()> -> _SOURCE_
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)> -> _SOURCE_
<android.widget.RemoteViewsAdapter: int getCount()> -> _SOURCE_
<com.android.mms.data.Conversation: android.net.Uri getUri(long)> -> _SOURCE_
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<android.graphics.Matrix: java.lang.String toShortString()> -> _SOURCE_
<com.android.browser.TabControl: android.webkit.WebView getCurrentSubWindow()> -> _SOURCE_
<com.android.exchange.EasResponse: java.io.InputStream getInputStream()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getEmailBody()> -> _SOURCE_
<com.android.uiautomator.core.QueryController: java.lang.String getLastTraversedText()> -> _SOURCE_
<com.android.server.pm.PackageSettingBase: boolean getInstalled(int)> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedListMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Iterator iterator()> -> _SOURCE_
<com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup: com.android.inputmethod.latin.makedict.FusionDictionary$WeightedString getBigram(java.lang.String)> -> _SOURCE_
<java.util.HashMap: java.util.Iterator newKeyIterator()> -> _SOURCE_
<java.nio.charset.MalformedInputException: java.lang.String getMessage()> -> _SOURCE_
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String getName()> -> _SOURCE_
<java.lang.Long: float floatValue()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralString: com.android.org.bouncycastle.asn1.DERGeneralString getInstance(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator()> -> _SOURCE_
<android.content.res.ColorStateList$1: android.content.res.ColorStateList createFromParcel(android.os.Parcel)> -> _SOURCE_
<android.location.Address: int getMaxAddressLineIndex()> -> _SOURCE_
<java.net.URI: java.lang.String getRawQuery()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|SYSTEM_SETTINGS
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_
<android.webkit.WebSettings: boolean getUseDoubleTree()> -> _SOURCE_
<com.android.org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)> -> _SOURCE_
<android.hardware.Sensor: int getVersion()> -> _SOURCE_
<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()> -> _SOURCE_
<android.app.Activity: int getTaskId()> -> _SOURCE_
<android.nfc.INdefPushCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String)> -> _SOURCE_
<android.widget.ListView: long[] getCheckItemIds()> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> -> _SOURCE_
<javax.crypto.spec.PBEKeySpec: byte[] getSalt()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token jjFillToken()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ProxyAuthenticateHeader createProxyAuthenticateHeader(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getImei()> -> _SOURCE_
<dalvik.system.profiler.HprofData$StackTrace: java.lang.StackTraceElement[] getStackFrames()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getLocalIp()> -> _SOURCE_
<android.webkit.WebViewCore$AutoFillData: java.lang.String getPreviewString()> -> _SOURCE_
<com.android.camera.CameraHolder: int getNumberOfCameras()> -> _SOURCE_
<org.apache.harmony.security.x509.BasicConstraints: int getPathLenConstraint()> -> _SOURCE_
<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: int getEntity()> -> _SOURCE_
<android.net.NetworkIdentity: java.lang.String getSubscriberId()> -> _SOURCE_
<android.telephony.ServiceState: int getCdmaEriIconMode()> -> _SOURCE_
<java.math.BigInteger: long longValue()> -> _SOURCE_
<android.os.Debug: java.lang.String getCallers(int)> -> _SOURCE_
<com.android.server.WallpaperManagerService: int getWidthHint()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> -> _SOURCE_
<com.android.providers.contacts.NameSplitter: int getAdjustedNameStyleBasedOnPhoneticNameStyle(int,int)> -> _SOURCE_
<android.app.PendingIntent: android.content.IIntentSender getTarget()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getEditContactActivityClassName()> -> _SOURCE_
<android.view.animation.Animation: long computeDurationHint()> -> _SOURCE_
<com.android.inputmethod.latin.LatinIME$BatchInputUpdater: com.android.inputmethod.latin.LatinIME$BatchInputUpdater getInstance()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantLock: java.lang.Thread getOwner()> -> _SOURCE_
<com.android.providers.contacts.PhotoProcessor: int getMaxThumbnailPhotoDim()> -> _SOURCE_
<android.view.inputmethod.InputBinding: int getPid()> -> _SOURCE_
<java.security.CodeSigner: java.security.Timestamp getTimestamp()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothProfileManager: com.android.settings.bluetooth.A2dpProfile getA2dpProfile()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509DefaultEntryConverter: com.android.org.bouncycastle.asn1.ASN1Primitive getConvertedValue(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createPrack(javax.sip.message.Response)> -> _SOURCE_
<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()> -> _SOURCE_
<android.view.animation.Animation: boolean getFillAfter()> -> _SOURCE_
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap build()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: int count(java.lang.Object)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.io.File getDataPathForUser(int)> -> _SOURCE_
<android.widget.PopupWindow: int getSoftInputMode()> -> _SOURCE_
<android.support.v4.view.ViewPager: int getCurrentItem()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getDigit()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getContactNameDisplayOrder()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getInputEventCount(int)> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()> -> _SOURCE_
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getImei()> -> _SOURCE_
<com.android.browser.Tab$3: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<android.app.ActivityManager: int getCurrentUser()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledProtocols()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|SYSTEM_SETTINGS
<java.util.Formatter$FormatToken: java.lang.String getStrFlags()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()> -> _SOURCE_
<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getNameEditor()> -> _SOURCE_
<com.android.server.wm.WindowState: int getDisplayId()> -> _SOURCE_
<android.app.ActionBar: android.content.Context getThemedContext()> -> _SOURCE_
<org.apache.harmony.xml.ExpatParser$ExpatLocator: java.lang.String getSystemId()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener: int getApproximateTileWidth()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getPosition()> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getNamespaceCount(int)> -> _SOURCE_
<com.android.calendar.EventInfoFragment: android.database.Cursor access$902(com.android.calendar.EventInfoFragment,android.database.Cursor)> -> _SOURCE_
<gov.nist.javax.sip.header.ReferTo: java.lang.String encodeBody()> -> _SOURCE_
<java.util.Scanner: java.lang.String nextLine()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForType(java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup getGroup()> -> _SOURCE_
<java.security.AllPermission: java.lang.String getActions()> -> _SOURCE_
<java.net.HttpURLConnection: java.security.Permission getPermission()> -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()> android.permission.BLUETOOTH -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: int getGroupCount()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> -> _SOURCE_
<java.nio.CharToByteBufferAdapter: char get()> -> _SOURCE_
<com.android.mms.util.DraftCache: com.android.mms.util.DraftCache getInstance()> -> _SOURCE_
<javax.sip.DialogState: javax.sip.DialogState getObject(int)> -> _SOURCE_
<com.android.emailcommon.service.IAccountService$Stub$Proxy: android.os.Bundle getConfigurationData(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.mail.Address: java.lang.String toString()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()> -> _SOURCE_
<android.database.CursorWrapper: boolean isFirst()> -> _SOURCE_
<android.webkit.Plugin: java.lang.String getName()> -> _SOURCE_
<gov.nist.javax.sip.parser.PipelinedMsgParser: java.lang.Object clone()> -> _SOURCE_
<android.bluetooth.IBluetoothCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()> -> _SOURCE_
<java.io.EmulatedFields: double get(java.lang.String,double)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getReuseAddress()> -> _SOURCE_
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()> -> _SOURCE_
<android.widget.Spinner$DialogPopup: java.lang.CharSequence getHintText()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: java.lang.String getTransport()> -> _SOURCE_
<android.media.Metadata: java.lang.String getString(int)> -> _SOURCE_
<android.webkit.PluginList: java.util.List getList()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getFilesDir()> -> _SOURCE_
<com.android.internal.telephony.IExtendedNetworkService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.logging.LogRecord: long getSequenceNumber()> -> _SOURCE_
<com.android.browser.view.PieItem: float getStartAngle()> -> _SOURCE_
<java.io.Console: java.io.Reader reader()> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String getLanguageRange()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Primitive getDataValueDescriptor()> -> _SOURCE_
<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)> -> _SOURCE_
<android.widget.TextView: android.text.InputFilter[] getFilters()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentLanguage: java.lang.Object clone()> -> _SOURCE_
<android.widget.ImageView: int getMaxWidth()> -> _SOURCE_
<com.android.mms.util.DownloadManager: int getState(android.net.Uri)> -> _SOURCE_
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)> -> _SOURCE_
<com.android.contacts.ContactsActivity: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getTerminatingIOI()> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: int getUniqueId()> -> _SOURCE_
<android.net.http.Headers: long getTransferEncoding()> -> _SOURCE_
<org.apache.http.cookie.CookieSpecRegistry: java.util.List getSpecNames()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: long getExpirationTime()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl$InvitableAccountTypeCache: java.util.Map getCachedValue()> -> _SOURCE_
<android.media.IRemoteControlClient$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.server.pm.UserManagerService: android.graphics.Bitmap getUserIcon(int)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int)> -> _SOURCE_
<android.provider.Telephony$Mms: java.lang.String getMessageBoxName(int)> -> _SOURCE_
<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()> -> _SOURCE_
<java.util.WeakHashMap: java.util.Set keySet()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: java.lang.Object[] toArray()> -> _SOURCE_
<java.text.DecimalFormat: java.lang.String toLocalizedPattern()> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object get(java.lang.Iterable,int)> -> _SOURCE_
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.ArrayList getAuthorities()> -> _SOURCE_
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)> -> _SOURCE_
<android.view.GLES20Canvas: int getRenderer()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String peekNextId()> -> _SOURCE_
<android.os.Parcel: byte[] marshall()> -> _SOURCE_
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()> -> _SOURCE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500NameBuilder: com.android.org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])> -> _SOURCE_
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<java.util.LinkedList: java.util.Iterator descendingIterator()> -> _SOURCE_
<com.google.common.collect.Multimaps$Keys: java.util.Set createEntrySet()> -> _SOURCE_
<android.content.Intent: int getFlags()> -> _SOURCE_
<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: java.lang.String getEndSync()> -> _SOURCE_
<com.android.browser.PieControl$TabAdapter: long getItemId(int)> -> _SOURCE_
<com.android.server.input.InputManagerService: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)> -> _SOURCE_
<android.nfc.NfcActivityManager: android.nfc.NdefMessage createMessage()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint32()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|NETWORK_INFORMATION
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getRawContactId()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getUsername()> -> _SOURCE_
<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()> -> _SOURCE_
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: java.lang.String getApnType()> -> _SOURCE_
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)> -> _SOURCE_
<java.util.SimpleTimeZone: int getOffset(long)> -> _SOURCE_
<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.Reason: java.lang.String encodeBody()> -> _SOURCE_
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean,java.lang.String)> -> _SOURCE_
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: java.lang.String getName(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.app.LoadedApk: java.lang.String getResDir()> -> _SOURCE_
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()> -> _SOURCE_
<com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()> -> _SOURCE_
<com.android.common.content.ProjectionMap: java.lang.String[] getColumnNames()> -> _SOURCE_
<com.android.mms.data.Conversation: int getMessageCount()> -> _SOURCE_
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: java.lang.String toString()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: int getLocalPort()> -> _SOURCE_
<com.android.exchange.EasSyncService: boolean getValidateRedirect(com.android.exchange.EasResponse,com.android.emailcommon.provider.HostAuth)> -> _SOURCE_
<com.android.mms.ui.UriImage: byte[] getResizedImageData(int,int,int,int,int,android.net.Uri,android.content.Context)> -> _SOURCE_
<com.android.mms.layout.HVGALayoutParameters: int getHeight()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> -> _SOURCE_
<java.net.URLConnection: long getExpiration()> -> _SOURCE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String getDisplayName()> -> _SOURCE_
<android.widget.ListView: boolean getItemsCanFocus()> -> _SOURCE_
<com.android.calendar.Event: long getEndMillis()> -> _SOURCE_
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()> -> _SOURCE_
<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()> -> _SOURCE_
<java.nio.LongBuffer: java.lang.Object array()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: float getRepeatCount()> -> _SOURCE_
<org.apache.harmony.security.x509.InfoAccessSyntax$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getServerKeyType()> -> _SOURCE_
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> -> _SOURCE_
<java.net.URLConnection: java.security.Permission getPermission()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)> -> _SOURCE_
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: int getWidth()> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)> -> _SOURCE_
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<android.database.CursorWrapper: java.lang.String getColumnName(int)> -> _SOURCE_
<com.android.uiautomator.core.AccessibilityNodeInfoHelper: android.graphics.Rect getVisibleBoundsInScreen(android.view.accessibility.AccessibilityNodeInfo)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getLabelColumn()> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()> -> _SOURCE_
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.location.IGeocodeProvider$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.net.PlainSocketImpl: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedList: java.util.List getListDelegate()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore createCookieStore()> -> _SOURCE_
<android.text.SpannedString: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.RawContact: com.android.contacts.model.AccountTypeManager getAccountTypeManager()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getFallbackAppWidgetId()> -> _SOURCE_
<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()> -> _SOURCE_
<java.nio.Buffer: int checkGetBounds(int,int,int,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()> -> _SOURCE_
<com.google.common.collect.Sets$SetView: com.google.common.collect.ImmutableSet immutableCopy()> -> _SOURCE_
<com.android.server.power.DisplayPowerState$1: java.lang.Float get(com.android.server.power.DisplayPowerState)> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getMaximumMessageSize()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getDefaultPreloadSetting()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSentBy()> -> _SOURCE_
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.os.Message: android.os.Bundle getData()> -> _SOURCE_
<java.net.URLConnection: int getConnectTimeout()> -> _SOURCE_
<android.location.LocationManager: java.util.List getAllProviders()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<android.view.WindowInfo: java.lang.String toString()> -> _SOURCE_
<com.android.exchange.adapter.Parser: java.io.InputStream getInput()> -> _SOURCE_
<android.webkit.ZoomManager: float getInvDefaultScale()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()> -> _SOURCE_
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: int getFullNameStyle()> -> _SOURCE_
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.CompatibilityInfoHolder)> -> _SOURCE_
<android.os.AsyncTask: java.lang.Object get()> -> _SOURCE_
<android.database.CursorWindow: int getStartPosition()> -> _SOURCE_
<java.util.TreeSet: java.lang.Object floor(java.lang.Object)> -> _SOURCE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)> -> _SOURCE_
<com.android.server.sip.SipService: android.os.Looper access$1800()> -> _SOURCE_
<com.android.server.MountService: java.lang.String[] getSecureContainerList()> -> _SOURCE_
<android.preference.PreferenceGroup: int getPreferenceCount()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getPhotoUri()> -> _SOURCE_
<com.android.calendar.month.SimpleWeeksAdapter: int getCount()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getNonCriticalExtensionOIDs()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: java.lang.String getDocumentURI()> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getItemViewType(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.Object clone()> -> _SOURCE_
<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()> -> _SOURCE_
<android.location.Location: float getBearing()> -> _SOURCE_
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int getRetryCount()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getItemViewType(int)> -> _SOURCE_
<android.app.ContextImpl: android.os.Looper getMainLooper()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: com.android.emailcommon.mail.Address[] getRecipients(com.android.emailcommon.mail.Message$RecipientType)> -> _SOURCE_
<java.util.WeakHashMap$Entry: java.lang.Object getKey()> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()> -> _SOURCE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()> -> _SOURCE_
<android.location.IGpsStatusProvider$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransport()> -> _SOURCE_
<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll()> -> _SOURCE_
<android.content.SyncManager: android.accounts.AccountAndUser[] access$2800()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()> -> _SOURCE_
<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)> -> _SOURCE_
<com.android.phone.Ringer$Worker: android.os.Looper getLooper()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERSetParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters build()> -> _SOURCE_
<java.net.SocketImpl: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()> -> _SOURCE_
<android.widget.GridLayout$5: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: int getUnreadCountByAccountAndMailboxType(android.content.Context,long,int)> -> _SOURCE_
<android.app.AlertDialog$Builder: android.app.AlertDialog create()> -> _SOURCE_
<com.android.contacts.editor.KindSectionView: com.android.contacts.model.dataitem.DataKind getKind()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> -> _SOURCE_
<android.text.Layout: java.lang.CharSequence getText()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.Object[] standardToArray(java.lang.Object[])> -> _SOURCE_
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()> -> _SOURCE_
<com.android.calendarcommon2.ICalendar$Parameter: java.lang.String toString()> -> _SOURCE_
<java.text.MessageFormat: java.lang.Object clone()> -> _SOURCE_
<android.webkit.WebViewClassic$WebViewInputConnection: boolean getIsAutoFillable()> -> _SOURCE_
<libcore.io.BlockGuardOs: java.io.FileDescriptor socket(int,int,int)> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> -> _SOURCE_
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()> -> _SOURCE_
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()> -> _SOURCE_
<com.android.emailcommon.internet.Rfc822Output: java.lang.String getNextBoundary()> -> _SOURCE_
<android.view.View$5: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet build()> -> _SOURCE_
<com.android.music.MusicUtils: int getCardId(android.content.Context)> -> _SOURCE_
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()> -> _SOURCE_
<com.android.inputmethod.latin.ResourceUtils: float getDimensionOrFraction(android.content.res.TypedArray,int,int,float)> -> _SOURCE_
<java.util.AbstractList: int hashCode()> -> _SOURCE_
<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getLocalHost()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getCacheDir()> -> _SOURCE_
<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SOURCE_
<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()> -> _SOURCE_
<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: java.lang.String getSuggestionTitle(com.android.browser.SuggestionsAdapter$SuggestItem)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue[] getCc()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.Logger: org.apache.harmony.xnet.provider.jsse.Logger$Stream getStream(java.lang.String)> -> _SOURCE_
<org.json.JSONTokener: java.lang.Object nextValue()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: java.lang.String toString()> -> _SOURCE_
<android.text.Layout$SpannedEllipsizer: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getNetworkType()> -> _SOURCE_
<com.android.inputmethod.latin.WordComposer: java.lang.String getTypedWord()> -> _SOURCE_
<android.widget.Chronometer: java.lang.String getFormat()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getPhoneName()> -> _SOURCE_
<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()> -> _SOURCE_
<android.filterfw.core.FieldPort: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimImpi()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.GestureRecorder getGestureRecorder()> -> _SOURCE_
<java.io.StreamTokenizer: java.lang.String toString()> -> _SOURCE_
<android.widget.RemoteViews$ViewGroupAction: java.lang.String getActionName()> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getScrollY(java.lang.Object)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)> -> _SOURCE_
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.content.ClipData: android.content.ClipDescription getDescription()> -> _SOURCE_
<android.preference.Preference: int getPersistedInt(int)> -> _SOURCE_
<com.android.systemui.statusbar.policy.CurrentUserTracker: int getCurrentUserId()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)> -> _SOURCE_
<com.android.providers.contacts.HanziToPinyin: java.util.ArrayList get(java.lang.String)> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context,android.content.Entity,int,java.lang.String,com.android.emailcommon.provider.Account)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.TimeList getBegin()> -> _SOURCE_
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getCount()> -> _SOURCE_
<com.android.internal.telephony.cat.CommandDetails: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()> -> _SOURCE_
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.security.Signature: java.security.AlgorithmParameters getParameters()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView$ScrollInterpolator: float getInterpolation(float)> -> _SOURCE_
<android.database.CursorWrapper: byte[] getBlob(int)> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaDbm()> -> _SOURCE_
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()> -> _SOURCE_
<gov.nist.javax.sip.parser.Parser: java.lang.String method()> -> _SOURCE_
<com.android.emailcommon.service.IEmailService$Stub$Proxy: int getApiLevel()> -> _SOURCE_
<com.android.ex.variablespeed.EngineParameters: int getTargetFrames()> -> _SOURCE_
<android.content.res.TypedArray: int getResourceId(int,int)> -> _SOURCE_
<android.net.LocalSocket: int getReceiveBufferSize()> -> _SOURCE_
<android.text.style.ScaleXSpan: float getScaleX()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.lang.String getSortKey(java.lang.String)> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: android.graphics.Bitmap getDefaultThumbnail()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getDirectReference()> -> _SOURCE_
<android.widget.AdapterView: android.view.View getEmptyView()> -> _SOURCE_
<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster create()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets()> -> _SOURCE_
<com.android.inputmethod.latin.Utils: java.lang.String getStackTrace(int)> -> _SOURCE_
<com.android.contacts.detail.ContactLoaderFragment: boolean getLoadStreamItems()> -> _SOURCE_
<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()> -> _SOURCE_
<java.net.URLConnection: int getContentLength()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()> -> _SOURCE_
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()> -> _SOURCE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getStartDelay()> -> _SOURCE_
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPhoneticFamilyName()> -> _SOURCE_
<com.android.browser.WebViewTimersControl: com.android.browser.WebViewTimersControl getInstance()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getPartitionForPosition(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceId()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<java.nio.SocketChannelImpl$SocketAdapter: java.io.FileDescriptor getFileDescriptor$()> -> _SOURCE_
<com.android.settings.bluetooth.BluetoothSettings: int getHelpResource()> -> _SOURCE_
<android.database.MatrixCursor: short getShort(int)> -> _SOURCE_
<android.app.ActivityManagerProxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> -> _SOURCE_
<java.nio.IntArrayBuffer: java.nio.IntBuffer get(int[],int,int)> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: int getAsuLevel()> -> _SOURCE_
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue[] getEncodedStringValues(int)> -> _SOURCE_
<com.android.internal.telephony.UUSInfo: int getDcs()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getButtonDescription()> -> _SOURCE_
<android.view.InputEvent: int getSequenceNumber()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DctConstants$State getState()> -> _SOURCE_
<com.android.browser.Tab: android.webkit.WebView getTopWindow()> -> _SOURCE_
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1TypeCollection: void getValues(java.lang.Object,java.lang.Object[])> -> _SOURCE_
<android.preference.PreferenceActivity: android.widget.ListAdapter access$300(android.preference.PreferenceActivity)> -> _SOURCE_
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> -> _SOURCE_
<java.security.spec.ECFieldF2m: int getM()> -> _SOURCE_
<android.widget.OverScroller: int getDuration()> -> _SOURCE_
<android.provider.MediaStore$Audio$Albums: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<java.text.ChoiceFormat: java.lang.Object[] getFormats()> -> _SOURCE_
<android.view.MotionEvent: int getSource()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getTokenWindowsOnDisplay(com.android.server.wm.WindowToken,com.android.server.wm.DisplayContent)> -> _SOURCE_
<java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTCTime: java.lang.String toString()> -> _SOURCE_
<java.net.DatagramSocketImpl: int getLocalPort()> -> _SOURCE_
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> -> _SOURCE_
<android.widget.AdapterViewAnimator: int getNumActiveViews()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPETag: java.lang.String encodeBody()> -> _SOURCE_
<java.util.EnumMap$EnumMapKeySet$1: java.lang.Enum get(java.util.MapEntry)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BEROctetString: byte[] getOctets()> -> _SOURCE_
<android.filterfw.core.Filter: java.lang.String getName()> -> _SOURCE_
<com.android.inputmethod.latin.SettingsValues: float getCurrentKeypressSoundVolume(android.content.SharedPreferences,android.content.res.Resources)> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForCountryCode(int)> -> _SOURCE_
<android.location.LocationRequest: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.List)> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ViaHeader createViaHeader(java.lang.String,int,java.lang.String,java.lang.String)> -> _SOURCE_
<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)> -> _SOURCE_
<android.widget.AdapterView: int getPositionForView(android.view.View)> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List numberFormats()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getAction()> -> _SOURCE_
<gov.nist.javax.sip.header.AlertInfo: javax.sip.address.URI getAlertInfo()> -> _SOURCE_
<com.google.common.base.Objects$ToStringHelper: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getProfilePhotoStore()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: long getConnectTime()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: java.util.Set elementSet()> -> _SOURCE_
<java.lang.reflect.Method: int getModifiers()> -> _SOURCE_
<com.android.settings.bluetooth.HidProfile: int getOrdinal()> -> _SOURCE_
<android.app.ApplicationThreadNative: android.app.IApplicationThread asInterface(android.os.IBinder)> -> _SOURCE_
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.WRITE_CONTACTS -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getName()> android.permission.BLUETOOTH -> _SOURCE_|BLUETOOTH_INFORMATION
<com.android.emailcommon.provider.EmailContent: android.net.Uri getUri()> -> _SOURCE_
<com.android.browser.Controller: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)> -> _SOURCE_
<android.media.AudioManager: boolean isSpeechRecognitionActive()> -> _SOURCE_
<com.android.internal.widget.ActionBarView$HomeView: int getStartOffset()> -> _SOURCE_
<com.android.internal.os.RuntimeInit$1: java.lang.String getId()> -> _SOURCE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: long getParameterAsLong(java.lang.String)> -> _SOURCE_
<android.inputmethodservice.InputMethodService: int getMaxWidth()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView: long getUserActivityTimeout()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: long getDisconnectTime()> -> _SOURCE_
<java.util.regex.Pattern: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> -> _SOURCE_
<com.android.contacts.model.Contact: int getDisplayNameSource()> -> _SOURCE_
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])> -> _SOURCE_
<java.nio.FileChannelImpl: java.io.FileDescriptor getFD()> -> _SOURCE_
<com.android.inputmethod.latin.WordComposer: com.android.inputmethod.latin.InputPointers getInputPointers()> -> _SOURCE_
<java.util.MissingFormatArgumentException: java.lang.String getMessage()> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPhoneticMiddleName()> -> _SOURCE_
<com.android.settings.net.NetworkPolicyEditor: android.net.NetworkPolicy getPolicy(android.net.NetworkTemplate)> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeValue()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructStatFs statfs(java.lang.String)> -> _SOURCE_
<android.app.IStopUserCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.webkit.ZoomManager: boolean isPreventingWebkitUpdates()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getProductId()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()> -> _SOURCE_
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: int getPort()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine getStatusLine()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)> -> _SOURCE_
<android.telephony.SmsMessage: boolean isReplace()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator(int)> -> _SOURCE_
<android.view.HardwareRenderer: boolean isEnabled()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector()> -> _SOURCE_
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramResults: java.lang.String toString()> -> _SOURCE_
<android.webkit.CookieManager: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<java.security.cert.PKIXParameters: java.lang.String getSigProvider()> -> _SOURCE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<com.android.internal.telephony.cdma.EriManager: int getEriNumberOfEntries()> -> _SOURCE_
<android.content.pm.Signature: char[] toChars()> -> _SOURCE_
<android.widget.RemoteViewsAdapter: int getViewTypeCount()> -> _SOURCE_
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)> -> _SOURCE_
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: boolean isEnabled(int)> -> _SOURCE_
<com.android.phone.PhoneInterfaceManager: int getLteOnCdmaMode()> -> _SOURCE_
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByFileName(java.lang.String)> -> _SOURCE_
<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.Dictionary getMainDictionary()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyDetector: int getTouchX(int)> -> _SOURCE_
<android.view.ViewRootImpl: int getHostVisibility()> -> _SOURCE_
<android.content.Intent: java.lang.String getDataString()> -> _SOURCE_
<android.view.MotionEvent: float getYPrecision()> -> _SOURCE_
<android.location.Criteria: int getAccuracy()> -> _SOURCE_
<com.google.android.mms.pdu.EncodedStringValue: java.lang.Object clone()> -> _SOURCE_
<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getDuration()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix: java.lang.String getTitle()> -> _SOURCE_
<com.google.common.collect.TreeMultiset: com.google.common.collect.Multiset$Entry pollLastEntry()> -> _SOURCE_
<android.content.pm.ActivityInfo: int getRealConfigChanged()> -> _SOURCE_
<java.net.PasswordAuthentication: char[] getPassword()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: java.util.ArrayList getLoadedTasks()> -> _SOURCE_
<com.android.settings.accounts.AccountPreferenceBase: android.graphics.drawable.Drawable getDrawableForType(java.lang.String)> -> _SOURCE_
<android.webkit.WebViewClassic: android.view.View getZoomControls()> -> _SOURCE_
<com.android.internal.telephony.BaseCommands: int getLteOnCdmaMode()> -> _SOURCE_
<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimFileHandler: java.lang.String getEFPath(int)> -> _SOURCE_
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String getStatusLine()> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()> -> _SOURCE_
<libcore.io.GaiException: java.lang.String getMessage()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: char readChar()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingEnd()> -> _SOURCE_
<android.net.wifi.WifiManager$WifiLock: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call getCall()> -> _SOURCE_
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()> -> _SOURCE_
<android.filterfw.MffEnvironment: android.filterfw.core.FilterContext getContext()> -> _SOURCE_
<gov.nist.core.HostNameParser: java.lang.String ipv6Reference()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String getName()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()> -> _SOURCE_
<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)> -> _SOURCE_
<com.android.mms.ui.MessageItem: com.android.mms.model.SlideshowModel getSlideshow()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Class getMyClass()> -> _SOURCE_
<android.widget.ListView$ArrowScrollFocusResult: int getSelectedPosition()> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request,javax.sip.header.ContentTypeHeader,byte[])> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.HttpContext createHttpContext()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getSceneMode()> -> _SOURCE_
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getComponentName()> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: com.android.settings.bluetooth.LocalBluetoothAdapter getInstance()> -> _SOURCE_
<android.text.style.URLSpan: java.lang.String getURL()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: long getConnectTime()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getInviteContactActivityClassName()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int getHandle()> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.app.ListActivity: int getSelectedItemPosition()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.lang.String getSigAlgOID()> -> _SOURCE_
<com.android.server.wm.InputMonitor: int getPointerLayer()> -> _SOURCE_
<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()> -> _SOURCE_
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()> -> _SOURCE_
<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<android.provider.Settings$Global: java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)> -> _SOURCE_
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getCount()> -> _SOURCE_
<com.android.calendar.AsyncQueryService: com.android.calendar.AsyncQueryService$Operation getLastCancelableOperation()> -> _SOURCE_
<com.android.contacts.test.InjectedServices: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.Object[] standardToArray()> -> _SOURCE_
<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls getControls()> -> _SOURCE_
<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.MapMaker: long getExpireAfterAccessNanos()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: short getNodeType()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.CommonNicknameCache: java.lang.String[] getCommonNicknameClusters(java.lang.String)> -> _SOURCE_
<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object getValue()> -> _SOURCE_
<com.google.common.collect.Lists$StringAsImmutableList$1: java.lang.Character get(int)> -> _SOURCE_
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()> -> _SOURCE_
<android.net.wifi.WifiSsid: java.lang.String getHexString()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPort()> -> _SOURCE_
<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()> -> _SOURCE_
<android.webkit.WebViewClassic: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: java.lang.Integer getProtocol()> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: java.lang.String getDisplayName(android.content.Context,long)> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(java.lang.String)> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)> -> _SOURCE_
<com.android.browser.view.PieItem: float getStart()> -> _SOURCE_
<java.lang.Byte: long longValue()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getCreationTime()> -> _SOURCE_
<android.filterfw.core.FieldPort: android.filterfw.core.Frame pullFrame()> -> _SOURCE_
<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()> -> _SOURCE_
<java.security.Signature: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.Multiset$Entry pollLastEntry()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: java.util.List getPhotos()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String getURI(java.lang.String)> -> _SOURCE_
<java.net.DatagramPacket: byte[] getData()> -> _SOURCE_
<com.android.contacts.group.GroupListItem: int getMemberCount()> -> _SOURCE_
<android.content.pm.InstrumentationInfo: java.lang.String toString()> -> _SOURCE_
<android.mtp.MtpStorage: java.lang.String getPath()> -> _SOURCE_
<android.view.View: android.view.IWindowSession getWindowSession()> -> _SOURCE_
<com.android.providers.calendar.CalendarDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: long getChildId(int,int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)> -> _SOURCE_
<com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)> -> _SOURCE_
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)> -> _SOURCE_
<android.hardware.SensorManager: float[] getOrientation(float[],float[])> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.util.List getConnectedDevices()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)> -> _SOURCE_
<android.text.Layout: int getOffsetForHorizontal(int,float)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<android.webkit.WebView: int getVisibleTitleHeight()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedAsList: java.lang.Object get(int)> -> _SOURCE_
<com.android.browser.NavTabScroller: int getGap()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String toPattern()> -> _SOURCE_
<android.net.INetworkStatsService$Stub$Proxy: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)> -> _SOURCE_
<android.preference.PreferenceActivity: android.preference.PreferenceActivity$Header onGetInitialHeader()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHost()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()> -> _SOURCE_
<android.view.MotionEvent: float getPressure(int)> -> _SOURCE_
<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: short getNodeType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isInputShutdown()> -> _SOURCE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getRegistrationState()> -> _SOURCE_
<gov.nist.javax.sip.header.CSeq: long getSeqNumber()> -> _SOURCE_
<android.hardware.ISerialManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)> -> _SOURCE_
<java.util.AbstractList: java.util.Iterator iterator()> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getMiddleName()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)> -> _SOURCE_
<com.android.mms.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.hardware.usb.UsbInterface: int getEndpointCount()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getSensorStats()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.Object clone()> -> _SOURCE_
<android.app.ActivityManagerNative: android.app.IActivityManager asInterface(android.os.IBinder)> -> _SOURCE_
<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()> -> _SOURCE_
<com.android.mms.dom.smil.SmilElementImpl: java.lang.String getId()> -> _SOURCE_
<android.webkit.JsResult: boolean getResult()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.res.Resources: int getColor(int)> -> _SOURCE_
<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()> -> _SOURCE_
<android.text.style.AbsoluteSizeSpan: boolean getDip()> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: float getQValue()> android.permission.STOP_APP_SWITCHES -> _SOURCE_ _NONE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata addIntlNumberFormat(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)> -> _SOURCE_
<com.android.vcard.VCardEntry$EmailData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: int getFailedUnlockAttempts()> -> _SOURCE_
<com.android.mms.transaction.TransactionState: android.net.Uri getContentUri()> -> _SOURCE_
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)> -> _SOURCE_
<android.app.Notification: java.lang.String toString()> -> _SOURCE_
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.NameSplitter createNameSplitter()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.ASN1Primitive getObject(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getBuiltInZoomControls()> -> _SOURCE_
<android.widget.SearchView: int getInputType()> -> _SOURCE_
<com.android.server.location.GeofenceState: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName$1: int getIndex(java.lang.Object)> -> _SOURCE_
<android.content.SyncQueue: java.util.Collection getOperations()> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()> -> _SOURCE_
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()> -> _SOURCE_
<com.android.contacts.util.StructuredPostalUtils: android.net.Uri getPostalAddressUri(java.lang.String)> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: int getLength()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getGroup(int)> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getColumnNumber()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getInterfaceCount()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: java.lang.String getTitle()> -> _SOURCE_
<android.net.NetworkIdentity: java.lang.String getNetworkId()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getBackgroundCall()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.View getCustomView()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: byte[] read(int)> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList getContactParms()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords$EfCsimEprlLoaded: java.lang.String getEfName()> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()> -> _SOURCE_
<com.google.common.collect.BstMutationResult: java.lang.Object getTargetKey()> -> _SOURCE_
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)> -> _SOURCE_
<org.apache.harmony.security.x509.PolicyInformation: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean getMute()> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.net.URI getUri()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long get()> -> _SOURCE_
<com.android.systemui.statusbar.NotificationData$Entry: android.view.View getLargeView()> -> _SOURCE_
<com.android.browser.IntentHandler$UrlData: com.android.browser.PreloadedTabControl getPreloadedTab()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()> -> _SOURCE_
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: int getAggregationMode(long)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalPressure(int)> -> _SOURCE_
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()> -> _SOURCE_
<java.nio.FloatToByteBufferAdapter: float get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getHeight()> -> _SOURCE_
<android.view.animation.Animation: android.view.animation.Animation clone()> -> _SOURCE_
<com.android.mms.MmsConfig: int getDefaultSMSMessagesPerThread()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> -> _SOURCE_
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(int)> -> _SOURCE_
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> -> _SOURCE_
<dalvik.system.BlockGuard$BlockGuardPolicyException: int getPolicy()> -> _SOURCE_
<java.net.URI: java.lang.String getAuthority()> -> _SOURCE_
<java.security.Provider$Service: java.lang.String getClassName()> -> _SOURCE_
<android.widget.CalendarView$WeeksAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: javax.net.ssl.SSLEngineResult$HandshakeStatus getStatus()> -> _SOURCE_
<dalvik.system.CloseGuard: dalvik.system.CloseGuard get()> -> _SOURCE_
<android.animation.ObjectAnimator: java.lang.String getPropertyName()> -> _SOURCE_
<android.webkit.HTML5VideoView: boolean getReadyToUseSurfTex()> -> _SOURCE_
<com.android.exchange.adapter.CalendarSyncAdapter: java.lang.String getCollectionName()> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getMMSReadReportsEnabled()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes()> -> _SOURCE_
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()> -> _SOURCE_
<java.util.concurrent.CountDownLatch$Sync: int getCount()> -> _SOURCE_
<java.util.HashMap: java.util.Iterator newEntryIterator()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()> -> _SOURCE_
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> -> _SOURCE_
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getMetaData()> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call getCall()> -> _SOURCE_
<android.widget.GridLayout$PackedMap: java.lang.Object getValue(int)> -> _SOURCE_
<com.google.android.mms.pdu.ReadRecInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getExpires()> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.lang.Object writeReplace()> -> _SOURCE_
<android.webkit.WebViewClassic: int getViewWidth()> -> _SOURCE_
<android.nfc.NdefRecord: android.net.Uri toUri()> -> _SOURCE_
<java.text.SimpleDateFormat: java.lang.Object clone()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhoneData: boolean isEmpty()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()> -> _SOURCE_
<org.apache.james.mime4j.decoder.ByteQueue: byte dequeue()> -> _SOURCE_
<java.security.SecureRandom: byte[] getSeed(int)> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()> -> _SOURCE_
<android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo getNextPoolable()> -> _SOURCE_
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> _SOURCE_
<android.text.style.BackgroundColorSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$2: float getInterpolation(float)> -> _SOURCE_
<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.BluetoothDiscoverableEnabler getDiscoverableEnabler()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: java.lang.Object getItem(int)> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)> -> _SOURCE_
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()> -> _SOURCE_
<android.location.Address: java.lang.String getSubThoroughfare()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getCreateContactActivityClassName()> -> _SOURCE_
<android.widget.VideoView: int getBufferPercentage()> -> _SOURCE_
<com.android.calendar.month.MonthWeekEventsView: android.text.format.Time getDayFromLocation(float)> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getViewTypeCount()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: boolean getSpecified()> -> _SOURCE_
<com.android.calendar.CalendarController: com.android.calendar.CalendarController getInstance(android.content.Context)> -> _SOURCE_
<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()> -> _SOURCE_
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)> -> _SOURCE_
<android.view.ViewConfiguration: int getHoverTapTimeout()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: gov.nist.core.NameValueList getAuthParams()> -> _SOURCE_
<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()> -> _SOURCE_
<android.preference.Preference: java.lang.CharSequence getTitle()> -> _SOURCE_
<java.nio.ShortBuffer: java.lang.Object array()> -> _SOURCE_
<android.view.HardwareRenderer$GlRenderer: android.view.HardwareCanvas getCanvas()> -> _SOURCE_
<android.content.res.CompatibilityInfo$Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)> -> _SOURCE_
<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine1()> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: int getViaPort()> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()> -> _SOURCE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call getCall()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] getArray()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getForegroundCall()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()> -> _SOURCE_
<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()> -> _SOURCE_
<android.view.View: int getScrollY()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CredentialsProvider createCredentialsProvider()> -> _SOURCE_
<android.widget.ListView$ArrowScrollFocusResult: int getAmountToScroll()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaMin()> -> _SOURCE_
<dalvik.system.profiler.HprofData: int getDepth()> -> _SOURCE_
<android.content.Context: java.lang.String getString(int)> -> _SOURCE_
<java.net.Socket: boolean getReuseAddress()> -> _SOURCE_
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()> -> _SOURCE_
<android.os.HandlerThread: int getThreadId()> -> _SOURCE_
<com.android.inputmethod.latin.StaticInnerHandlerWrapper: java.lang.Object getOuterInstance()> -> _SOURCE_
<com.android.internal.os.PowerProfile: double getBatteryCapacity()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: boolean getStrictErrorChecking()> -> _SOURCE_
<java.security.cert.CertPathValidator: java.lang.String getAlgorithm()> -> _SOURCE_
<libcore.icu.RuleBasedCollatorICU: java.text.CollationKey getCollationKey(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentLengthHeader createContentLengthHeader(int)> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase()> -> _SOURCE_
<android.os.Parcel: java.util.ArrayList createStringArrayList()> -> _SOURCE_
<java.lang.Thread: java.lang.String getName()> -> _SOURCE_
<com.android.common.widget.GroupingListAdapter: int getViewTypeCount()> -> _SOURCE_
<org.json.JSONObject: double getDouble(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: byte[] getEncoded()> -> _SOURCE_
<android.os.UEventObserver: java.lang.String access$100()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> -> _SOURCE_
<com.android.contacts.list.DefaultContactBrowseListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatLocales()> -> _SOURCE_
<android.webkit.WebViewCore$AutoFillData: int getQueryId()> -> _SOURCE_
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.webkit.WebView$PrivateAccess: float getVerticalScrollFactor()> -> _SOURCE_
<java.nio.CharSequenceAdapter: char get(int)> -> _SOURCE_
<gov.nist.javax.sip.header.CSeq: int getSequenceNumber()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getCallForwardingIndicator()> -> _SOURCE_
<org.apache.harmony.security.x509.InfoAccessSyntax$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()> -> _SOURCE_
<com.google.common.collect.SortedLists$KeyPresentBehavior: com.google.common.collect.SortedLists$KeyPresentBehavior[] values()> -> _SOURCE_
<android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()> -> _SOURCE_
<libcore.io.ForwardingOs: java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int)> -> _SOURCE_
<com.android.settings.net.ChartDataLoader: com.android.settings.net.ChartData loadInBackground()> -> _SOURCE_
<com.android.mms.transaction.SmsReceiver: com.android.mms.transaction.SmsReceiver getInstance()> -> _SOURCE_
<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCountry()> -> _SOURCE_
<android.view.inputmethod.InputBinding: int getUid()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: boolean getBubbles()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.Header createHeader(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.providers.calendar.QueryParameterUtils: java.lang.String getQueryParameter(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.widget.AdapterViewAnimator: int getDisplayedChild()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)> -> _SOURCE_
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$PinState getUniversalPinState()> -> _SOURCE_
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdnNumber()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Group: org.apache.james.mime4j.field.address.MailboxList getMailboxes()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud: float getScale()> -> _SOURCE_
<com.android.browser.TabControl: int getTabPosition(com.android.browser.Tab)> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: void getEnhancedVoicePrivacy(android.os.Message)> -> _SOURCE_
<java.lang.SecurityManager: java.lang.Object getSecurityContext()> -> _SOURCE_
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getReturnType()> -> _SOURCE_
<android.webkit.WebViewClassic: android.graphics.Rect sendOurVisibleRect()> -> _SOURCE_
<com.android.camera.PreferenceGroup: com.android.camera.CameraPreference get(int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)> -> _SOURCE_
<android.widget.CalendarView: int getDateTextAppearance()> -> _SOURCE_
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.String getSignatureAttribute()> -> _SOURCE_
<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind getKindForMimetype(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.MimeVersion: int getMajorVersion()> -> _SOURCE_
<android.view.View: float getBottomFadingEdgeStrength()> -> _SOURCE_
<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()> -> _SOURCE_
<java.security.Security: java.security.Provider getProvider(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)> -> _SOURCE_
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getResourcePath()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarHeight()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String getRest()> -> _SOURCE_
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> -> _SOURCE_
<android.app.ITransientNotification$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.app.BackStackRecord: java.lang.String getName()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()> -> _SOURCE_
<com.android.camera.CameraHolder: int getBackCameraId()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap access$000(gov.nist.javax.sip.stack.SIPTransactionStack)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String toString()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: int getIconId(java.lang.String)> -> _SOURCE_
<javax.crypto.ExemptionMechanism: int getOutputSize(int)> -> _SOURCE_
<android.widget.GridLayout: android.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)> -> _SOURCE_
<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: char readChar()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encodeBody()> -> _SOURCE_
<com.android.contacts.list.ContactListAdapter: long getSelectedContactDirectoryId()> -> _SOURCE_
<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<java.util.EnumSet: java.lang.Object writeReplace()> -> _SOURCE_
<android.database.MatrixCursor: double getDouble(int)> -> _SOURCE_
<android.view.ViewGroup: android.view.View getChildAt(int)> -> _SOURCE_
<android.text.StaticLayout: int getLineCount()> -> _SOURCE_
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.utility.EmailAsyncTask$Tracker: int getTaskCountForTest()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearExtension()> -> _SOURCE_
<android.media.MediaRouter: int getRouteCountStatic()> -> _SOURCE_
<android.view.ViewConfiguration: int getTapTimeout()> -> _SOURCE_
<android.content.pm.ManifestDigest: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: android.app.Dialog createDialog(android.os.Bundle)> -> _SOURCE_
<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getTextZoom()> -> _SOURCE_
<android.view.KeyEvent: char getDisplayLabel()> -> _SOURCE_
<com.android.internal.telephony.RIL: void getSmscAddress(android.os.Message)> android.permission.WAKE_LOCK -> _SOURCE_|SYSTEM_SETTINGS
<com.android.internal.view.IInputContext$Stub$Proxy: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)> -> _SOURCE_
<com.android.emailcommon.TempDirectory: java.io.File getTempDirectory()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.String getName()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)> -> _SOURCE_
<java.util.regex.PatternSyntaxException: java.lang.String getMessage()> -> _SOURCE_
<com.android.internal.telephony.CallManager: boolean getMute()> -> _SOURCE_
<org.apache.james.mime4j.field.UnstructuredField: java.lang.String getValue()> -> _SOURCE_
<java.net.URLConnection: java.lang.String toString()> -> _SOURCE_
<android.content.ISyncStatusObserver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.Charset detectedCharset()> -> _SOURCE_
<java.util.TreeSet: java.util.Iterator descendingIterator()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: java.lang.String getName()> -> _SOURCE_
<android.content.Intent: double getDoubleExtra(java.lang.String,double)> -> _SOURCE_
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)> -> _SOURCE_
<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: long getId()> -> _SOURCE_
<android.view.animation.AnimationSet: android.view.animation.Animation clone()> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: long getDurationMillis()> -> _SOURCE_
<java.nio.MemoryBlock$NonMovableHeapBlock: byte[] array()> -> _SOURCE_
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: java.lang.String getBase64(java.lang.String)> -> _SOURCE_
<com.android.settings.bluetooth.Utils: android.app.AlertDialog showDisconnectDialog(android.content.Context,android.app.AlertDialog,android.content.DialogInterface$OnClickListener,java.lang.CharSequence,java.lang.CharSequence)> -> _SOURCE_
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])> -> _SOURCE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: int getRPort()> -> _SOURCE_
<com.android.settings.wifi.Summary: java.lang.String get(android.content.Context,java.lang.String,android.net.NetworkInfo$DetailedState)> -> _SOURCE_
<android.database.CursorWindow: int getInt(int,int)> -> _SOURCE_
<android.view.View: android.view.TouchDelegate getTouchDelegate()> -> _SOURCE_
<android.widget.RemoteViews: android.widget.RemoteViews clone()> -> _SOURCE_
<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAddress()> -> _SOURCE_
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)> -> _SOURCE_
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)> -> _SOURCE_
<java.util.Vector: java.util.List subList(int,int)> -> _SOURCE_
<android.net.http.Connection: org.apache.http.HttpHost getHost()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefix()> -> _SOURCE_
<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)> -> _SOURCE_
<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)> -> _SOURCE_
<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> -> _SOURCE_
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.DERBoolean getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getSecond()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String urlString()> -> _SOURCE_
<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()> -> _SOURCE_
<com.android.contacts.interactions.ImportExportDialogFragment$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object pop()> -> _SOURCE_
<com.android.vcard.VCardEntry$NicknameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: int getMaximumIntegerDigits()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: long getLong(int)> -> _SOURCE_
<com.android.contacts.list.ContactsIntentResolver: com.android.contacts.list.ContactsRequest resolveIntent(android.content.Intent)> -> _SOURCE_
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingTop()> -> _SOURCE_
<com.android.server.WallpaperManagerService: java.lang.String getName()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: javax.security.auth.x500.X500Principal getIssuer()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)> -> _SOURCE_
<com.android.vcard.VCardEntryCounter: int getCount()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: java.lang.String getMimeType()> -> _SOURCE_
<java.net.NetworkInterface: int getMTU()> -> _SOURCE_
<android.hardware.Camera$Parameters: float getFocalLength()> -> _SOURCE_
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<libcore.net.http.HttpConnection$Address: java.net.Proxy getProxy()> -> _SOURCE_
<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: java.lang.String getDisplayName()> -> _SOURCE_
<android.webkit.L10nUtils: java.lang.String getLocalisedString(int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String)> -> _SOURCE_
<android.content.res.TypedArray: int getIndex(int)> -> _SOURCE_
<com.android.browser.NavScreen$TabAdapter: com.android.browser.Tab getItem(int)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getRawContactAccountType(android.content.Context)> -> _SOURCE_
<org.apache.harmony.security.x509.DistributionPointName$1: java.lang.Object getObjectToEncode(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledTouchSlop()> -> _SOURCE_
<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)> -> _SOURCE_
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer get(short[],int,int)> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerAddress()> -> _SOURCE_
<android.app.AppGlobals: java.lang.String getInitialPackage()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getMessageClass()> -> _SOURCE_
<android.widget.ImageView: int getMaxHeight()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getBandwidthTypes()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<com.android.settings.bluetooth.PbapServerProfile: int getNameResource(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()> -> _SOURCE_
<com.android.internal.telephony.CsimFileHandler: java.lang.String getEFPath(int)> -> _SOURCE_
<android.widget.PopupWindow: int getWindowLayoutType()> -> _SOURCE_
<android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristics$TriState access$200(int)> -> _SOURCE_
<org.apache.http.impl.AbstractHttpClientConnection: boolean isResponseAvailable(int)> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.lang.String getExpiresString()> -> _SOURCE_
<java.sql.Date: int getSeconds()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getLrParam()> -> _SOURCE_
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getDisplayZoomControls()> -> _SOURCE_
<android.graphics.Interpolator: int getValueCount()> -> _SOURCE_
<android.os.storage.StorageVolume: java.lang.String getPath()> -> _SOURCE_
<android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)> -> _SOURCE_
<java.util.jar.JarVerifier: java.util.Vector getSignerCertificates(java.lang.String,java.util.Map)> -> _SOURCE_
<com.android.browser.Controller: com.android.browser.WebViewFactory getWebViewFactory()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: boolean getCallForwardingIndicator()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: boolean isGlobal()> -> _SOURCE_
<com.android.server.WifiService$Multicaster: int getUid()> -> _SOURCE_
<android.view.animation.LinearInterpolator: float getInterpolation(float)> -> _SOURCE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])> -> _SOURCE_
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)> -> _SOURCE_
<gov.nist.javax.sip.address.AddressFactoryImpl: javax.sip.address.Address createAddress(java.lang.String,javax.sip.address.URI)> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getErrorStream()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getTcpNoDelay()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: int getChunkLength()> -> _SOURCE_
<com.google.android.mms.pdu.GenericPdu: int getMmsVersion()> -> _SOURCE_
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()> -> _SOURCE_
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)> -> _SOURCE_
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: float getAlpha()> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder: java.lang.String getTagName()> -> _SOURCE_
<android.view.View: float getRotation()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: android.graphics.Rect getMargins()> -> _SOURCE_
<java.net.NetworkInterface: int getIndex()> -> _SOURCE_
<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo)> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)> -> _SOURCE_
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)> -> _SOURCE_
<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.calendar.event.EditEventHelper: long constructDefaultStartTime(long)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: long getItemId(int)> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticNameStyle()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getTextContent()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMap(org.apache.harmony.xml.dom.NodeImpl)> -> _SOURCE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)> -> _SOURCE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String if_indextoname(int)> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MaxForwardsHeader createMaxForwardsHeader(int)> -> _SOURCE_
<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: long getStartMillis()> -> _SOURCE_
<android.os.Bundle: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: gov.nist.javax.sip.header.MediaRange getMediaRange()> -> _SOURCE_
<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.os.UserHandle getUserHandle()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERT61String: byte[] getOctets()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getEnableSessionCreation()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: java.lang.CharSequence getLabel()> -> _SOURCE_
<javax.crypto.Cipher: int getBlockSize()> -> _SOURCE_
<android.graphics.Region: java.lang.String toString()> -> _SOURCE_
<android.database.AbstractCursor: android.database.CursorWindow getWindow()> -> _SOURCE_
<java.util.zip.Inflater: long getBytesWritten()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createAck()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getUName()> -> _SOURCE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: long getCombinedChildId(long,long)> -> _SOURCE_
<com.android.internal.statusbar.StatusBarIconList: int getViewIndex(int)> -> _SOURCE_
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: byte[] getBytes()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getColumnPos(int)> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getBSSID()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getDomain()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1Number()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()> -> _SOURCE_
<android.widget.GridLayout: int getRowCount()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: int getMaxDisplayPhotoDim()> -> _SOURCE_
<java.net.DatagramPacket: java.net.InetAddress getAddress()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: boolean getDataRoamingEnabled()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPostDial()> -> _SOURCE_
<java.lang.TypeNotPresentException: java.lang.String typeName()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: int getWidgetToResetOnPageFadeOut()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: int getType()> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: java.lang.Object getFieldValue(java.lang.Object,java.lang.Object,java.lang.reflect.Field)> -> _SOURCE_
<com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: java.util.HashMap getBigrams(java.lang.String)> -> _SOURCE_
<android.preference.PreferenceActivity$Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer put(java.nio.FloatBuffer)> -> _SOURCE_
<android.text.style.QuoteSpan: int getColor()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhotoData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()> -> _SOURCE_
<android.webkit.WebSettings: boolean getNavDump()> -> _SOURCE_
<android.view.InputDevice: int getId()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> -> _SOURCE_
<java.nio.ReadOnlyDirectByteBuffer: byte[] protectedArray()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getRange()> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()> -> _SOURCE_
<java.net.URI: int getPort()> -> _SOURCE_
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.util.SparseIntArray: android.util.SparseIntArray clone()> -> _SOURCE_
<com.android.mms.transaction.RetrieveTransaction: int getType()> -> _SOURCE_
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: float getImplicitDuration()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> -> _SOURCE_
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)> -> _SOURCE_
<android.os.Parcel: java.util.ArrayList createBinderArrayList()> -> _SOURCE_
<java.net.URI: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: void getCallWaiting(android.os.Message)> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserPassword()> -> _SOURCE_
<gov.nist.javax.sip.header.To: java.lang.String getDisplayName()> -> _SOURCE_
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()> -> _SOURCE_
<gov.nist.javax.sip.header.RSeq: int getSequenceNumber()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String flatten()> -> _SOURCE_
<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()> -> _SOURCE_
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()> -> _SOURCE_
<java.text.Collator: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()> -> _SOURCE_
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> -> _SOURCE_
<com.android.providers.contacts.DefaultCallLogInsertionHelper: java.lang.String getGeocodedLocationFor(java.lang.String,java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()> -> _SOURCE_
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<org.ccil.cowan.tagsoup.HTMLScanner: int getLineNumber()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardStatus$PinState getPin1State()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayHeight(int,int,int)> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getButtonId()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.net.wifi.WifiStateMachine: android.net.wifi.WifiInfo syncRequestConnectionInfo()> -> _SOURCE_
<com.android.mms.model.SlideModel: int getSlideSize()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> -> _SOURCE_
<java.util.Hashtable$HashtableEntry: java.lang.Object getKey()> -> _SOURCE_
<android.net.http.AndroidHttpClientConnection: int getRemotePort()> -> _SOURCE_
<com.google.common.collect.Ordering: java.util.List leastOf(java.lang.Iterable,int)> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: boolean isRetryForever()> -> _SOURCE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String encodeBody()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()> -> _SOURCE_
<java.net.URI: java.lang.String getPath()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalPressure(int,int)> -> _SOURCE_
<android.app.Activity: java.lang.CharSequence getTitle()> -> _SOURCE_
<com.android.providers.contacts.ContactLookupKey: int getAccountHashCode(java.lang.String,java.lang.String)> -> _SOURCE_
<java.nio.FileChannelImpl: long transferTo(long,long,java.nio.channels.WritableByteChannel)> -> _SOURCE_
<android.widget.TextView: int getMaxWidth()> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getUpperBound()> -> _SOURCE_
<java.net.Inet6Address: java.net.NetworkInterface getScopedInterface()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> -> _SOURCE_
<com.google.common.collect.Maps$1: java.lang.Object getKey()> -> _SOURCE_
<android.widget.TextView: int getHighlightColor()> -> _SOURCE_
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: int getSize()> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()> -> _SOURCE_
<java.nio.CharBuffer: java.lang.Object array()> -> _SOURCE_
<com.android.contacts.util.StreamItemEntry: long getId()> -> _SOURCE_
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionTimeout()> -> _SOURCE_
<android.widget.LinearLayout: int getOrientation()> -> _SOURCE_
<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()> -> _SOURCE_
<android.util.NtpTrustedTime: long getCachedNtpTimeReference()> -> _SOURCE_
<java.io.EmulatedFields: java.lang.Object get(java.lang.String,java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getCarrierName(java.lang.String)> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitNetwork()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhotoData: java.lang.String getFormat()> -> _SOURCE_
<android.view.IWindowManager$Stub$Proxy: int getRotation()> -> _SOURCE_
<com.android.browser.SnapshotTab: android.content.ContentValues createSnapshotValues()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(boolean)> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500Name getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<java.util.GregorianCalendar: int getActualMinimum(int)> -> _SOURCE_
<libcore.io.StructGroupReq: java.lang.String toString()> -> _SOURCE_
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()> -> _SOURCE_
<android.preference.Preference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()> -> _SOURCE_
<org.apache.http.impl.cookie.RFC2109Spec: org.apache.http.Header getVersionHeader()> -> _SOURCE_
<android.preference.PreferenceActivity$Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)> -> _SOURCE_
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> -> _SOURCE_
<java.util.Currency: java.util.Set getAvailableCurrencies()> -> _SOURCE_
<com.android.settings.SettingsPreferenceFragment: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()> -> _SOURCE_
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()> -> _SOURCE_
<com.android.mms.data.Contact: boolean isEmail()> -> _SOURCE_
<android.webkit.PluginManager: java.lang.Class getPluginClass(java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.textservice.SuggestionsInfo: int getSequence()> -> _SOURCE_
<java.security.cert.CertPath: java.lang.String toString()> -> _SOURCE_
<java.lang.Thread: int getPriority()> -> _SOURCE_
<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()> -> _SOURCE_
<gov.nist.javax.sip.header.ProxyRequire: java.lang.String encodeBody()> -> _SOURCE_
<java.util.Date: java.lang.String toString()> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getPrefix()> -> _SOURCE_
<java.lang.String: char[] toCharArray()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getSubject()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: boolean isChecked()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int[] getUsersLocked()> -> _SOURCE_
<libcore.io.ForwardingOs: java.lang.String getnameinfo(java.net.InetAddress,int)> -> _SOURCE_
<android.database.CursorWindow: short getShort(int,int)> -> _SOURCE_
<android.app.ListFragment: int getSelectedItemPosition()> -> _SOURCE_
<com.android.mms.dom.smil.TimeListImpl: int getLength()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent: int update(android.content.Context,android.content.ContentValues)> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getAssistIntent(int)> -> _SOURCE_
<android.view.MotionEvent: float getTouchMinor()> -> _SOURCE_
<org.apache.harmony.security.x501.Name$1: java.util.Collection getValues(java.lang.Object)> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: int getThrottle(java.lang.String)> -> _SOURCE_
<com.android.calendar.month.SimpleWeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)> -> _SOURCE_
<com.android.camera.ComboPreferences: android.content.SharedPreferences$Editor edit()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalAlertBytes(long)> -> _SOURCE_
<android.app.WallpaperInfo: java.lang.String toString()> -> _SOURCE_
<org.apache.james.mime4j.field.address.Mailbox: org.apache.james.mime4j.field.address.DomainList getRoute()> -> _SOURCE_
<libcore.net.http.RawHeaders: java.lang.String getValue(int)> -> _SOURCE_
<android.view.MotionEvent: float getToolMinor(int)> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatMode()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: int getBeginConstraints()> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache$CachedValue getCachedValue(java.lang.Object)> -> _SOURCE_
<com.android.calendar.TimezoneAdapter$TimezoneRow: java.lang.String toString()> -> _SOURCE_
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData getMetaDataAt(int)> -> _SOURCE_
<com.android.inputmethod.latin.ResourceUtils: float getFraction(android.content.res.TypedArray,int,float)> -> _SOURCE_
<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<android.widget.AbsSpinner: android.view.View getSelectedView()> -> _SOURCE_
<android.text.Layout: float getLineWidth(int)> -> _SOURCE_
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)> -> _SOURCE_
<libcore.icu.NativeDecimalFormat: java.lang.String getPositiveSuffix()> -> _SOURCE_
<java.net.InterfaceAddress: short getNetworkPrefixLength()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getProtocol()> -> _SOURCE_
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)> -> _SOURCE_
<com.android.browser.provider.SnapshotProvider: java.io.File getOldDatabasePath(android.content.Context)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()> -> _SOURCE_
<android.filterfw.core.FrameFormat: int getTarget()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayLanguage()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getJsEngineFlags()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructStat lstat(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.RawContact: android.content.ContentValues getValues()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()> -> _SOURCE_
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnectionAc getDataConnectionAc()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog createDialog(gov.nist.javax.sip.SipProviderImpl,gov.nist.javax.sip.message.SIPResponse)> -> _SOURCE_
<android.text.BoringLayout: int getLineTop(int)> -> _SOURCE_
<com.android.mms.dom.NamedNodeMapImpl: int getLength()> -> _SOURCE_
<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl getBatteryStats()> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.util.Collection values()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getStorageEncryptionStatus(int)> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()> -> _SOURCE_
<com.android.contacts.model.dataitem.PhoneDataItem: int getType()> -> _SOURCE_
<com.android.emailcommon.mail.Message: java.lang.String getUid()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()> -> _SOURCE_
<java.nio.CharBuffer: int hashCode()> -> _SOURCE_
<android.webkit.WebSettings: int getCacheMode()> -> _SOURCE_
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<android.net.EthernetDataTracker: boolean isAvailable()> -> _SOURCE_
<com.google.common.base.CharMatcher: java.lang.String trimFrom(java.lang.CharSequence)> -> _SOURCE_
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)> -> _SOURCE_
<android.media.IMediaScannerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxMessageSize()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String encodeBody()> -> _SOURCE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.MmiCode$State getState()> -> _SOURCE_
<gov.nist.core.StringTokenizer: java.lang.String getSDPFieldName(java.lang.String)> -> _SOURCE_
<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.app.Activity: int getTitleColor()> -> _SOURCE_
<android.content.SyncAdapterType: java.lang.String toString()> -> _SOURCE_
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_|SYNCHRONIZATION_DATA
<com.android.contacts.voicemail.VoicemailStatusHelperImpl: int getNumberActivityVoicemailSources(android.database.Cursor)> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getTimeCacheMaxAge()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()> -> _SOURCE_
<android.telephony.CellSignalStrengthGsm: int getLevel()> -> _SOURCE_
<android.telephony.SignalStrength: int getLteRsrp()> -> _SOURCE_
<java.io.ObjectInputStream: java.lang.String readLine()> -> _SOURCE_
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getItemPosition(java.lang.Object)> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: int getScore()> -> _SOURCE_
<com.android.contacts.activities.NonPhoneActivity$NonPhoneDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> -> _SOURCE_
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()> -> _SOURCE_
<android.view.View: java.lang.Object getTag(int)> -> _SOURCE_
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)> -> _SOURCE_
<com.android.settings.widget.InvertedChartAxis: long buildLabel(android.content.res.Resources,android.text.SpannableStringBuilder,long)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object[] toArray(java.lang.Object[])> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()> -> _SOURCE_
<android.app.ActivityManager: int getLauncherLargeIconDensity()> -> _SOURCE_
<android.app.DialogFragment: boolean getShowsDialog()> -> _SOURCE_
<android.os.ParcelUuid: java.util.UUID getUuid()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String[] getBandwidthTypes()> -> _SOURCE_
<android.location.LocationRequest: long getFastestInterval()> -> _SOURCE_
<com.android.phone.PhoneUtils: java.lang.String getInitialNumber(android.content.Intent)> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)> -> _SOURCE_
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()> -> _SOURCE_
<android.telephony.SmsCbCmasInfo: int getSeverity()> -> _SOURCE_
<android.filterfw.core.SyncRunner: java.lang.Exception getError()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int finishPostLayoutPolicyLw()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()> -> _SOURCE_
<android.view.InputChannel: java.lang.String getName()> -> _SOURCE_
<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestionsWithSessionId(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)> -> _SOURCE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()> -> _SOURCE_
<com.android.browser.BreadCrumbView: int getMaxVisible()> -> _SOURCE_
<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl: int getState()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: java.lang.Object getKey()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getRtpmap(int)> -> _SOURCE_
<com.android.contacts.NfcHandler: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)> -> _SOURCE_
<android.webkit.WebSettings: boolean getAllowContentAccess()> -> _SOURCE_
<libcore.net.url.FileURLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()> -> _SOURCE_
<android.widget.NumberPicker: int getValue()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> android.permission.WRITE_SOCIAL_STREAM -> _SOURCE_
<java.net.URL: java.net.URI toURI()> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getIfNoneMatch()> -> _SOURCE_
<android.location.Criteria: int getSpeedAccuracy()> -> _SOURCE_
<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Integer get(int)> -> _SOURCE_
<java.util.logging.Formatter: java.lang.String formatMessage(java.util.logging.LogRecord)> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: java.util.Iterator descendingIterator()> -> _SOURCE_
<android.provider.MediaStore$Video$Thumbnails: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.GroupMembershipDataItem: java.lang.String getGroupSourceId()> -> _SOURCE_
<android.renderscript.Element: int getBytesSize()> -> _SOURCE_
<android.view.InputQueue: android.view.InputChannel getInputChannel()> -> _SOURCE_
<com.android.browser.BookmarkUtils: android.graphics.Bitmap createIcon(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap,com.android.browser.BookmarkUtils$BookmarkIconType)> -> _SOURCE_
<android.net.NetworkStats$Entry: java.lang.String toString()> -> _SOURCE_
<android.net.wifi.WifiStateMachine: int getFrequencyBand()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()> -> _SOURCE_
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()> -> _SOURCE_
<java.text.SimpleDateFormat: java.lang.String toPattern()> -> _SOURCE_
<com.android.phone.PhoneUtils: java.lang.String getPresentationString(android.content.Context,int)> -> _SOURCE_
<android.util.FastImmutableArraySet: java.util.Iterator iterator()> -> _SOURCE_
<com.google.common.collect.Synchronized$SynchronizedSetMultimap: java.util.Collection get(java.lang.Object)> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: java.util.List getSearchablesInGlobalSearch()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findCancelTransaction(gov.nist.javax.sip.message.SIPRequest,boolean)> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: java.lang.String[] getActiveApnTypes()> -> _SOURCE_
<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(boolean,boolean)> -> _SOURCE_
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccRecords getIccRecords(int)> -> _SOURCE_
<android.content.SyncStorageEngine: long getDelayUntilTime(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()> -> _SOURCE_
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)> -> _SOURCE_
<com.android.internal.widget.ScrollingTabContainerView$TabView: android.app.ActionBar$Tab getTab()> -> _SOURCE_
<android.database.AbstractCursor: android.os.Bundle getExtras()> -> _SOURCE_
<android.text.style.ImageSpan: java.lang.String getSource()> -> _SOURCE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry()> -> _SOURCE_
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: int getCSeqNumber()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()> android.permission.READ_CONTACTS -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)> -> _SOURCE_
<android.net.LinkCapabilities: java.util.Set keySet()> -> _SOURCE_
<android.hardware.usb.UsbDevice: int getDeviceSubclass()> -> _SOURCE_
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)> -> _SOURCE_
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()> android.permission.CALL_PRIVILEGED -> _SOURCE_
<android.view.View: android.content.Context getContext()> -> _SOURCE_
<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: int hashCode()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLContextImpl: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()> -> _SOURCE_
<com.android.internal.util.State: java.lang.String getName()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getZoom()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec: java.lang.String toString()> -> _SOURCE_
<android.telephony.TelephonyManager: int getPhoneType()> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getCompany()> -> _SOURCE_
<android.database.CursorWindow: long getLong(int,int)> -> _SOURCE_
<com.android.mms.ui.SlideshowEditor: com.android.mms.model.RegionModel getImageRegion()> -> _SOURCE_
<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)> -> _SOURCE_
<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getCipherSuite()> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain()> -> _SOURCE_
<java.io.FilterReader: int read()> -> _SOURCE_
<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)> -> _SOURCE_
<com.android.browser.addbookmark.FolderSpinnerAdapter: long recentFolderId()> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getQName(int)> -> _SOURCE_
<android.renderscript.BaseObj: java.lang.String getName()> -> _SOURCE_
<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: int getPort()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: void getTextContent(java.lang.StringBuilder)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: int getMaxChallengeTop()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getItemViewType(int)> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: int disableApnType(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteConnection: byte[] access$500()> -> _SOURCE_
<android.view.KeyEvent: int getRepeatCount()> -> _SOURCE_
<android.view.DragEvent: java.lang.Object getLocalState()> -> _SOURCE_
<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: int getQueryType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLContextImpl: javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()> -> _SOURCE_
<com.android.server.IntentResolver: java.util.Set filterSet()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)> -> _SOURCE_
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$2: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<android.view.View$3: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.Utils: java.lang.String getSignature()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayHeight(int,int,int)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)> -> _SOURCE_
<com.android.mms.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.view.IWindowSession$Stub$Proxy: boolean getInTouchMode()> -> _SOURCE_
<android.telephony.CellInfo: int getTimeStampType()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.Object clone()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<java.util.zip.ZipEntry: long getSize()> -> _SOURCE_
<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()> -> _SOURCE_
<android.widget.SimpleAdapter: android.widget.SimpleAdapter$ViewBinder getViewBinder()> -> _SOURCE_
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)> -> _SOURCE_
<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)> -> _SOURCE_
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)> -> _SOURCE_
<gov.nist.javax.sip.header.Via: int getTTL()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)> -> _SOURCE_
<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.FieldParser getParser(java.lang.String)> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()> -> _SOURCE_
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()> -> _SOURCE_
<com.android.browser.TabControl: com.android.browser.Tab getTabFromAppId(java.lang.String)> -> _SOURCE_
<com.android.mms.MmsConfig: boolean getSlideDurationEnabled()> -> _SOURCE_
<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.lang.Boolean: java.lang.String toString()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: int getOrientationFromWindowsLocked()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getScaledMeasuredWidth(android.view.View)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean getUnitTestMode()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUser()> -> _SOURCE_
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)> -> _SOURCE_
<com.android.vcard.VCardEntry$BirthdayData: java.lang.String getBirthday()> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: long getResetTime(java.lang.String)> -> _SOURCE_
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()> -> _SOURCE_
<java.util.logging.LogRecord: java.lang.Object[] getParameters()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock: boolean isWriteLocked()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String getPeerHostName()> -> _SOURCE_
<com.android.calendar.agenda.AgendaFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.RectF getShownFrameLw()> -> _SOURCE_
<com.android.providers.calendar.CalendarProvider2: java.lang.String[] tokenizeSearchQuery(java.lang.String)> -> _SOURCE_
<android.view.Choreographer: android.view.Choreographer getInstance()> -> _SOURCE_
<android.media.IAudioService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.Attr createAttribute(java.lang.String)> -> _SOURCE_
<com.android.mms.MmsConfig: int getAliasMinChars()> -> _SOURCE_
<android.view.VelocityTracker$Estimator: float getYCoeff(int)> -> _SOURCE_
<android.preference.PreferenceManager: int getNextRequestCode()> -> _SOURCE_
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> -> _SOURCE_
<android.drm.DrmRights: byte[] getData()> -> _SOURCE_
<java.util.TreeMap$BoundedMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.ex.chips.RecipientEntry: java.lang.String getDestination()> -> _SOURCE_
<android.webkit.CallbackProxy: int getProgress()> -> _SOURCE_
<java.util.TimeZone: java.lang.String[] getAvailableIDs(int)> -> _SOURCE_
<java.nio.HeapByteBuffer: char getChar()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getX(int)> -> _SOURCE_
<com.google.common.collect.ForwardingSet: int standardHashCode()> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()> -> _SOURCE_
<android.content.Intent: android.graphics.Rect getSourceBounds()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int)> -> _SOURCE_
<android.webkit.WebViewClassic: float getZoomOverviewScale()> -> _SOURCE_
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getCollectionName()> -> _SOURCE_
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: short getFill()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS -> _SOURCE_|ACCOUNT_INFORMATION
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String toString()> -> _SOURCE_
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()> -> _SOURCE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getNoFallbackControl(java.util.List)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getAvailableNetworks(android.os.Message)> -> _SOURCE_
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getInput()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getResponseMessage()> -> _SOURCE_
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)> -> _SOURCE_
<com.android.emailcommon.provider.Account: android.content.ContentValues toContentValues()> -> _SOURCE_
<java.math.BigDecimal: short shortValueExact()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getCallForwardingOption(int,android.os.Message)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: android.view.View getCustomView()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: byte[] protectedArray()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.math.BigInteger getSerialNumber()> -> _SOURCE_
<java.security.KeyStore$SecretKeyEntry: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getResponseCount()> -> _SOURCE_
<android.filterfw.core.SimpleFrame: int[] getInts()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)> -> _SOURCE_
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)> -> _SOURCE_
<android.widget.RemoteViewsService: java.util.HashMap access$100()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getCallId()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: java.lang.String toString()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: com.android.emailcommon.mail.Address[] getReplyTo()> -> _SOURCE_
<gov.nist.javax.sip.header.AddressParametersHeader: javax.sip.address.Address getAddress()> -> _SOURCE_
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)> -> _SOURCE_
<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.webkit.WebViewClassic: int getScrollY()> -> _SOURCE_
<com.android.camera.LocationManager: android.location.Location getCurrentLocation()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)> -> _SOURCE_
<com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri getAttachmentUri(long,long)> -> _SOURCE_
<android.widget.ScrollBarDrawable: int getOpacity()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getPhoneticNameStyle()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getTollFree()> -> _SOURCE_
<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()> -> _SOURCE_
<android.content.res.Configuration: java.lang.String toString()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<com.android.server.wm.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getViewportWidth()> -> _SOURCE_
<android.view.Window: int getLocalFeatures()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)> -> _SOURCE_
<com.android.mms.dom.smil.parser.SmilContentHandler: org.w3c.dom.smil.SMILDocument getSmilDocument()> -> _SOURCE_
<android.os.Looper: java.lang.Thread getThread()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelHolder: int getChildDrawingOrder(int,int)> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERSetParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<com.google.common.collect.AbstractMultiset: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils: com.android.providers.contacts.ContactLocaleUtils getIntance()> -> _SOURCE_
<libcore.io.ForwardingOs: libcore.io.StructStat stat(java.lang.String)> -> _SOURCE_
<com.android.browser.TitleBar: int getEmbeddedHeight()> -> _SOURCE_
<com.android.emailcommon.mail.BodyPart: com.android.emailcommon.mail.Multipart getParent()> -> _SOURCE_
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getMe(boolean)> -> _SOURCE_
<com.android.contacts.datepicker.DatePicker$SavedState: int getMonth()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(long)> -> _SOURCE_
<java.io.ObjectInputStream: short readShort()> -> _SOURCE_
<com.android.settings.wifi.AccessPoint: int getLevel()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getPublicId()> -> _SOURCE_
<dalvik.system.profiler.HprofData$StackTrace: java.lang.String toString()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet keySet()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getIccSerialNumber()> -> _SOURCE_
<android.os.IHardwareService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy: java.lang.String toString()> -> _SOURCE_
<java.util.concurrent.Semaphore: java.util.Collection getQueuedThreads()> -> _SOURCE_
<gov.nist.javax.sip.header.ErrorInfoList: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getMeid()> -> _SOURCE_
<android.os.Environment: java.io.File getSecureDataDirectory()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent()> -> _SOURCE_
<java.nio.ByteBuffer: int hashCode()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.Ease$Quart$2: float getInterpolation(float)> -> _SOURCE_
<gov.nist.javax.sip.header.CallInfo: java.lang.String getPurpose()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<javax.crypto.Mac: byte[] doFinal(byte[])> -> _SOURCE_
<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object delegate()> -> _SOURCE_
<com.android.internal.view.IInputMethodClient$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.ContiguousSet asSet(com.google.common.collect.DiscreteDomain)> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)> -> _SOURCE_
<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy getSmallerMapStorage(java.util.SortedMap)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()> -> _SOURCE_
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()> -> _SOURCE_
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> -> _SOURCE_
<android.app.ActivityManagerProxy: int getProcessLimit()> -> _SOURCE_
<javax.crypto.Cipher: byte[] doFinal(byte[])> -> _SOURCE_
<android.sax.Element: java.lang.String toString()> -> _SOURCE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isStale()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver getEntityResolver()> -> _SOURCE_
<javax.crypto.KeyGenerator: java.lang.String getAlgorithm()> -> _SOURCE_
<android.webkit.HTML5VideoView: int getCurrentPosition()> -> _SOURCE_
<android.widget.GridView: int getGravity()> -> _SOURCE_
<android.net.wifi.WifiInfo: int getLinkSpeed()> -> _SOURCE_
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: void getAvailableNetworks(android.os.Message)> -> _SOURCE_
<com.google.common.collect.MapMaker$NullConcurrentMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: int getHash()> -> _SOURCE_
<android.database.AbstractWindowedCursor: float getFloat(int)> -> _SOURCE_
<com.android.emailcommon.internet.TextBody: java.io.InputStream getInputStream()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getDataView()> -> _SOURCE_
<android.webkit.WebSettings: boolean getBlockNetworkLoads()> -> _SOURCE_
<android.widget.Editor$SelectionStartHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)> -> _SOURCE_
<android.webkit.Plugin: java.lang.String getDescription()> -> _SOURCE_
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()> -> _SOURCE_
<android.net.NetworkStatsHistory: int getIndexAfter(long)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: boolean getCallForwardingIndicator()> -> _SOURCE_
<com.android.mms.dom.smil.ElementSequentialTimeContainerImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] getParameters()> -> _SOURCE_
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()> -> _SOURCE_
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.util.Date getReceivedDate()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String validatePrefix(java.lang.String,boolean,java.lang.String)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)> -> _SOURCE_
<android.widget.CalendarView: int getWeekNumberColor()> -> _SOURCE_
<com.android.deskclock.Alarms: android.database.Cursor getAlarmsCursor(android.content.ContentResolver)> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionaryGetter: java.util.ArrayList getDictionaryFiles(java.util.Locale,android.content.Context)> -> _SOURCE_
<com.android.server.ConnectivityService: int getNetworkPreference()> -> _SOURCE_
<com.android.calendar.month.MonthByWeekAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMap asMap()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()> -> _SOURCE_
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)> -> _SOURCE_
<android.app.IUiModeManager$Stub$Proxy: int getNightMode()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)> -> _SOURCE_
<android.filterfw.core.StreamPort: java.lang.String toString()> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap: boolean isPartialView()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.view.DragEvent: float getY()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyFlashScreen()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getOIDs()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListAdapter: int getPinnedHeaderCount()> -> _SOURCE_
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getVolume()> -> _SOURCE_
<com.google.common.collect.TreeMultiset$Reference: java.lang.Object get()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedRegions()> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<libcore.io.HeapBufferIterator: short readShort()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: android.database.Cursor access$1100(com.android.calendar.agenda.AgendaWindowAdapter,int)> -> _SOURCE_
<com.google.common.collect.SortedLists$KeyAbsentBehavior: com.google.common.collect.SortedLists$KeyAbsentBehavior[] values()> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)> -> _SOURCE_
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<java.text.NumberFormat: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProfileName()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothManager: com.android.settings.bluetooth.LocalBluetoothProfileManager getProfileManager()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: long getItemId(int)> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)> -> _SOURCE_
<android.text.style.UnderlineSpan: int getSpanTypeId()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$ViewEntry: long getId()> -> _SOURCE_
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)> -> _SOURCE_
<dalvik.system.BlockGuard$1: int getPolicyMask()> -> _SOURCE_
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getColumnNumber(int)> -> _SOURCE_
<android.location.Criteria: int getHorizontalAccuracy()> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)> -> _SOURCE_
<android.os.Message: java.lang.Runnable getCallback()> -> _SOURCE_
<com.android.browser.view.ScrollerView: float getTopFadingEdgeStrength()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: int indexOf(gov.nist.core.GenericObject)> -> _SOURCE_
<libcore.icu.CollationElementIteratorICU: libcore.icu.CollationElementIteratorICU getInstance(int,java.lang.String)> -> _SOURCE_
<java.net.ServerSocket: java.net.SocketImpl getImpl$()> -> _SOURCE_
<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getSubtypeLocaleDisplayName(java.lang.String)> -> _SOURCE_
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getConnectedDevices()> -> _SOURCE_
<com.android.browser.DateSortedExpandableListAdapter: long getCombinedGroupId(long)> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: int getViewTypeCount()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> -> _SOURCE_
<java.nio.DirectByteBuffer: byte get()> -> _SOURCE_
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()> -> _SOURCE_
<android.net.wifi.WifiSsid: byte[] getOctets()> -> _SOURCE_
<java.nio.DirectByteBuffer: byte[] protectedArray()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()> -> _SOURCE_
<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()> -> _SOURCE_
<com.android.server.NativeDaemonConnectorException: int getCode()> -> _SOURCE_
<android.filterfw.core.Filter: java.lang.String toString()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()> -> _SOURCE_
<gov.nist.javax.sip.header.Priority: java.lang.String encodeBody()> -> _SOURCE_
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()> -> _SOURCE_
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)> -> _SOURCE_
<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ServerSessionContext getServerSessionContext()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getOpaque()> -> _SOURCE_
<android.webkit.WebViewCore$EventHub: android.os.Looper getWebKitLooper()> -> _SOURCE_
<com.google.common.collect.ContiguousSet: com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean)> -> _SOURCE_
<com.android.vcard.VCardProperty: byte[] getByteValue()> -> _SOURCE_
<android.view.ViewGroup$ChildListForAccessibility: int getChildCount()> -> _SOURCE_
<java.net.InetSocketAddress: java.lang.String getHostString()> -> _SOURCE_
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)> -> _SOURCE_
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()> -> _SOURCE_
<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String getToken()> -> _SOURCE_
<java.lang.RealToString: java.lang.RealToString getInstance()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)> -> _SOURCE_
<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: java.util.List createHeaders(java.lang.String)> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.DTDHandler getDTDHandler()> -> _SOURCE_
<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()> -> _SOURCE_
<android.content.SyncResult: java.lang.String toDebugString()> -> _SOURCE_
<android.preference.MultiCheckPreference: java.lang.CharSequence getSummary()> -> _SOURCE_
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewGroupActivity()> -> _SOURCE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()> -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationTitle()> -> _SOURCE_
<android.view.GLES20Canvas: int getMaximumBitmapWidth()> -> _SOURCE_
<android.webkit.WebStorageClassic: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)> -> _SOURCE_
<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.ccil.cowan.tagsoup.PYXWriter: int getEntity()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentGprsState()> -> _SOURCE_
<android.preference.TwoStatePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)> -> _SOURCE_
<android.media.RemoteControlClient: android.media.IRemoteControlClient getIRemoteControlClient()> -> _SOURCE_
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: int getToIndex(java.lang.Object)> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)> -> _SOURCE_
<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.net.DhcpInfoInternal: java.util.Collection getRoutes()> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getCount()> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnNumber()> -> _SOURCE_
<com.google.common.base.Throwables: java.lang.Throwable getRootCause(java.lang.Throwable)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport$Context: java.util.Enumeration getPrefixes()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.NodeList getTimeChildren()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getClassName()> -> _SOURCE_
<android.widget.TextView: int getAccessibilityCursorPosition()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getMinimumFontSize()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getMessage()> -> _SOURCE_
<com.android.mms.util.PduLoaderManager: java.lang.String getTag()> -> _SOURCE_
<javax.crypto.Cipher: java.security.Provider getProvider()> -> _SOURCE_
<android.text.style.StyleSpan: int getStyle()> -> _SOURCE_
<android.webkit.WebHistoryItemClassic: int getId()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getLastChild()> -> _SOURCE_
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)> -> _SOURCE_
<android.app.Activity: android.content.Intent getParentActivityIntent()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker weakValues()> -> _SOURCE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getNextSibling()> -> _SOURCE_
<libcore.io.StructTimeval: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.WebViewDatabase getWebViewDatabase(android.content.Context)> -> _SOURCE_
<com.google.common.collect.Cut: com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getRealm()> -> _SOURCE_
<com.android.browser.BrowserSettings: int getTextZoom()> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()> -> _SOURCE_
<android.content.SyncStorageEngine: android.util.Pair getBackoff(android.accounts.Account,int,java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.Key getKeyOn(int,int)> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getButtonId()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: int getCount()> -> _SOURCE_
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)> -> _SOURCE_
<android.telephony.ServiceState: int getCdmaEriIconIndex()> -> _SOURCE_
<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(boolean,int)> -> _SOURCE_
<java.util.TreeSet: java.util.Comparator comparator()> -> _SOURCE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$400(android.net.sip.SipAudioCall,java.lang.String)> -> _SOURCE_
<android.widget.Editor$ActionPopupWindow: int getTextOffset()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListAdapter: boolean getPinnedPartitionHeadersEnabled()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerProtocol()> -> _SOURCE_
<android.view.animation.Animation: boolean getFillBefore()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getClientTransactionTableSize()> -> _SOURCE_
<com.android.systemui.statusbar.BaseStatusBar: android.view.View updateNotificationVetoButton(android.view.View,com.android.internal.statusbar.StatusBarNotification)> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()> -> _SOURCE_
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()> -> _SOURCE_
<java.net.URI: java.net.URI parseServerAuthority()> -> _SOURCE_
<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()> -> _SOURCE_
<java.nio.HeapByteBuffer: int getInt()> -> _SOURCE_
<javax.security.cert.X509Certificate$1: java.lang.String getSigAlgName()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getSIPVersion()> -> _SOURCE_
<com.android.contacts.ContactsUtils: android.content.Intent getInvitableIntent(com.android.contacts.model.account.AccountType,android.net.Uri)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getWrappedPort()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta: java.lang.String getAccountName()> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)> -> _SOURCE_
<com.android.calendar.AsyncQueryService$Operation: java.lang.String toString()> -> _SOURCE_
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)> -> _SOURCE_
<java.util.zip.ZipEntry: long getCrc()> -> _SOURCE_
<com.android.vcard.VCardEntry$AnniversaryData: java.lang.String toString()> -> _SOURCE_
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> -> _SOURCE_
<com.android.settings.DataUsageSummary$DataUsageAdapter: int getCount()> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.AppInterface$CommandType getCmdType()> -> _SOURCE_
<java.net.Socket: java.nio.channels.SocketChannel getChannel()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Object: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object()> -> _SOURCE_
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameter(int)> -> _SOURCE_
<com.android.mms.ui.MessageItem: int getMmsDownloadStatus()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: int getState()> -> _SOURCE_
<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalRoot()> -> _SOURCE_
<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)> -> _SOURCE_
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<android.net.LinkProperties: java.util.Collection getLinkAddresses()> -> _SOURCE_
<android.text.method.DateKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()> -> _SOURCE_
<com.android.inputmethod.latin.ResizableIntArray: int[] getPrimitiveArray()> -> _SOURCE_
<gov.nist.core.HostPort: gov.nist.core.Host getHost()> -> _SOURCE_
<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()> -> _SOURCE_
<android.net.sip.ISipService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.media.Ringtone: int getStreamType()> -> _SOURCE_
<com.android.server.connectivity.Vpn: java.lang.String getTcpBufferSizesPropName()> -> _SOURCE_
<gov.nist.javax.sip.header.MinExpires: java.lang.String encodeBody()> -> _SOURCE_
<android.content.Intent: java.lang.String getType()> -> _SOURCE_
<android.view.View$3: java.lang.Float get(android.view.View)> -> _SOURCE_
<com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: java.lang.String getValue()> -> _SOURCE_
<org.apache.commons.logging.LogConfigurationException: java.lang.Throwable getCause()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortServer()> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)> -> _SOURCE_
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isConnected()> -> _SOURCE_
<com.google.common.collect.ForwardingCollection: java.lang.Object[] toArray(java.lang.Object[])> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean getDataRoamingEnabled()> -> _SOURCE_
<javax.net.SocketFactory: java.net.Socket createSocket()> -> _SOURCE_
<com.android.contacts.model.Contact: long getDirectoryId()> -> _SOURCE_
<android.widget.AbsListView: int getCacheColorHint()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownWidth()> -> _SOURCE_
<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()> -> _SOURCE_
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownAnchor()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getRingingCall()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createBYERequest(boolean)> -> _SOURCE_
<com.android.mms.transaction.HttpUtils: byte[] httpConnection(android.content.Context,long,java.lang.String,byte[],int,boolean,java.lang.String,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserType()> -> _SOURCE_
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNormalizedNumber()> -> _SOURCE_
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()> -> _SOURCE_
<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> -> _SOURCE_
<com.android.internal.telephony.Call: long getEarliestConnectTime()> -> _SOURCE_
<org.apache.http.message.BufferedHeader: org.apache.http.HeaderElement[] getElements()> -> _SOURCE_
<java.io.EmulatedFields: boolean get(java.lang.String,boolean)> -> _SOURCE_
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableMap getStatuses()> -> _SOURCE_
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> -> _SOURCE_
<android.net.RouteInfo: java.net.InetAddress getGateway()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.Object clone()> -> _SOURCE_
<com.google.common.collect.BstNode: com.google.common.collect.BstNode getChild(com.google.common.collect.BstSide)> -> _SOURCE_
<com.android.inputmethod.latin.Suggest: java.util.concurrent.ConcurrentHashMap getUnigramDictionaries()> -> _SOURCE_
<com.android.contacts.util.ViewUtil: int getConstantPreLayoutWidth(android.view.View)> -> _SOURCE_
<com.android.settings.DataUsageSummary$CycleItem: java.lang.String toString()> -> _SOURCE_
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)> -> _SOURCE_
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getViewTypeCount()> -> _SOURCE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: android.view.Display getPresentationDisplay()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getButtonDescription()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()> -> _SOURCE_
<android.test.IsolatedContext: java.io.File getFilesDir()> -> _SOURCE_
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.View getStatusBarView()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getQueuedThreads()> -> _SOURCE_
<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)> -> _SOURCE_
<com.android.internal.telephony.ApnContext: java.util.ArrayList getWaitingApns()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: int getItemId()> -> _SOURCE_
<com.android.vcard.VCardEntryCommitter: java.util.ArrayList getCreatedUris()> -> _SOURCE_
<com.android.browser.view.PieItem: com.android.browser.view.PieMenu$PieView getPieView()> -> _SOURCE_
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])> -> _SOURCE_
<android.os.MemoryFile: java.io.OutputStream getOutputStream()> -> _SOURCE_
<com.android.exchange.adapter.ProvisionParser: com.android.emailcommon.provider.Policy getPolicy()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: boolean getWildCardFlag()> -> _SOURCE_
<android.net.sip.SimpleSessionDescription$Fields: int getBandwidth(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.dataitem.DataKind getDataKind()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getExternalCacheDir()> -> _SOURCE_
<android.app.Activity: android.os.IBinder getActivityToken()> -> _SOURCE_
<com.android.internal.widget.IRemoteViewsFactory$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.view.IInputContextCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardPasswordView: int getWrongPasswordStringId()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getEventByPosition(int,boolean)> -> _SOURCE_
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccCardConstants$State getState()> -> _SOURCE_
<com.google.common.collect.ForwardingMapEntry: java.lang.Object getValue()> -> _SOURCE_
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer get(int[],int,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SIMRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()> -> _SOURCE_
<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()> -> _SOURCE_
<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.text.Format: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)> -> _SOURCE_
<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()> -> _SOURCE_
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.providers.media.IMtpService$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.calendar.Utils: long getTardis()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneNumber()> -> _SOURCE_
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()> -> _SOURCE_
<com.android.contacts.group.GroupDetailFragment: android.net.Uri getGroupUri()> -> _SOURCE_
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)> -> _SOURCE_
<com.android.settings.ProxySelector: android.app.Dialog onCreateDialog(int)> -> _SOURCE_
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBitString: int getPadBits(int)> -> _SOURCE_
<libcore.icu.ICU: java.util.Locale[] getAvailableBreakIteratorLocales()> -> _SOURCE_
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> -> _SOURCE_
<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)> -> _SOURCE_
<android.view.ScaleGestureDetector: float getCurrentSpanY()> -> _SOURCE_
<java.nio.HeapByteBuffer: double getDouble(int)> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getCondensedHeader(java.lang.String)> -> _SOURCE_
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()> -> _SOURCE_
<com.android.providers.media.IMtpService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.ContactListFilter getFilter()> -> _SOURCE_
<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()> -> _SOURCE_
<android.content.ContentValues: java.lang.String toString()> -> _SOURCE_
<gov.nist.javax.sip.header.From: java.lang.String getDisplayName()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHashName()> -> _SOURCE_
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.server.NsdService: android.os.Messenger getMessenger()> -> _SOURCE_
<android.animation.KeyframeSet: java.lang.Object getValue(float)> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)> -> _SOURCE_
<android.util.LruCache: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalX(int)> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()> -> _SOURCE_
<android.widget.Editor$InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)> -> _SOURCE_
<android.content.ISyncStatusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getDisplayName()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: java.lang.String getString(byte[],int,int)> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)> -> _SOURCE_
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> -> _SOURCE_
<android.view.View$10: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.Require: java.lang.String encodeBody()> -> _SOURCE_
<com.android.inputmethod.latin.DictionaryFactory: com.android.inputmethod.latin.DictionaryCollection createMainDictionaryFromManager(android.content.Context,java.util.Locale)> -> _SOURCE_
<com.android.server.MountService$ObbAction: android.content.res.ObbInfo getObbInfo()> -> _SOURCE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: javax.sip.ListeningPoint createListeningPoint(int,java.lang.String)> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)> android.permission.VIBRATE -> _SOURCE_|FILE_INFORMATION
<gov.nist.javax.sip.header.Route: java.lang.String encodeBody()> -> _SOURCE_
<com.android.internal.os.IResultReceiver$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()> -> _SOURCE_
<org.apache.http.cookie.CookieOrigin: int getPort()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: int getSeekTo()> -> _SOURCE_
<org.apache.james.mime4j.RootInputStream: int getLineNumber()> -> _SOURCE_
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.lang.ref.FinalizerReference: java.lang.Object get()> -> _SOURCE_
<com.android.contacts.model.Contact: java.lang.String getDirectoryDisplayName()> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: java.util.Map getAttributes()> -> _SOURCE_
<android.media.IAudioFocusDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getName()> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.GeolocationPermissions getGeolocationPermissions()> -> _SOURCE_
<android.webkit.WebResourceResponse: java.lang.String getEncoding()> -> _SOURCE_
<com.google.common.collect.Lists$CharSequenceAsList: java.lang.Character get(int)> -> _SOURCE_
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)> -> _SOURCE_
<java.security.Signature: java.lang.String getAlgorithm()> -> _SOURCE_
<org.apache.http.message.BasicHeader: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> -> _SOURCE_
<android.webkit.WebSettingsClassic: java.lang.String getDefaultTextEncodingName()> -> _SOURCE_
<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigningAlgorithm()> -> _SOURCE_
<java.util.TreeMap: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCGI3GPP()> -> _SOURCE_
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)> -> _SOURCE_
<com.google.common.collect.BstMutationRule: com.google.common.collect.BstBalancePolicy getBalancePolicy()> -> _SOURCE_
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceTxThrottle(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String toString()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter$DirectoryFilter: int getLimit()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int)> -> _SOURCE_
<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()> -> _SOURCE_
<android.view.ViewConfiguration: int getPressedStateDuration()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()> -> _SOURCE_
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> -> _SOURCE_
<com.android.phone.PhoneGlobals: com.android.phone.Ringer getRinger()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()> -> _SOURCE_
<java.net.Authenticator: java.net.InetAddress getRequestingSite()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppType getType()> -> _SOURCE_
<com.android.music.IMediaPlaybackService$Stub$Proxy: java.lang.String getAlbumName()> -> _SOURCE_
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.widget.Toast: int getXOffset()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()> -> _SOURCE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)> -> _SOURCE_
<java.nio.FloatBuffer: java.lang.Object array()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: int getTop()> -> _SOURCE_
<java.util.ResourceBundle$MissingBundle: java.util.Enumeration getKeys()> -> _SOURCE_
<com.android.contacts.widget.PinnedHeaderListView: float getTopFadingEdgeStrength()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelOffset(int)> -> _SOURCE_
<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()> -> _SOURCE_
<android.text.format.Time: int getJulianDay(long,long)> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec: java.lang.String toString()> -> _SOURCE_
<libcore.io.HeapBufferIterator: byte readByte()> -> _SOURCE_
<android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()> -> _SOURCE_
<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: boolean isOtaSpNumber(java.lang.String)> -> _SOURCE_
<android.webkit.WebViewCore: android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingTop()> -> _SOURCE_
<com.android.providers.downloads.RealSystemFacade: android.net.NetworkInfo getActiveNetworkInfo(int)> -> _SOURCE_
<gov.nist.javax.sip.address.GenericURI: java.lang.String getScheme()> -> _SOURCE_
<android.net.rtp.RtpStream: int getMode()> -> _SOURCE_
<android.webkit.WebSettingsClassic: int getUserAgent()> -> _SOURCE_
<com.android.browser.TabControl: java.util.List getTabs()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.widget.ContextMenuAdapter getContextMenuAdapter()> -> _SOURCE_
<java.util.AbstractMap: int size()> -> _SOURCE_
<android.text.SpannableString: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<android.app.Fragment: android.content.res.Resources getResources()> -> _SOURCE_
<android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()> -> _SOURCE_
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()> -> _SOURCE_
<com.android.contacts.SpecialCharSequenceMgr$SimContactQueryCookie: android.widget.EditText getTextField()> -> _SOURCE_
<android.location.Country: long getTimestamp()> -> _SOURCE_
<com.android.internal.telephony.PhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getProtocol()> -> _SOURCE_
<gov.nist.javax.sip.header.Reason: java.lang.String getProtocol()> -> _SOURCE_
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)> -> _SOURCE_
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getResponse()> -> _SOURCE_
<android.media.IAudioRoutesObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.widget.ViewSwitcher: android.view.View getNextView()> -> _SOURCE_
<android.net.Proxy: java.lang.String getHost(android.content.Context)> -> _SOURCE_
<com.android.emailcommon.provider.Policy: int getDPManagerPasswordQuality()> -> _SOURCE_
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)> -> _SOURCE_
<com.android.mms.ui.MessageListItem$5: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()> -> _SOURCE_
<gov.nist.javax.sip.header.Accept: java.lang.String encodeBody()> -> _SOURCE_
<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1Encodable getParameters()> -> _SOURCE_
<android.app.ActivityThread: android.os.Handler getHandler()> -> _SOURCE_
<org.apache.harmony.xml.dom.NodeListImpl: int getLength()> -> _SOURCE_
<com.google.common.io.ByteStreams$3: java.lang.Object getResult()> -> _SOURCE_
<com.android.internal.policy.impl.PhoneWindowManager: int getMaxWallpaperLayer()> -> _SOURCE_
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()> -> _SOURCE_
<android.webkit.WebViewClassic$Factory: android.webkit.CookieManager getCookieManager()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQueryString()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<javax.crypto.Cipher: javax.crypto.ExemptionMechanism getExemptionMechanism()> -> _SOURCE_
<android.hardware.display.IDisplayManagerCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectAll()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getMaximumMessageSize()> -> _SOURCE_
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: boolean getIccRecordsLoaded()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()> -> _SOURCE_
<android.app.ActivityOptions: int getStartY()> -> _SOURCE_
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> -> _SOURCE_
<android.webkit.WebBackForwardListClassic: int getCurrentIndex()> -> _SOURCE_
<com.android.internal.telephony.IccRefreshResponse: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccounts(boolean)> -> _SOURCE_
<android.content.ContentProviderOperation: android.net.Uri getUri()> -> _SOURCE_
<com.google.common.collect.Lists$TransformingRandomAccessList: java.lang.Object get(int)> -> _SOURCE_
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.MailboxList getMailboxList()> -> _SOURCE_
<java.net.InetAddress: java.lang.String getHostName()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()> -> _SOURCE_
<android.graphics.Typeface: int getStyle()> -> _SOURCE_
<java.security.KeyPair: java.security.PublicKey getPublic()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: int getViaPort()> -> _SOURCE_
<com.android.calendar.DayFragment: long getSelectedTimeInMillis()> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebViewCore getWebViewCore()> -> _SOURCE_
<android.media.AudioService: int getLastAudibleMasterVolume()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getViaPort()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.text.BoringLayout: int getLineCount()> -> _SOURCE_
<android.os.Handler: android.os.IMessenger getIMessenger()> -> _SOURCE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()> -> _SOURCE_
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallLogMessageId()> -> _SOURCE_
<java.nio.MemoryBlock: long getSize()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)> -> _SOURCE_
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()> -> _SOURCE_
<android.app.Activity: int getChangingConfigurations()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: int getInt(android.content.res.TypedArray,int,int)> -> _SOURCE_
<libcore.net.http.RequestHeaders: java.lang.String getConnection()> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getPositionForSection(int)> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> -> _SOURCE_
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.Extensions getCrlExtensions()> -> _SOURCE_
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)> -> _SOURCE_
<com.android.contacts.vcard.NotificationImportExportListener: android.app.Notification constructCancelNotification(android.content.Context,java.lang.String)> -> _SOURCE_
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlEncoding()> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo getInfo(int)> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)> -> _SOURCE_
<android.content.pm.IPackageStatsObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILElement getBody()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> -> _SOURCE_
<com.android.emailcommon.TrafficFlags: int getSyncFlags(android.content.Context,com.android.emailcommon.provider.Account)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object)> -> _SOURCE_
<android.view.View: android.view.Display getDisplay()> -> _SOURCE_
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma createFromParcel(android.os.Parcel)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()> -> _SOURCE_
<java.security.Signature: java.lang.Object getParameter(java.lang.String)> -> _SOURCE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)> -> _SOURCE_
<android.hardware.SensorManager$SensorEventPool: android.hardware.SensorEvent getFromPool()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)> -> _SOURCE_
<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getComment()> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getLatitude()> -> _SOURCE_
<com.android.contacts.model.dataitem.DataKind: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: long getItemId(int)> -> _SOURCE_
<com.google.common.collect.ForwardingSet: java.lang.Object delegate()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.Object clone()> -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: android.graphics.drawable.Drawable getFullResDefaultActivityIcon()> -> _SOURCE_
<java.net.AddressCache: java.lang.Object get(java.lang.String)> -> _SOURCE_
<com.android.contacts.ContactsUtils: int getThumbnailSize(android.content.Context)> -> _SOURCE_
<android.webkit.ZoomManager: float getInvScale()> -> _SOURCE_
<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()> -> _SOURCE_
<android.media.RingtoneManager: boolean getIncludeDrm()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()> -> _SOURCE_
<java.util.IllegalFormatConversionException: java.lang.String getMessage()> -> _SOURCE_
<libcore.io.ForwardingOs: int getegid()> -> _SOURCE_
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.Object clone()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerPacketSourceAddress()> -> _SOURCE_
<com.android.inputmethod.compat.SuggestionSpanUtils: java.lang.CharSequence getTextWithAutoCorrectionIndicatorUnderline(android.content.Context,java.lang.CharSequence)> -> _SOURCE_
<android.content.Entity: java.lang.String toString()> -> _SOURCE_
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<java.net.ServerSocket: int getReceiveBufferSize()> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: android.net.Uri getContactUri()> -> _SOURCE_
<com.android.internal.widget.AbsActionBarView: int getContentHeight()> -> _SOURCE_
<java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)> -> _SOURCE_
<gov.nist.javax.sip.header.SIPETag: java.lang.String getETag()> -> _SOURCE_
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object[] toArray()> -> _SOURCE_
<android.widget.SuggestionsAdapter: int getQueryRefinement()> -> _SOURCE_
<java.net.PlainSocketImpl: java.io.InputStream getInputStream()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArraySet: java.lang.Object[] toArray()> -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.String getIndentation()> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.SuggestionStripView: com.android.inputmethod.latin.SuggestedWords getSuggestions()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: int getType()> -> _SOURCE_
<com.android.mms.model.ImageModel: int getWidth()> -> _SOURCE_
<com.android.settings.widget.ChartSweepView: int getFollowAxis()> -> _SOURCE_
<android.webkit.HTML5VideoView: int getCurrentState()> -> _SOURCE_
<com.android.mms.model.RegionModel: java.lang.String getRegionId()> -> _SOURCE_
<com.android.calendar.agenda.AgendaFragment: long getSupportedEventTypes()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AuthorizationHeader createAuthorizationHeader(java.lang.String)> -> _SOURCE_
<android.content.Intent: long getLongExtra(java.lang.String,long)> -> _SOURCE_
<android.telephony.SmsMessage: int getStatusOnSim()> -> _SOURCE_
<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()> -> _SOURCE_
<java.lang.Byte: float floatValue()> -> _SOURCE_
<com.google.android.mms.pdu.DeliveryInd: long getDate()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.vcard.VCardConfig: int getVCardTypeFromString(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.KeyDetector: int getKeyHysteresisDistanceSquared(boolean)> -> _SOURCE_
<android.preference.PreferenceManager: long getNextId()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhotoData: java.lang.String toString()> -> _SOURCE_
<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)> -> _SOURCE_
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer put(java.nio.LongBuffer)> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()> -> _SOURCE_
<android.webkit.CallbackProxy: android.webkit.WebChromeClient getWebChromeClient()> -> _SOURCE_
<com.android.emailcommon.service.IAccountService$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.exchange.adapter.Serializer: java.lang.String toString()> -> _SOURCE_
<org.ccil.cowan.tagsoup.ElementType: java.lang.String name()> -> _SOURCE_
<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()> -> _SOURCE_
<android.filterfw.core.KeyValueMap: java.lang.String toString()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getViewTypeCount()> -> _SOURCE_
<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getLabel()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object removeFirst()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()> -> _SOURCE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()> -> _SOURCE_
<android.os.Debug: int getGlobalFreedCount()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.Resources getResources()> -> _SOURCE_
<android.app.ActivityManagerProxy: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> -> _SOURCE_
<org.ccil.cowan.tagsoup.HTMLScanner: int getColumnNumber()> -> _SOURCE_
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultCipherSuites()> -> _SOURCE_
<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry nextEntry()> -> _SOURCE_
<java.net.URLConnection: int getReadTimeout()> -> _SOURCE_
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)> -> _SOURCE_
<android.view.View$10: java.lang.Float get(android.view.View)> -> _SOURCE_
<java.text.BreakIterator: boolean isBoundary(int)> -> _SOURCE_
<android.app.Fragment: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<com.google.common.collect.ImmutableMap: int hashCode()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getRawInput()> -> _SOURCE_
<com.android.internal.telephony.Call: boolean isRinging()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: boolean getIpForwardingEnabled()> -> _SOURCE_
<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String,long)> -> _SOURCE_
<java.util.Scanner: byte nextByte()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> -> _SOURCE_
<java.net.PlainDatagramSocketImpl: java.lang.Object getOption(int)> -> _SOURCE_
<java.lang.Enum: java.lang.Object clone()> -> _SOURCE_
<android.app.Fragment: android.app.Fragment getTargetFragment()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: com.android.settings.bluetooth.CachedBluetoothDevice addDevice(com.android.settings.bluetooth.LocalBluetoothAdapter,com.android.settings.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServicePackageName()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: byte[] getMessageClass()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfNationalDestinationCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment: android.content.Context getContext()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(java.lang.String,java.util.Map)> -> _SOURCE_
<com.android.mms.ui.QuickContactDivot: float getFarOffset()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsInt(java.lang.String)> -> _SOURCE_
<javax.crypto.MacSpi: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$10: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$NullEntry: java.lang.Object getKey()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> -> _SOURCE_
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)> -> _SOURCE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getX()> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.UserTokenHandler createUserTokenHandler()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()> -> _SOURCE_
<com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentDirectory(android.content.Context,long)> -> _SOURCE_
<java.lang.Long: short shortValue()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: org.w3c.dom.smil.TimeList getEnd()> -> _SOURCE_
<com.android.browser.BreadCrumbView: int getTopLevel()> -> _SOURCE_
<android.view.View: android.view.ViewParent getParentForAccessibility()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.x509.GeneralName$1: java.lang.Object getObjectToEncode(java.lang.Object)> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: java.util.Set getBondedDevices()> -> _SOURCE_
<java.security.spec.ECParameterSpec: int getCofactor()> -> _SOURCE_
<com.android.mms.data.RecipientIdCache: java.util.List getAddresses(java.lang.String)> -> _SOURCE_
<android.widget.CalendarView$WeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()> -> _SOURCE_
<java.util.zip.ZipEntry: java.lang.String getComment()> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int readUint16()> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactBrowseListFragment: android.net.Uri getSelectedContactUri()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: byte[] wrap()> -> _SOURCE_
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getSectionForPosition(int)> -> _SOURCE_
<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<com.android.mms.data.Contact: long getContactMethodId()> -> _SOURCE_
<com.android.vcard.VCardEntry$NameData: java.lang.String getSuffix()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String getSearchUriForQuery(java.lang.String)> -> _SOURCE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.InsetDrawable: boolean isStateful()> -> _SOURCE_
<gov.nist.javax.sip.header.Unsupported: java.lang.String getOptionTag()> -> _SOURCE_
<gov.nist.javax.sip.stack.IOHandler: java.net.Socket getSocket(java.lang.String)> -> _SOURCE_
<com.android.server.LocationManagerService: java.util.List getAllProviders()> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$ToggleAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)> -> _SOURCE_
<java.net.URL: java.lang.String toExternalForm()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDropBox()> -> _SOURCE_
<android.view.ViewConfiguration: int getTouchSlop()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> -> _SOURCE_
<android.widget.Spinner: int getDropDownWidth()> -> _SOURCE_
<com.android.browser.IntentHandler: com.android.browser.IntentHandler$UrlData getUrlDataFromIntent(android.content.Intent)> -> _SOURCE_
<android.view.View: int getLeft()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Via getTopmostVia()> -> _SOURCE_
<android.os.UserManager: int getMaxSupportedUsers()> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getCreatorPackage()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentType()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment: int getFirstListItemOffset()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()> -> _SOURCE_
<android.drm.DrmRights: java.lang.String getMimeType()> -> _SOURCE_
<android.text.BoringLayout: int getTopPadding()> -> _SOURCE_
<com.android.exchange.ExchangeService: com.android.emailcommon.provider.Account getAccountByName(java.lang.String)> -> _SOURCE_
<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Element: java.lang.String localName()> -> _SOURCE_
<com.android.vcard.VCardEntry$PhotoData: byte[] getBytes()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)> -> _SOURCE_
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getNodeName()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()> -> _SOURCE_
<java.nio.NioUtils: java.io.FileDescriptor getFD(java.nio.channels.FileChannel)> -> _SOURCE_
<android.app.Instrumentation: android.content.Context getTargetContext()> -> _SOURCE_
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()> android.permission.CHANGE_WIFI_STATE -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$MyAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<android.content.pm.VerificationParams: int getInstallerUid()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> -> _SOURCE_
<android.mtp.MtpStorage: int getStorageId(int)> -> _SOURCE_
<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()> -> _SOURCE_
<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)> -> _SOURCE_
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()> -> _SOURCE_
<com.google.common.collect.TransformedImmutableList: java.lang.Object[] toArray()> -> _SOURCE_
<android.text.SpannedString: int getSpanStart(java.lang.Object)> -> _SOURCE_
<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()> -> _SOURCE_
<gov.nist.javax.sip.header.To: java.lang.String getTag()> -> _SOURCE_
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()> -> _SOURCE_
<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsMessage: int getStatus()> -> _SOURCE_
<android.filterfw.geometry.Point: float length()> -> _SOURCE_
<android.hardware.Sensor: float getMaximumRange()> -> _SOURCE_
<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.BERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumHeight()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int)> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: long getByteCount(java.lang.String,int,int,int)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getHardwareAccelSkiaEnabled()> -> _SOURCE_
<gov.nist.javax.sip.ResponseEventExt: gov.nist.javax.sip.ClientTransactionExt getOriginalTransaction()> -> _SOURCE_
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: java.lang.String toString()> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.String encode()> -> _SOURCE_
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getScheme()> -> _SOURCE_
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()> -> _SOURCE_
<com.android.browser.SnapshotTab: long getSnapshotId()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()> -> _SOURCE_
<android.text.SpanSet: int getNextTransition(int,int)> -> _SOURCE_
<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)> android.permission.RECEIVE_SMS -> _SOURCE_
<org.apache.harmony.security.x509.ExtendedKeyUsage: byte[] getEncoded()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getResourcePath()> -> _SOURCE_
<android.os.Bundle: byte[] getByteArray(java.lang.String)> -> _SOURCE_
<com.android.calendar.ExpandableTextView: java.lang.CharSequence getText()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskTopThumbnail(int)> -> _SOURCE_
<java.util.concurrent.TimeUnit: long toMinutes(long)> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: int getViewTypeCount()> -> _SOURCE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.Socket getSocket()> -> _SOURCE_
<com.google.common.collect.AbstractMultimap: java.util.Map backingMap()> -> _SOURCE_
<android.view.Window: android.view.Window getContainer()> -> _SOURCE_
<android.net.http.SslError: java.lang.String getUrl()> -> _SOURCE_
<android.util.LongSparseArray: android.util.LongSparseArray clone()> -> _SOURCE_
<com.google.common.collect.RegularImmutableList$1: java.lang.Object get(int)> -> _SOURCE_
<com.google.common.collect.ImmutableMap: java.lang.String toString()> -> _SOURCE_
<com.google.android.mms.pdu.PduComposer: byte[] make()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<com.android.browser.BrowserSettings: int getRawDoubleTapZoom(int)> -> _SOURCE_
<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()> -> _SOURCE_
<java.io.ObjectStreamField: java.lang.Class getTypeInternal()> -> _SOURCE_
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> -> _SOURCE_
<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)> -> _SOURCE_
<org.apache.http.message.BasicHeaderElement: int getParameterCount()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: boolean getUseStrictPhoneNumberComparisonForTest()> -> _SOURCE_
<android.net.NetworkIdentity: java.lang.String toString()> -> _SOURCE_
<com.android.internal.telephony.ApnContext: java.lang.String getReason()> -> _SOURCE_
<com.android.internal.telephony.CallForwardInfo: java.lang.String toString()> -> _SOURCE_
<android.net.NetworkStatsHistory: long getEnd()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int)> -> _SOURCE_
<android.app.AlertDialog: android.widget.ListView getListView()> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: android.widget.TextView getSnippetView()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> -> _SOURCE_
<com.android.vcard.VCardComposer: java.lang.String createOneEntry(java.lang.reflect.Method)> -> _SOURCE_
<java.util.ResourceBundle: java.util.Set handleKeySet()> -> _SOURCE_
<org.apache.harmony.security.x509.InvalidityDate: java.util.Date getDate()> -> _SOURCE_
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)> android.permission.WRITE_SOCIAL_STREAM -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.Object clone()> -> _SOURCE_
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()> -> _SOURCE_
<gov.nist.javax.sip.header.InReplyTo: java.lang.String getCallId()> -> _SOURCE_
<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()> -> _SOURCE_
<android.text.method.DigitsKeyListener: int getInputType()> -> _SOURCE_
<com.android.providers.contacts.ContactsTransaction: android.database.sqlite.SQLiteDatabase getDbForTag(java.lang.String)> -> _SOURCE_
<android.net.NetworkStats: android.net.NetworkStats groupedByUid()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName,int)> -> _SOURCE_
<com.google.common.collect.BstOperations: com.google.common.collect.BstNode insertMin(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)> -> _SOURCE_
<com.android.internal.content.PackageMonitor: java.lang.String getPackageName(android.content.Intent)> -> _SOURCE_
<com.android.camera.Thumbnail: android.graphics.Bitmap createVideoThumbnail(java.io.FileDescriptor,int)> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.base.Ticker getTicker()> -> _SOURCE_
<gov.nist.core.NameValueList: java.lang.String encode()> -> _SOURCE_
<android.view.animation.Animation: long getStartOffset()> -> _SOURCE_
<com.android.internal.telephony.IntRangeManager: boolean isEmpty()> -> _SOURCE_
<java.security.KeyFactory: java.lang.String getAlgorithm()> -> _SOURCE_
<libcore.net.http.RequestHeaders: libcore.net.http.RawHeaders getHeaders()> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getCompleteVoiceMailNumber()> -> _SOURCE_
<android.content.ClipData: int getItemCount()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiStateMachineMessenger()> -> _SOURCE_
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)> -> _SOURCE_
<android.app.Dialog: android.os.Bundle onSaveInstanceState()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object peekFirst()> -> _SOURCE_
<org.kxml2.io.KXmlParser: int getDepth()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: long getTotalmillisecond()> -> _SOURCE_
<org.apache.harmony.security.asn1.BitString: boolean[] toBooleanArray()> -> _SOURCE_
<android.view.View: int getNextFocusForwardId()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)> -> _SOURCE_
<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()> -> _SOURCE_
<com.android.contacts.calllog.ExtendedCursor: java.lang.String[] getColumnNames()> -> _SOURCE_
<com.android.mms.dom.smil.SmilRegionElementImpl: int getZIndex()> -> _SOURCE_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)> -> _SOURCE_
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.nio.DirectByteBuffer: double getDouble()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)> -> _SOURCE_
<android.webkit.WebViewClassic: android.webkit.WebChromeClient getWebChromeClient()> -> _SOURCE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.Object getGroup()> -> _SOURCE_
<com.android.contacts.model.Contact: long getId()> -> _SOURCE_
<com.android.music.MusicUtils: long[] getSongListForAlbum(android.content.Context,long)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> -> _SOURCE_
<android.util.SparseIntArray: int get(int)> -> _SOURCE_
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> -> _SOURCE_
<com.android.browser.PreloadController: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<com.android.mms.transaction.HttpUtils: java.lang.String getCurrentAcceptLanguage(java.util.Locale)> -> _SOURCE_
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()> -> _SOURCE_
<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getPackagesForUid(int)> -> _SOURCE_
<java.net.ServerSocket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<com.android.mms.data.Conversation: long getOrCreateThreadId(android.content.Context,java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RSeqHeader createRSeqHeader(long)> -> _SOURCE_
<java.text.StringCharacterIterator: java.lang.Object clone()> -> _SOURCE_
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.widget.RemoteViews getAppWidgetViews(int)> -> _SOURCE_
<java.io.WriteAbortedException: java.lang.String getMessage()> -> _SOURCE_
<java.nio.IntArrayBuffer: int get(int)> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypes()> -> _SOURCE_
<android.text.style.URLSpan: int getSpanTypeId()> -> _SOURCE_
<android.view.IApplicationToken$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getNeedClientAuth()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminUncheckedLocked(android.content.ComponentName,int)> -> _SOURCE_
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimDomain()> -> _SOURCE_
<com.android.exchange.EasSyncService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String,int)> -> _SOURCE_
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> -> _SOURCE_
<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()> -> _SOURCE_
<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngine getDefaultSearchEngine(android.content.Context)> -> _SOURCE_
<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getViaHost()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)> -> _SOURCE_
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getName()> -> _SOURCE_
<android.webkit.CacheManager$CacheResult: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.util.Vector: java.lang.String toString()> -> _SOURCE_
<java.net.MulticastSocket: boolean getLoopbackMode()> -> _SOURCE_
<com.android.mms.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.text.Editable getEditableText()> -> _SOURCE_
<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)> -> _SOURCE_
<android.media.IMediaScannerListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.preference.DialogPreference: android.app.Dialog getDialog()> -> _SOURCE_
<com.android.settings.bluetooth.CachedBluetoothDevice: java.util.List getRemovedProfiles()> -> _SOURCE_
<android.widget.Switch: int getSwitchPadding()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)> -> _SOURCE_
<com.android.internal.util.ProcFileReader: java.lang.String nextString()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()> -> _SOURCE_
<com.android.contacts.vcard.NotificationImportExportListener: android.app.Notification constructImportFailureNotification(android.content.Context,java.lang.String)> -> _SOURCE_
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(int)> -> _SOURCE_
<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()> -> _SOURCE_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: int getNonceCount()> -> _SOURCE_
<com.android.server.am.TaskRecord: long getInactiveDuration()> -> _SOURCE_
<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()> -> _SOURCE_
<com.google.common.io.CharStreams$4: java.io.Reader getInput()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: boolean getMute()> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getCommentURL()> -> _SOURCE_
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getLevel()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()> -> _SOURCE_
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<android.location.Geofence: int getType()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getOName()> -> _SOURCE_
<javax.crypto.KeyAgreement: java.security.Provider getProvider()> -> _SOURCE_
<com.android.internal.telephony.gsm.SimTlv: byte[] getData()> -> _SOURCE_
<com.android.browser.WebStorageSizeManager$StatFsDiskInfo: long getTotalSizeBytes()> -> _SOURCE_
<gov.nist.javax.sip.message.HeaderIterator: java.lang.Object next()> -> _SOURCE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getQ()> -> _SOURCE_
<com.android.emailcommon.provider.Account: android.net.Uri getShortcutSafeUri()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getHeaderItemsCount(int)> -> _SOURCE_
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)> -> _SOURCE_
<com.android.server.MountService: java.lang.String getVolumeState(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> -> _SOURCE_
<com.android.server.display.DisplayManagerService: android.view.DisplayInfo getDisplayInfo(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoLinger()> -> _SOURCE_
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> _SOURCE_
<com.android.contacts.dialog.ClearFrequentsDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<android.widget.CursorAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<com.android.emailcommon.mail.Multipart: java.lang.String getContentType()> -> _SOURCE_
<com.android.inputmethod.latin.SuggestedWords: java.util.ArrayList getFromApplicationSpecifiedCompletions(android.view.inputmethod.CompletionInfo[])> -> _SOURCE_
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()> -> _SOURCE_
<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccCard getIccCard()> -> _SOURCE_
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()> -> _SOURCE_
<java.math.BigInt: int getNativeBIGNUM()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getPluginsPath()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.lang.String getAuthType()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context createDisplayContext(android.view.Display)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()> -> _SOURCE_
<android.content.pm.IPackageDataObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<com.android.contacts.model.Contact: boolean getStarred()> -> _SOURCE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNamespaceURI()> -> _SOURCE_
<android.app.Instrumentation$ActivityMonitor: android.content.IntentFilter getFilter()> -> _SOURCE_
<android.app.Instrumentation$ActivityMonitor: int getHits()> -> _SOURCE_
<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getUserName()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getBackgroundCall()> -> _SOURCE_
<android.app.FragmentManagerImpl: int getBackStackEntryCount()> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()> -> _SOURCE_
<java.util.StringTokenizer: java.lang.String nextToken()> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$600(com.android.ex.chips.BaseRecipientAdapter,android.database.Cursor)> -> _SOURCE_
<java.net.URLConnection: boolean getDoOutput()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: int getUidForPackageName(android.content.pm.PackageManager,java.lang.String)> -> _SOURCE_
<android.sax.Element: android.sax.Element getChild(java.lang.String)> -> _SOURCE_
<android.view.PointerIcon: float getHotSpotX()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceId()> -> _SOURCE_
<java.util.ArrayDeque: java.util.Iterator descendingIterator()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: java.lang.CharSequence getLabel()> -> _SOURCE_
<com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)> -> _SOURCE_
<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: org.w3c.dom.events.EventTarget getTarget()> -> _SOURCE_
<android.content.Loader: java.lang.String dataToString(java.lang.Object)> -> _SOURCE_
<android.net.wifi.WifiStateTracker: boolean isAvailable()> -> _SOURCE_
<android.os.IPowerManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.security.Security: java.security.Provider[] getProviders(java.util.Map)> -> _SOURCE_
<android.view.ScaleGestureDetector: long getEventTime()> -> _SOURCE_
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter()> -> _SOURCE_
<org.apache.http.HttpHost: java.lang.String toHostString()> -> _SOURCE_
<gov.nist.core.DuplicateNameValueList: java.util.Iterator getNames()> -> _SOURCE_
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)> -> _SOURCE_
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] toArray()> -> _SOURCE_
<android.inputmethodservice.Keyboard: int getKeyWidth()> -> _SOURCE_
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()> -> _SOURCE_
<android.net.DhcpInfo: java.lang.String toString()> -> _SOURCE_
<android.text.method.WordIterator: int getBeginning(int)> -> _SOURCE_
<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)> -> _SOURCE_
<com.android.contacts.list.ContactListItemView: int getDefaultPhotoViewSize()> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine: java.lang.String toString()> -> _SOURCE_
<com.android.browser.homepages.RequestHandler$4: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getSecond()> -> _SOURCE_
<com.google.android.mms.util.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.webkit.WebViewClassic: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> -> _SOURCE_
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator getDelegateIterator()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> -> _SOURCE_
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getEmailAddress()> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()> -> _SOURCE_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.AbstractList: java.util.List subList(int,int)> -> _SOURCE_
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()> -> _SOURCE_
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getLanguage()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.Context)> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getAuthenticationHelper(gov.nist.javax.sip.clientauthutils.AccountManager,javax.sip.header.HeaderFactory)> -> _SOURCE_
<com.android.mms.MmsConfig: int getMaxSubjectLength()> -> _SOURCE_
<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()> -> _SOURCE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)> -> _SOURCE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String encode()> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: java.lang.String toString()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getCName()> -> _SOURCE_
<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getKeepAlive()> -> _SOURCE_
<com.android.settings.vpn2.VpnSettings$LockdownConfigFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedVerticalScrollLength()> -> _SOURCE_
<android.database.MergeCursor: boolean isNull(int)> -> _SOURCE_
<com.android.internal.telephony.IIccPhoneBook$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.media.ExifInterface: double getAltitude(double)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)> -> _SOURCE_
<android.animation.PropertyValuesHolder: java.lang.String toString()> -> _SOURCE_
<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()> -> _SOURCE_
<com.android.mms.util.Recycler$MmsRecycler: android.database.Cursor getAllThreads(android.content.Context)> android.permission.READ_SMS -> _SOURCE_|NO_CATEGORY
<com.android.emailcommon.provider.Policy: java.lang.String toString()> -> _SOURCE_
<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()> -> _SOURCE_
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)> -> _SOURCE_
<android.net.http.Request: java.lang.String getUri()> -> _SOURCE_
<android.app.LocalActivityManager: java.lang.String getCurrentId()> -> _SOURCE_
<android.app.Fragment: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()> -> _SOURCE_
<com.android.mms.dom.AttrImpl: java.lang.String getNodeName()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)> -> _SOURCE_
<android.media.AudioService$VolumeStreamState: int getIndex(int,boolean)> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()> -> _SOURCE_
<android.media.MediaRouter: int getCategoryCount()> -> _SOURCE_
<com.android.browser.PreloadController: android.content.Context getContext()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getPkeyAlias()> -> _SOURCE_
<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> -> _SOURCE_
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: android.database.Cursor access$102(com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment,android.database.Cursor)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getToIndex()> -> _SOURCE_
<com.android.contacts.widget.IndexerListAdapter: int getIndexedPartition()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()> -> _SOURCE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPostDial()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteOrder order()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: java.lang.String getNonEmptyLine()> -> _SOURCE_
<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: int getHeaderPositionFromItemPosition(int)> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getCount()> -> _SOURCE_
<android.webkit.ZoomManager: int getDocumentAnchorY()> -> _SOURCE_
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$3: float getInterpolation(float)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getMsisdn()> -> _SOURCE_
<android.widget.Switch: java.lang.CharSequence getTextOff()> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()> -> _SOURCE_
<com.android.mms.ui.NumberPickerDialog: android.os.Bundle onSaveInstanceState()> -> _SOURCE_
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])> -> _SOURCE_
<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: int getIndex(java.lang.String,java.lang.String)> -> _SOURCE_
<com.google.common.collect.Maps$EntrySet: boolean isEmpty()> -> _SOURCE_
<android.media.AudioService$AudioFocusDeathHandler: android.os.IBinder getBinder()> -> _SOURCE_
<java.security.Security: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<android.os.IUserManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getChildrenCount(int)> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()> -> _SOURCE_
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[],int,int)> -> _SOURCE_
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()> -> _SOURCE_
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDisplayContentLocked(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()> -> _SOURCE_
<android.view.View: android.graphics.Matrix getInverseMatrix()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: long getHeaderFieldDate(java.lang.String,long)> -> _SOURCE_
<com.android.contacts.list.ContactTileView: android.widget.QuickContactBadge getQuickContact()> -> _SOURCE_
<java.io.Console: java.lang.String readLine()> -> _SOURCE_
<java.nio.CharArrayBuffer: char get(int)> -> _SOURCE_
<com.android.mms.TempFileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<com.android.server.wm.WindowManagerService: float getWindowCompatibilityScale(android.os.IBinder)> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.Type[] getBounds()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.google.android.mms.pdu.ReadRecInd: byte[] getMessageId()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getServerTransactionTableSize()> -> _SOURCE_
<com.android.contacts.list.ContactEntryListFragment: android.widget.ListView getListView()> -> _SOURCE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String encodeBody()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName,int)> -> _SOURCE_
<org.xml.sax.SAXException: java.lang.String getMessage()> -> _SOURCE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> -> _SOURCE_
<android.widget.TextView: android.text.style.URLSpan[] getUrls()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.String getSignatureAttribute()> -> _SOURCE_
<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()> -> _SOURCE_
<android.net.http.RequestQueue$ActivePool: org.apache.http.HttpHost getProxyHost()> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmBitErrorRate()> -> _SOURCE_
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: boolean getCancelable()> -> _SOURCE_
<gov.nist.javax.sip.header.Server: java.util.ListIterator getProduct()> -> _SOURCE_
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.os.UserHandle: int getUserId(int)> -> _SOURCE_
<android.media.IRemoteControlClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.io.FileDescriptor: java.lang.String toString()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: java.util.Iterator iterator()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: int getNameResId()> -> _SOURCE_
<com.android.camera.Util: int getCameraOrientation(int)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()> -> _SOURCE_
<libcore.io.ForwardingOs: long sysconf(int)> -> _SOURCE_
<java.io.ObjectInputStream: byte readByte()> -> _SOURCE_
<com.google.android.mms.pdu.NotifyRespInd: int getReportAllowed()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledScrollBarSize()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: int getNonceCount()> -> _SOURCE_
<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: int getCount()> -> _SOURCE_
<com.android.camera.ComboPreferences: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: gov.nist.javax.sip.message.Content getContentByType(java.lang.String,java.lang.String)> -> _SOURCE_
<java.util.Random: long nextLong()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()> -> _SOURCE_
<android.util.AtomicFile: java.io.File getBaseFile()> -> _SOURCE_
<java.net.DatagramSocketImpl: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.widget.Spinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getSubjectDN()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getId()> -> _SOURCE_
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> -> _SOURCE_
<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnAlphaTag()> -> _SOURCE_
<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()> -> _SOURCE_
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()> -> _SOURCE_
<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction findPendingTransaction(gov.nist.javax.sip.message.SIPRequest)> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getZone()> -> _SOURCE_
<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: android.database.sqlite.SQLiteDatabase getDatabase(boolean)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment: android.net.Uri getUri()> -> _SOURCE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()> -> _SOURCE_
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: void getNeighboringCids(android.os.Message)> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.x509.TBSCertificate getTbsCertificate()> -> _SOURCE_
<com.android.internal.statusbar.StatusBarNotification: java.lang.String toString()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)> -> _SOURCE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> -> _SOURCE_
<com.android.contacts.editor.LabeledEditorView: android.widget.Spinner getLabel()> -> _SOURCE_
<com.android.vcard.VCardProperty: java.util.List getValueList()> android.permission.STOP_APP_SWITCHES -> _SOURCE_|CONTACT_INFORMATION
<android.filterfw.geometry.Point: android.filterfw.geometry.Point normalize()> -> _SOURCE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$DayStats[] getDayStatistics()> -> _SOURCE_
<java.security.KeyStore$TrustedCertificateEntry: java.security.cert.Certificate getTrustedCertificate()> -> _SOURCE_
<android.widget.Toast: float getHorizontalMargin()> -> _SOURCE_
<com.android.contacts.preference.ContactsPreferences: int getDefaultDisplayOrder()> -> _SOURCE_
<android.net.LinkCapabilities: boolean isEmpty()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()> -> _SOURCE_
<com.android.internal.telephony.UUSInfo: byte[] getUserData()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getMdnNumber()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)> -> _SOURCE_
<java.text.AttributedString$AttributedIterator: int getRunStart()> -> _SOURCE_
<com.android.mms.data.RecipientIdCache: java.lang.String getSingleAddressFromCanonicalAddressInDb(android.content.Context,java.lang.String)> -> _SOURCE_
<java.util.TimeZone: java.lang.String getDisplayName()> -> _SOURCE_
<com.google.common.collect.ImmutableList$ReverseImmutableList: java.lang.Object get(int)> -> _SOURCE_
<com.android.internal.app.ActionBarImpl: android.view.View getCustomView()> -> _SOURCE_
<com.android.calendar.EventInfoFragment: int getResponseFromButtonId(int)> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalSharedDirty()> -> _SOURCE_
<android.net.http.Headers: java.lang.String getContentDisposition()> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRec: java.lang.String getInfo()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()> -> _SOURCE_
<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignature()> -> _SOURCE_
<com.google.android.mms.pdu.PduComposer$PositionMarker: int getLength()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getMonth()> -> _SOURCE_
<java.lang.Character: java.lang.String getName(int)> -> _SOURCE_
<com.android.settings.widget.ChartDataUsageView: long getWarningBytes()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()> -> _SOURCE_
<com.android.internal.telephony.UiccCardApplication: java.lang.String getAid()> -> _SOURCE_
<com.android.internal.content.PackageHelper: java.lang.String getSdDir(java.lang.String)> -> _SOURCE_
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()> -> _SOURCE_
<android.os.storage.StorageVolume: int getDescriptionId()> -> _SOURCE_
<com.android.browser.homepages.Template$CursorListEntityWrapper: android.database.Cursor getCursor()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: int getItemViewType(int)> -> _SOURCE_
<com.android.server.net.NetworkStatsCollection: long getEndMillis()> -> _SOURCE_
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)> -> _SOURCE_
<android.net.wifi.WifiInfo: int getIpAddress()> -> _SOURCE_
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()> -> _SOURCE_
<com.android.emailcommon.utility.Utility: android.os.Handler getMainThreadHandler()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> -> _SOURCE_
<libcore.net.http.HttpEngine$1: java.io.InputStream getBody()> -> _SOURCE_
<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchAlwaysPreferenceString(android.content.Context)> -> _SOURCE_
<java.util.Date: int getYear()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils: java.util.Iterator getNameLookupKeys(java.lang.String,int)> -> _SOURCE_
<java.util.EnumSet: java.util.EnumSet range(java.lang.Enum,java.lang.Enum)> -> _SOURCE_
<com.android.emailcommon.provider.EmailContent$Attachment: android.content.ContentValues toContentValues()> -> _SOURCE_
<com.android.internal.view.IInputMethod$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: java.lang.String getChallenge()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndColumn()> -> _SOURCE_
<android.app.Instrumentation: android.os.Bundle getAllocCounts()> -> _SOURCE_
<android.content.IntentSender: int getCreatorUid()> -> _SOURCE_
<com.android.browser.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Menu getMenu()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getCnapName()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: java.lang.String getXmlVersion()> -> _SOURCE_
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()> -> _SOURCE_
<com.android.mms.dom.smil.SmilParElementImpl: float getRepeatDur()> -> _SOURCE_
<android.app.IUiModeManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<java.util.AbstractSet: int hashCode()> -> _SOURCE_
<com.android.phone.PhoneGlobals: com.android.phone.PhoneGlobals getInstance()> -> _SOURCE_
<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.State getOriginalState()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getPhoneName()> -> _SOURCE_
<android.provider.MediaStore$Images$Thumbnails: android.net.Uri getContentUri(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: char getMatch(char[],int)> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()> -> _SOURCE_
<com.android.calendar.agenda.AgendaListView: long getSelectedInstanceId()> -> _SOURCE_
<javax.crypto.spec.IvParameterSpec: byte[] getIV()> -> _SOURCE_
<com.android.browser.view.PieItem: float getAlpha()> -> _SOURCE_
<libcore.io.IoBridge: java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor)> -> _SOURCE_
<java.net.URLConnection: long getIfModifiedSince()> -> _SOURCE_
<com.android.internal.location.ProviderRequest: java.lang.String toString()> -> _SOURCE_
<android.webkit.WebBackForwardListClassic: boolean getClearPending()> -> _SOURCE_
<com.android.emailcommon.provider.Account: long getAccountIdFromShortcutSafeUri(android.content.Context,android.net.Uri)> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()> -> _SOURCE_
<com.android.internal.telephony.PhoneStateIntentReceiver: int getSignalStrengthDbm()> -> _SOURCE_
<libcore.net.http.HttpEngine: java.net.CacheResponse getCacheResponse()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)> -> _SOURCE_
<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()> -> _SOURCE_
<android.os.storage.StorageManager$ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()> -> _SOURCE_
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.widget.RemoteViews getLoadingView()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<dalvik.system.VMRuntime: long getMinimumHeapSize()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUniversalString: com.android.org.bouncycastle.asn1.DERUniversalString getInstance(java.lang.Object)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: int getCount()> -> _SOURCE_
<android.app.Service: java.lang.String getClassName()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getViewportOffsetX()> -> _SOURCE_
<android.graphics.SurfaceTexture: long getTimestamp()> -> _SOURCE_
<com.android.inputmethod.latin.ResourceUtils: java.lang.String getDeviceOverrideValue(android.content.res.Resources,int,java.lang.String)> -> _SOURCE_
<com.google.android.mms.pdu.PduPart: int getCharset()> -> _SOURCE_
<android.net.sip.SipAudioCall: int getState()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$3000(com.android.server.pm.PackageManagerService,android.net.Uri,int,java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] getEncoded()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: boolean getDataOnRoamingEnabled()> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()> -> _SOURCE_
<android.widget.TextView: int getMaxHeight()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<android.view.InputDevice$MotionRange: int getAxis()> -> _SOURCE_
<android.text.DynamicLayout: int getEllipsisStart(int)> -> _SOURCE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request,javax.sip.header.ContentTypeHeader,java.lang.Object)> -> _SOURCE_
<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)> -> _SOURCE_
<android.content.res.Resources: float getDimension(int)> -> _SOURCE_
<java.io.ObjectStreamField: java.lang.Class getType()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getHour()> -> _SOURCE_
<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody toPduBody()> -> _SOURCE_
<java.net.PlainDatagramSocketImpl: byte getTTL()> -> _SOURCE_
<android.webkit.WebViewCore: float getFixedDisplayDensity(android.content.Context)> -> _SOURCE_
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap inverse()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCode()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()> -> _SOURCE_
<com.google.common.collect.Range: com.google.common.collect.Range span(com.google.common.collect.Range)> -> _SOURCE_
<com.android.server.ProcessMap: java.util.HashMap getMap()> -> _SOURCE_
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> -> _SOURCE_
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)> android.permission.ACCESS_WIFI_STATE -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.lang.Object[] toArray()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: javax.net.ssl.SSLSession getSession()> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: int getItemViewType(int)> -> _SOURCE_
<android.location.Location: android.os.Bundle getExtras()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getX()> -> _SOURCE_
<android.view.IWindowManager$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()> -> _SOURCE_
<android.view.animation.AnimationSet: long getDuration()> -> _SOURCE_
<android.content.res.XmlBlock$Parser: java.lang.String getNamespacePrefix(int)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter()> -> _SOURCE_
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)> -> _SOURCE_
<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILElement getHead()> -> _SOURCE_
<javax.sip.DialogState: int getValue()> -> _SOURCE_
<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtRawPosition(float,float)> -> _SOURCE_
<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getEventByPosition(int)> -> _SOURCE_
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: boolean isApnTypeEnabled(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getMaxScrollY(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.gsm.GsmConnection: long getCreateTime()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2: int getUrlCount(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SOURCE_|BROWSER_INFORMATION
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()> -> _SOURCE_
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PPreferredIdentity: java.lang.String encodeBody()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase$1: android.database.sqlite.SQLiteSession initialValue()> -> _SOURCE_
<android.media.IRemoteControlDisplay$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getZeroDigit()> -> _SOURCE_
<android.widget.CalendarView: int getFirstDayOfWeek()> -> _SOURCE_
<java.util.EnumSet: java.lang.Object clone()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory getSSLSocketFactory(boolean)> -> _SOURCE_
<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeId()> -> _SOURCE_
<com.android.emailcommon.provider.Account: int getFlags()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()> -> _SOURCE_
<android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)> -> _SOURCE_
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()> -> _SOURCE_
<java.util.Scanner: float nextFloat()> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal getIssuer()> -> _SOURCE_
<gov.nist.javax.sip.parser.AddressParser: gov.nist.javax.sip.address.AddressImpl nameAddr()> -> _SOURCE_
<java.net.DatagramPacket: int getOffset()> -> _SOURCE_
<android.widget.ScrollBarDrawable: int getSize(boolean)> -> _SOURCE_
<com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)> -> _SOURCE_
<org.apache.harmony.security.x509.Certificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.app.IWallpaperManager$Stub$Proxy: int getHeightHint()> -> _SOURCE_
<android.os.Bundle: byte getByte(java.lang.String)> -> _SOURCE_
<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: float getFloat(int)> -> _SOURCE_
<android.os.PatternMatcher: java.lang.String getPath()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()> -> _SOURCE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> -> _SOURCE_
<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()> -> _SOURCE_
<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.util.Iterator getNameLookupKeys(java.lang.String)> -> _SOURCE_
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: java.lang.String getTempGruuParam()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()> -> _SOURCE_
<junit.framework.ComparisonFailure: java.lang.String getActual()> -> _SOURCE_
<com.android.exchange.utility.CalendarUtilities: long getMillisAtTimeZoneDateTransition(java.util.TimeZone,com.android.exchange.utility.CalendarUtilities$TimeZoneDate)> -> _SOURCE_
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)> -> _SOURCE_
<com.android.server.wm.DisplayContent: com.android.server.wm.WindowList getWindowList()> -> _SOURCE_
<android.location.Country: int getSource()> -> _SOURCE_
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1Sequence$1: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()> -> _SOURCE_
<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()> -> _SOURCE_
<android.net.sip.SipProfile: boolean getAutoRegistration()> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()> -> _SOURCE_
<com.android.contacts.list.ContactsRequest: java.lang.String getQueryString()> -> _SOURCE_
<android.view.textservice.SpellCheckerSubtype: int getNameResId()> -> _SOURCE_
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)> -> _SOURCE_
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String getMimeType()> -> _SOURCE_
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)> -> _SOURCE_
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Input geInput()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.os.Looper)> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: short getShort(int)> -> _SOURCE_
<android.text.style.AlignmentSpan$Standard: android.text.Layout$Alignment getAlignment()> -> _SOURCE_
<android.os.UserManager: java.util.List getUsers(boolean)> -> _SOURCE_
<com.google.common.collect.SortedMultisets$DescendingMultiset: java.lang.String toString()> -> _SOURCE_
<com.android.internal.util.StateMachine: java.lang.String getName()> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: int getCount()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$1: java.lang.Object get()> -> _SOURCE_
<gov.nist.javax.sip.parser.URLParser: java.lang.String mark()> -> _SOURCE_
<android.webkit.ZoomManager: float getScale()> -> _SOURCE_
<com.android.contacts.util.StreamItemPhotoEntry: int getSortIndex()> -> _SOURCE_
<android.appwidget.AppWidgetHostView: int getAppWidgetId()> -> _SOURCE_
<android.os.Environment: java.io.File getDataDirectory()> -> _SOURCE_
<com.android.inputmethod.latin.InputPointers: int[] getTimes()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getPeerPrincipal()> -> _SOURCE_
<org.apache.commons.codec.binary.Base64: byte[] discardNonBase64(byte[])> -> _SOURCE_
<java.net.URLConnection: java.util.Map getHeaderFields()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ViaHeader getTopmostViaHeader()> -> _SOURCE_
<java.net.Socks4Message: int getIP()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String[] getSupportedCipherSuiteNames()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentDispositionHeader createContentDispositionHeader(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.PointerTracker getPointerTracker(int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)> -> _SOURCE_
<android.view.View: int getTop()> -> _SOURCE_
<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)> -> _SOURCE_
<com.android.providers.media.MediaProvider: java.lang.String makeBestName(java.lang.String,java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: boolean isRetryNeeded()> -> _SOURCE_
<gov.nist.javax.sip.header.Contact: java.lang.String getPubGruuParam()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()> -> _SOURCE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getTransferEncoding()> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.MaxForwardsHeader getMaxForwards()> -> _SOURCE_
<android.view.KeyEvent: long getEventTime()> -> _SOURCE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getMaximumMessageSize()> -> _SOURCE_
<java.lang.ProcessBuilder: java.util.Map environment()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()> -> _SOURCE_
<libcore.icu.NativeBreakIterator: java.lang.Object clone()> -> _SOURCE_
<com.android.inputmethod.latin.CollectionUtils: java.util.ArrayList newArrayList()> -> _SOURCE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getRememberedDisplays()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> -> _SOURCE_
<com.android.exchange.adapter.Parser: byte[] getValueBytes()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: java.lang.String getInputEncoding()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()> -> _SOURCE_
<android.app.backup.BackupAgent: android.os.IBinder onBind()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingRight()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1Number()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()> android.permission.WRITE_CONTACTS -> _SOURCE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()> -> _SOURCE_
<com.android.internal.widget.ActionBarView: int getDropdownSelectedPosition()> -> _SOURCE_
<java.lang.ProcessManager: java.lang.ProcessManager getInstance()> -> _SOURCE_
<android.os.IUserManager$Stub$Proxy: int getUserSerialNumber(int)> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredPostal()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)> -> _SOURCE_
<com.android.emailcommon.internet.MimeMultipart: java.lang.String getSubTypeForTest()> -> _SOURCE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()> -> _SOURCE_
<android.widget.ArrayAdapter: android.widget.Filter getFilter()> -> _SOURCE_
<com.android.mms.data.Contact: long getRecipientId()> -> _SOURCE_
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)> -> _SOURCE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> -> _SOURCE_
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: long getLastCertReqTime()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.net.ServerSocket createServerSocket()> -> _SOURCE_
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)> -> _SOURCE_
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String lookupNamespaceURI(java.lang.String)> -> _SOURCE_
<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)> -> _SOURCE_
<javax.crypto.spec.PBEKeySpec: int getKeyLength()> -> _SOURCE_
<android.preference.GenericInflater: java.lang.String getDefaultPackage()> -> _SOURCE_
<com.android.internal.telephony.ATResponseParser: java.lang.String nextString()> -> _SOURCE_
<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()> -> _SOURCE_
<android.text.style.SuggestionSpan: java.lang.String getLocale()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()> -> _SOURCE_
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getCurrentType(com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.dataitem.DataKind)> -> _SOURCE_
<com.android.emailcommon.internet.BinaryTempFileBody: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()> -> _SOURCE_
<com.android.contacts.editor.SelectAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()> -> _SOURCE_
<android.webkit.WebSettings: boolean getSavePassword()> -> _SOURCE_
<com.android.contacts.model.dataitem.NicknameDataItem: int getType()> -> _SOURCE_
<com.android.calendar.EventRecurrenceFormatter: java.lang.String getRepeatString(android.content.res.Resources,com.android.calendarcommon2.EventRecurrence)> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionAc: android.net.LinkCapabilities getLinkCapabilitiesSync()> -> _SOURCE_
<android.text.DynamicLayout: int getLineStart(int)> -> _SOURCE_
<java.util.TreeSet: java.lang.Object first()> -> _SOURCE_
<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()> -> _SOURCE_
<com.android.contacts.calllog.IntentProvider$2: android.content.Intent getIntent(android.content.Context)> -> _SOURCE_
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> -> _SOURCE_
<android.animation.Keyframe$IntKeyframe: int getIntValue()> -> _SOURCE_
<android.graphics.drawable.Drawable: int[] getState()> -> _SOURCE_
<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getFirstArgument(int)> -> _SOURCE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver getEntityResolver()> -> _SOURCE_
<com.android.inputmethod.keyboard.Key: int getMoreKeysColumn()> -> _SOURCE_
<android.view.View: float getCameraDistance()> -> _SOURCE_
<com.android.music.QueryBrowserActivity: android.database.Cursor access$402(com.android.music.QueryBrowserActivity,android.database.Cursor)> -> _SOURCE_
<android.net.Uri: java.lang.String access$600()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)> -> _SOURCE_
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> -> _SOURCE_
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getString(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.dataitem.EventDataItem: int getType()> -> _SOURCE_
<com.android.internal.policy.impl.GlobalActions$MyAdapter: int getCount()> -> _SOURCE_
<android.location.Address: java.lang.String getFeatureName()> -> _SOURCE_
<java.text.ParsePosition: int getErrorIndex()> -> _SOURCE_
<com.android.inputmethod.keyboard.MainKeyboardView: int getAltCodeKeyWhileTypingAnimAlpha()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespaceUri(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaEriText()> -> _SOURCE_
<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()> -> _SOURCE_
<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyAlgorithm()> -> _SOURCE_
<com.android.settings.drawable.DrawableWrapper: int getIntrinsicHeight()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSendBufferSize()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getNumberOfPages()> -> _SOURCE_
<android.view.View: int getNextFocusDownId()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getForegroundCall()> -> _SOURCE_
<android.view.MotionEvent: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getNodeName()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDefaultUseCaches()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<com.android.emailcommon.provider.Policy: long getAccountIdWithPolicyKey(android.content.Context,long)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()> -> _SOURCE_
<com.android.contacts.interactions.PhoneNumberInteraction: android.content.CursorLoader getLoader()> -> _SOURCE_
<com.google.android.mms.pdu.PduPersister: byte[] getBytes(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getAllowFileAccess()> -> _SOURCE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getIssuerUniqueID()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()> -> _SOURCE_
<com.android.browser.Controller: int getMaxTabs()> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: android.telephony.ServiceState getServiceState()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespace()> -> _SOURCE_
<android.hardware.Sensor: java.lang.String getVendor()> -> _SOURCE_
<java.net.ResponseCache: java.net.ResponseCache getDefault()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)> -> _SOURCE_
<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)> -> _SOURCE_
<android.widget.TextView: java.util.Locale getTextServicesLocale()> -> _SOURCE_
<java.io.ObjectStreamClass: java.io.ObjectStreamClass lookupStreamClass(java.lang.Class)> -> _SOURCE_
<java.lang.ThreadGroup: java.lang.String getName()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()> -> _SOURCE_
<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: boolean getShouldSync()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)> -> _SOURCE_
<java.util.UUID: long getLeastSignificantBits()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<android.webkit.WebSettings: boolean getLightTouchEnabled()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()> -> _SOURCE_
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int,int)> -> _SOURCE_
<gov.nist.core.GenericObject: java.lang.StringBuffer encode(java.lang.StringBuffer)> -> _SOURCE_
<android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl: int getLabelFor(android.view.View)> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: java.lang.String getHelpUri()> -> _SOURCE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()> -> _SOURCE_
<android.view.MotionEvent: float getX()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> -> _SOURCE_
<android.telephony.CellSignalStrengthLte: int getDbm()> -> _SOURCE_
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()> -> _SOURCE_
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)> -> _SOURCE_
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)> -> _SOURCE_
<java.text.DecimalFormat: boolean isGroupingUsed()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: byte[] getEncoded()> -> _SOURCE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()> -> _SOURCE_
<dalvik.system.DexFile: java.lang.String getName()> -> _SOURCE_
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub$Proxy: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)> -> _SOURCE_
<android.net.LocalSocket: java.lang.String toString()> -> _SOURCE_
<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()> -> _SOURCE_
<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1AlphaTag()> -> _SOURCE_
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)> android.permission.WRITE_EXTERNAL_STORAGE -> _SOURCE_|FILE_INFORMATION
<android.os.IRemoteCallback$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<com.android.mms.data.RecipientIdCache: com.android.mms.data.RecipientIdCache getInstance()> -> _SOURCE_
<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<java.nio.CharBuffer: java.lang.Appendable append(char)> -> _SOURCE_
<com.google.common.collect.ImmutableSortedMap$SerializedForm: java.lang.Object readResolve()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()> -> _SOURCE_
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()> -> _SOURCE_
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])> -> _SOURCE_
<android.app.Activity: android.view.View getCurrentFocus()> -> _SOURCE_
<com.android.camera.ui.PopupManager: com.android.camera.ui.PopupManager getInstance(android.content.Context)> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()> -> _SOURCE_
<android.text.Annotation: java.lang.String getValue()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)> -> _SOURCE_
<android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.PagedView: int getPageCount()> -> _SOURCE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributePrefix(int)> -> _SOURCE_
<android.app.Notification$InboxStyle: android.app.Notification build()> -> _SOURCE_
<java.util.AbstractList: java.util.ListIterator listIterator()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.Privacy: java.lang.String getPrivacy()> -> _SOURCE_
<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperInfo getWallpaperInfo()> -> _SOURCE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.Collection getWaitingThreads()> -> _SOURCE_
<android.view.KeyEvent: long getEventTimeNano()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetStringParser parser()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean getDataRoamingEnabled()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()> -> _SOURCE_
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)> -> _SOURCE_
<com.android.server.wm.WindowState: android.view.IApplicationToken getAppToken()> -> _SOURCE_
<android.view.Window: android.content.Context getContext()> -> _SOURCE_
<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngine get(android.content.Context,java.lang.String)> -> _SOURCE_
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> -> _SOURCE_
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getViewTypeCount()> -> _SOURCE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardEntry$PostalData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker strongKeys()> -> _SOURCE_
<android.widget.TabHost$IntentContentStrategy: android.view.View getContentView()> -> _SOURCE_
<android.content.Intent: java.lang.String toInsecureStringWithClip()> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationHeader: javax.sip.address.URI getURI()> -> _SOURCE_
<android.text.BoringLayout: int getEllipsizedWidth()> -> _SOURCE_
<android.content.Intent: java.lang.String getScheme()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()> -> _SOURCE_
<gov.nist.core.LexerCore: java.lang.String getNextId()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: com.android.contacts.model.account.AccountType getItem(int)> -> _SOURCE_
<org.apache.harmony.security.x509.Extension$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> -> _SOURCE_
<org.json.JSONArray: java.lang.String getString(int)> -> _SOURCE_
<java.io.File: java.io.File getAbsoluteFile()> -> _SOURCE_
<com.android.contacts.editor.ContactEditorUtils: java.lang.String[] getWritableAccountTypeStrings()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()> -> _SOURCE_
<android.os.storage.IObbActionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<com.android.internal.telephony.IExtendedNetworkService$Stub$Proxy: java.lang.CharSequence getUserMessage(java.lang.CharSequence)> -> _SOURCE_
<android.hardware.input.InputManager: boolean[] deviceHasKeys(int[])> -> _SOURCE_
<com.android.settings.Utils: java.lang.String getDefaultIpAddresses(android.content.Context)> -> _SOURCE_
<com.android.providers.contacts.aggregation.util.ContactMatcher: java.lang.String toString()> -> _SOURCE_
<java.lang.reflect.Field: char getChar(java.lang.Object)> -> _SOURCE_
<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData$Entry get(int)> -> _SOURCE_
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPhoneticGivenName()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)> android.permission.ACCESS_NETWORK_STATE -> _SOURCE_|NETWORK_INFORMATION
<android.app.Activity: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)> -> _SOURCE_
<android.preference.Preference: int getTitleRes()> -> _SOURCE_
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getCodePath()> -> _SOURCE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)> -> _SOURCE_
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$State getState()> -> _SOURCE_
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: int getInt(java.lang.String)> -> _SOURCE_
<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)> -> _SOURCE_
<java.util.Locale: java.lang.String[] getISOCountries()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()> -> _SOURCE_
<java.security.SignatureSpi: java.security.AlgorithmParameters engineGetParameters()> -> _SOURCE_
<android.net.NetworkIdentity: int getSubType()> -> _SOURCE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object clone()> -> _SOURCE_
<com.android.server.display.DisplayManagerService: int[] getDisplayIds()> -> _SOURCE_
<android.net.NetworkInfo: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Lists$Partition: java.lang.Object get(int)> -> _SOURCE_
<android.media.TimedText: java.lang.String getText()> -> _SOURCE_
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCardApplication getUiccCardApplication(int)> -> _SOURCE_
<org.apache.http.message.HeaderGroup: org.apache.http.message.HeaderGroup copy()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte,byte)> -> _SOURCE_
<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getInputMethodList()> -> _SOURCE_
<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)> -> _SOURCE_
<com.google.common.collect.MapMaker: long getExpireAfterWriteNanos()> -> _SOURCE_
<com.android.mms.dom.events.EventImpl: java.lang.String getType()> -> _SOURCE_
<com.android.internal.view.IInputContext$Stub$Proxy: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)> -> _SOURCE_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcInactiveState access$400(com.android.internal.telephony.DataConnection)> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: long getLastModified()> -> _SOURCE_
<java.text.ChoiceFormat: java.lang.String toPattern()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPacketBufferSize()> -> _SOURCE_
<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()> -> _SOURCE_
<org.apache.harmony.security.x509.TBSCertList: java.util.List getRevokedCertificates()> -> _SOURCE_
<com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)> -> _SOURCE_
<com.google.common.collect.Count: int get()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()> -> _SOURCE_
<android.app.ListFragment: long getSelectedItemId()> -> _SOURCE_
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc()> -> _SOURCE_
<com.android.i18n.phonenumbers.NumberParseException: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getAttribution(android.content.Context,com.android.contacts.model.Contact)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()> -> _SOURCE_
<com.android.camera.ComboPreferences: com.android.camera.ComboPreferences get(android.content.Context)> -> _SOURCE_
<android.telephony.TelephonyManager: int getPhoneType(int)> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)> -> _SOURCE_
<com.android.inputmethod.latin.UserHistoryDictionary: com.android.inputmethod.latin.UserHistoryDictionary getInstance(android.content.Context,java.lang.String,android.content.SharedPreferences)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()> -> _SOURCE_
<android.webkit.WebBackForwardListClassic: int getSize()> -> _SOURCE_
<com.android.internal.telephony.DataConnectionTracker: java.lang.String apnIdToType(int)> -> _SOURCE_
<android.net.sip.ISipSessionListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<android.util.TypedValue: java.lang.String toString()> -> _SOURCE_
<org.apache.http.message.BasicStatusLine: java.lang.String getReasonPhrase()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)> -> _SOURCE_
<android.widget.CursorAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)> -> _SOURCE_
<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemPhotoActivity()> -> _SOURCE_
<org.apache.http.client.methods.HttpOptions: java.util.Set getAllowedMethods(org.apache.http.HttpResponse)> -> _SOURCE_
<com.android.internal.telephony.sip.SipConnectionBase: long getCreateTime()> -> _SOURCE_
<org.apache.harmony.security.asn1.BerInputStream: int getOffset()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)> -> _SOURCE_
<java.util.GregorianCalendar: int getGreatestMinimum(int)> -> _SOURCE_
<android.accounts.Account: java.lang.String toString()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object getContent()> -> _SOURCE_
<android.view.GLES20Canvas: int getDisplayList(int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String encodeBody()> -> _SOURCE_
<com.android.providers.contacts.ContactsProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)> -> _SOURCE_
<android.view.textservice.TextInfo: java.lang.String getText()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.GlowPadView: int getDirectionDescriptionsResourceId()> -> _SOURCE_
<com.google.android.mms.ContentType: java.util.ArrayList getSupportedTypes()> -> _SOURCE_
<com.google.common.collect.MapMaker: int getInitialCapacity()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> -> _SOURCE_
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler getDTDHandler()> -> _SOURCE_
<com.android.internal.telephony.Call: boolean isGeneric()> -> _SOURCE_
<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.Reader,java.lang.String)> -> _SOURCE_
<android.content.Intent: java.util.Set getCategories()> -> _SOURCE_
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getStreet()> -> _SOURCE_
<android.webkit.WebSettingsClassic: boolean getSaveFormData()> -> _SOURCE_
<java.net.InterfaceAddress: java.net.InetAddress getBroadcast()> -> _SOURCE_
<com.android.browser.UrlInputView: int getState()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> -> _SOURCE_
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppState AppStateFromRILInt(int)> -> _SOURCE_
<java.nio.channels.FileLock: long position()> -> _SOURCE_
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()> -> _SOURCE_
<com.android.vcard.VCardEntry: java.util.List getPhoneList()> -> _SOURCE_
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()> -> _SOURCE_
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: java.lang.String getIconName(int)> -> _SOURCE_
<com.android.calendar.event.AttendeesView: com.android.calendar.CalendarEventModel$Attendee getItem(int)> -> _SOURCE_
<android.text.PackedIntVector: int getValue(int,int)> -> _SOURCE_
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.Object clone()> -> _SOURCE_
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()> -> _SOURCE_
<java.util.TreeMap$MapIterator: java.util.TreeMap$Node stepForward()> -> _SOURCE_
<android.net.LinkProperties: java.util.Collection getAddresses()> -> _SOURCE_
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)> -> _SOURCE_
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)> -> _SOURCE_
<java.security.cert.TrustAnchor: java.lang.String toString()> -> _SOURCE_
<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getIndicatorId()> -> _SOURCE_
<com.android.internal.telephony.gsm.SimTlv: int getTag()> -> _SOURCE_
<com.android.mms.data.Contact: boolean getSendToVoicemail()> -> _SOURCE_
<org.apache.harmony.security.fortress.Services: java.security.Provider[] getProviders()> -> _SOURCE_
<com.google.android.mms.pdu.Base64: byte[] discardNonBase64(byte[])> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: int getOrdering()> -> _SOURCE_
<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()> -> _SOURCE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentEncoding()> -> _SOURCE_
<com.android.mms.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()> -> _SOURCE_
<com.google.android.mms.pdu.NotifyRespInd: int getStatus()> -> _SOURCE_
<android.app.ContextImpl: java.io.File getFilesDir()> -> _SOURCE_
<java.lang.ThreadLocal: java.lang.Object get()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelector: java.nio.channels.spi.SelectorProvider provider()> -> _SOURCE_
<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getEsn()> -> _SOURCE_
<com.android.internal.telephony.CallManager: java.util.List getBgCallConnections()> -> _SOURCE_
<com.google.common.collect.BstMutationRule: com.google.common.collect.BstModifier getModifier()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: int getToIndex(java.lang.Object)> -> _SOURCE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)> -> _SOURCE_
<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLServerSocket createSSLServerSocket(int,int,java.net.InetAddress)> -> _SOURCE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()> -> _SOURCE_
<com.android.server.TwilightService$TwilightState: long getTodaySunrise()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String toString()> -> _SOURCE_
<android.os.PatternMatcher: java.lang.String toString()> -> _SOURCE_
<java.nio.DirectByteBuffer: short getShort()> -> _SOURCE_
<android.renderscript.Element: int getVectorSize()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)> -> _SOURCE_
<java.net.NetworkInterface: java.lang.String getName()> -> _SOURCE_
<libcore.net.http.HttpURLConnectionImpl: int getDefaultPort()> -> _SOURCE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()> -> _SOURCE_
<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)> -> _SOURCE_
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardStatusView: int getAppWidgetId()> -> _SOURCE_
<android.net.wifi.ScanResult: java.lang.String toString()> -> _SOURCE_
<java.util.MapEntry: java.lang.Object getValue()> -> _SOURCE_
<android.net.IThrottleManager$Stub$Proxy: int getCliffLevel(java.lang.String,int)> -> _SOURCE_
<com.android.internal.view.WindowManagerPolicyThread: android.os.Looper getLooper()> -> _SOURCE_
<android.widget.CalendarView: long getDate()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getUrl()> -> _SOURCE_
<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.net.Socket accept()> -> _SOURCE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String encode()> -> _SOURCE_
<android.widget.Editor$SelectionEndHandleView: int getCurrentCursorOffset()> -> _SOURCE_
<org.apache.http.impl.cookie.BestMatchSpec: int getVersion()> -> _SOURCE_
<com.android.mms.MmsConfig: int getMinMessageCountPerThread()> -> _SOURCE_
<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getX()> -> _SOURCE_
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()> android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<com.android.systemui.recent.RecentTasksLoader: android.graphics.drawable.Drawable getFullResIcon(android.content.res.Resources,int)> -> _SOURCE_
<android.view.Choreographer: long getFrameTimeNanos()> -> _SOURCE_
<com.android.contacts.list.JoinContactLoader: android.database.Cursor loadInBackground()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoTimeout()> -> _SOURCE_
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()> -> _SOURCE_
<com.google.android.mms.pdu.GenericPdu: int getMessageType()> -> _SOURCE_
<android.media.IMediaScannerListener$Stub: android.os.IBinder asBinder()> -> _SOURCE_
<java.lang.SecurityManager: java.lang.Class currentLoadedClass()> -> _SOURCE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPacketSourcePort()> -> _SOURCE_
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexRawContactIds()> -> _SOURCE_
<com.android.server.power.DisplayPowerState$2: java.lang.Integer get(com.android.server.power.DisplayPowerState)> -> _SOURCE_
<gov.nist.javax.sip.header.AcceptLanguage: java.util.Locale getAcceptLanguage()> -> _SOURCE_
<com.android.mms.util.DownloadManager: boolean getAutoDownloadState(android.content.SharedPreferences)> -> _SOURCE_
<gov.nist.javax.sip.stack.HopImpl: int getPort()> -> _SOURCE_
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()> -> _SOURCE_
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getPrlVersion()> -> _SOURCE_
<android.widget.Switch: int getSwitchMinWidth()> -> _SOURCE_
<com.android.deskclock.Alarm: java.lang.String toString()> -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.String debugDump()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> -> _SOURCE_
<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$400(com.android.ex.chips.BaseRecipientAdapter,boolean,java.util.LinkedHashMap,java.util.List,java.util.Set)> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatCount()> -> _SOURCE_
<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()> -> _SOURCE_
<com.android.browser.AutoFillProfileDatabase: com.android.browser.AutoFillProfileDatabase getInstance(android.content.Context)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHmacName()> -> _SOURCE_
<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getPeerPort()> -> _SOURCE_
<com.android.settings.bluetooth.HeadsetProfile: int getDrawableResource(android.bluetooth.BluetoothClass)> -> _SOURCE_
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.Ranges: com.google.common.collect.Range all()> -> _SOURCE_
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)> -> _SOURCE_
<android.media.AudioService: int getRemoteStreamMaxVolume()> -> _SOURCE_
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getSensorTimerLocked(int,boolean)> -> _SOURCE_
<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<com.android.calendar.Event: int getMaxColumns()> -> _SOURCE_
<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<android.widget.GridLayout$4: int getGravityOffset(android.view.View,int)> -> _SOURCE_
<android.content.pm.ResolveInfo: java.lang.String toString()> -> _SOURCE_
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<libcore.net.http.HttpConnection: javax.net.ssl.SSLSocket getSecureSocketIfConnected()> -> _SOURCE_
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()> -> _SOURCE_
<android.location.GpsSatellite: float getAzimuth()> -> _SOURCE_
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)> -> _SOURCE_
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: long getItemId(int)> -> _SOURCE_
<android.net.NetworkStatsHistory: java.lang.String toString()> -> _SOURCE_
<com.android.providers.contacts.TransactionContext: java.util.Set getUpdatedRawContactIds()> -> _SOURCE_
<java.security.Security: java.security.Provider[] getProviders()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()> -> _SOURCE_
<android.hardware.SystemSensorManager$ListenerDelegate: java.util.List getSensors()> -> _SOURCE_
<android.hardware.Sensor: int getType()> -> _SOURCE_
<android.view.View$4: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)> -> _SOURCE_
<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()> -> _SOURCE_
<android.app.INotificationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()> -> _SOURCE_
<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])> -> _SOURCE_
<libcore.net.http.ResponseHeaders: java.lang.String getEtag()> -> _SOURCE_
<android.os.StrictMode$ThreadPolicy: java.lang.String toString()> -> _SOURCE_
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getVideoThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)> -> _SOURCE_
<com.android.emailcommon.service.AccountServiceProxy: java.lang.String getDeviceId()> -> _SOURCE_
<android.view.GLES20Canvas: int getHeight()> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> -> _SOURCE_
<android.database.CursorWrapper: int getInt(int)> -> _SOURCE_
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()> -> _SOURCE_
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()> -> _SOURCE_
<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account getAccountForMessageId(android.content.Context,long)> -> _SOURCE_
<com.android.contacts.group.GroupListItem: java.lang.String getDataSet()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: long getLong(int)> -> _SOURCE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getAuthenticationInfo()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)> -> _SOURCE_
<com.google.android.mms.pdu.RetrieveConf: int getDeliveryReport()> -> _SOURCE_
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V30: java.lang.String getLine()> -> _SOURCE_
<java.util.EnumMap: java.util.Set entrySet()> -> _SOURCE_
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()> -> _SOURCE_
<com.android.server.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int)> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String encodeBody()> -> _SOURCE_
<java.nio.ReadOnlyHeapByteBuffer: byte[] protectedArray()> -> _SOURCE_
<android.content.pm.ApplicationInfo: java.lang.String toString()> -> _SOURCE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)> -> _SOURCE_
<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()> -> _SOURCE_
<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()> -> _SOURCE_
<com.android.mms.ui.IconListAdapter$IconListItem: java.lang.String getTitle()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()> android.permission.WRITE_CONTACTS -> _SOURCE_|CONTACT_INFORMATION
<android.content.Intent$FilterComparison: android.content.Intent getIntent()> -> _SOURCE_
<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()> -> _SOURCE_
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<android.widget.Switch: int getCompoundPaddingLeft()> -> _SOURCE_
<com.android.emailcommon.mail.MessagingException: int getExceptionType()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: char getChar(int)> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: int getCount()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndLine()> -> _SOURCE_
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout access$1900(android.widget.RemoteViewsAdapter$RemoteViewsMetaData,int,android.view.View,android.view.ViewGroup,java.lang.Object,android.view.LayoutInflater,android.widget.RemoteViews$OnClickHandler)> -> _SOURCE_
<com.android.systemui.statusbar.phone.PanelView: android.view.View getHandle()> -> _SOURCE_
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<com.android.mms.util.Recycler: com.android.mms.util.Recycler$MmsRecycler getMmsRecycler()> -> _SOURCE_
<libcore.io.ForwardingOs: java.io.FileDescriptor dup2(java.io.FileDescriptor,int)> -> _SOURCE_
<com.android.vcard.VCardEntry$ImData: int getType()> -> _SOURCE_
<android.net.wifi.NetworkUpdateResult: int getNetworkId()> -> _SOURCE_
<android.view.MotionEvent: float getXPrecision()> -> _SOURCE_
<android.view.Display: int getLayerStack()> -> _SOURCE_
<java.math.BigDecimal: long longValueExact()> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getGlobalSearchActivity()> -> _SOURCE_
<com.android.calendar.agenda.AgendaByDayAdapter: int getHeaderPosition(int)> -> _SOURCE_
<java.net.URL: java.lang.String getRef()> -> _SOURCE_
<android.content.IClipboard$Stub$Proxy: android.content.ClipData getPrimaryClip(java.lang.String)> -> _SOURCE_
<android.webkit.ViewManager: android.webkit.ViewManager$ChildView createView()> -> _SOURCE_
<java.nio.DirectByteBuffer: int getInt(int)> -> _SOURCE_
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getQ()> -> _SOURCE_
<gov.nist.core.GenericObjectList: java.lang.String encode()> -> _SOURCE_
<android.view.HardwareLayer: int getWidth()> -> _SOURCE_
<com.android.music.MusicUtils: android.net.Uri getContentURIForPath(java.lang.String)> -> _SOURCE_
<android.database.AbstractCursor: int getType(int)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> -> _SOURCE_
<com.android.vcard.VCardParserImpl_V21: int getVersion()> -> _SOURCE_
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()> -> _SOURCE_
<gov.nist.javax.sip.header.To: gov.nist.core.HostPort getHostPort()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)> -> _SOURCE_
<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getWebSearchActivity()> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: int getInt(int)> -> _SOURCE_
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()> -> _SOURCE_
<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getCopyright()> -> _SOURCE_
<android.telephony.CellIdentityLte: java.lang.String toString()> -> _SOURCE_
<com.android.music.MusicUtils: android.graphics.Bitmap getArtwork(android.content.Context,long,long,boolean)> -> _SOURCE_
<com.android.mms.dom.NodeImpl: java.lang.String getTextContent()> -> _SOURCE_
<com.google.common.collect.Multisets$ImmutableEntry: int getCount()> -> _SOURCE_
<android.net.NetworkInfo: java.lang.String getSubtypeName()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndColumn()> -> _SOURCE_
<android.drm.DrmInfo: byte[] getData()> -> _SOURCE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTime(long,int)> -> _SOURCE_
<com.google.common.collect.LinkedHashMultiset: boolean isEmpty()> -> _SOURCE_
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Uid$Pid getPidStatsLocked(int)> -> _SOURCE_
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()> -> _SOURCE_
<com.android.contacts.list.ContactTileAdapter: int getFrequentHeaderPosition()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndLine()> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getPos()> -> _SOURCE_
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)> -> _SOURCE_
<com.android.mms.ui.MessageListItem: com.android.mms.ui.MessageItem getMessageItem()> -> _SOURCE_
<android.nfc.tech.NfcB: int getMaxTransceiveLength()> -> _SOURCE_
<android.widget.ImageView: int getBaseline()> -> _SOURCE_
<android.view.View: int getPaddingRight()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getFootersCount()> -> _SOURCE_
<com.android.mms.layout.LayoutManager: int getLayoutHeight()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> -> _SOURCE_
<java.io.SerializationHandleMap: int get(java.lang.Object)> -> _SOURCE_
<com.android.contacts.model.RawContact: java.lang.String getSync3()> -> _SOURCE_
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap makeCustomMap()> -> _SOURCE_
<com.android.mms.model.MediaModel: int getDuration()> -> _SOURCE_
<org.apache.harmony.xml.ExpatReader: java.lang.Object getProperty(java.lang.String)> -> _SOURCE_
<android.widget.TabHost: java.lang.String getCurrentTabTag()> -> _SOURCE_
<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()> -> _SOURCE_
<java.net.InetSocketAddress: java.lang.String toString()> -> _SOURCE_
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)> -> _SOURCE_
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<java.net.MulticastSocket: java.net.InetAddress getInterface()> -> _SOURCE_
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)> -> _SOURCE_
<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: long getLong(int)> -> _SOURCE_
<com.android.providers.calendar.SQLiteContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<gov.nist.javax.sip.header.RSeq: java.lang.String encodeBody()> -> _SOURCE_
<com.android.server.PreferredComponent: java.lang.String getParseError()> -> _SOURCE_
<android.net.LocalSocket: int getSendBufferSize()> -> _SOURCE_
<com.android.contacts.editor.SplitContactConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getInstance(java.lang.String)> -> _SOURCE_
<com.android.settings.wifi.WifiDialog: android.widget.Button getCancelButton()> -> _SOURCE_
<java.nio.DirectByteBuffer: char getChar(int)> -> _SOURCE_
<com.android.inputmethod.latin.RichInputConnection: java.lang.String getWordAtCursor(java.lang.String)> -> _SOURCE_
<android.text.StaticLayout: int getEllipsisStart(int)> -> _SOURCE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCE_
<java.text.Format: java.lang.String format(java.lang.Object)> -> _SOURCE_
<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()> -> _SOURCE_
<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()> -> _SOURCE_
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()> -> _SOURCE_
<com.android.settings.bluetooth.LocalBluetoothAdapter: boolean isEnabled()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)> -> _SOURCE_
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.SubjectHeader createSubjectHeader(java.lang.String)> -> _SOURCE_
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> -> _SOURCE_
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DEROutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDERSubStream()> -> _SOURCE_
<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)> -> _SOURCE_
<gov.nist.core.NameValueList: java.lang.Object clone()> -> _SOURCE_
<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()> -> _SOURCE_
<android.provider.ContactsContract$CommonDataKinds$Event: int getTypeResource(java.lang.Integer)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERApplicationSpecific: int getApplicationTag()> -> _SOURCE_
<com.android.browser.search.SearchEngineInfo: java.lang.String toString()> -> _SOURCE_
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer get(float[],int,int)> -> _SOURCE_
<java.lang.Class: java.lang.Package getPackage()> -> _SOURCE_
<com.android.internal.app.ActionBarImpl$TabImpl: int getPosition()> -> _SOURCE_
<android.database.sqlite.SQLiteCursor: int getCount()> -> _SOURCE_
<com.android.mms.MmsApp: android.provider.SearchRecentSuggestions getRecentSuggestions()> -> _SOURCE_
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()> -> _SOURCE_
<com.android.calendar.month.MonthByWeekFragment: long getSupportedEventTypes()> -> _SOURCE_
<com.android.mms.layout.LayoutManager: int getLayoutWidth()> -> _SOURCE_
<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.net.URL: java.lang.String getFile()> -> _SOURCE_
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()> -> _SOURCE_
<android.support.v4.view.ViewCompat$GBViewCompatImpl: int getOverScrollMode(android.view.View)> -> _SOURCE_
<java.util.Date: java.lang.String toGMTString()> -> _SOURCE_
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> -> _SOURCE_
<gov.nist.core.NameValue: java.lang.Object clone()> -> _SOURCE_
<org.apache.commons.io.LineIterator: java.lang.String nextLine()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()> -> _SOURCE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getCharset()> -> _SOURCE_
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: float getFloat(int)> -> _SOURCE_
<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimDomain()> -> _SOURCE_
<android.telephony.NeighboringCellInfo: int getCid()> -> _SOURCE_
<com.android.calendar.CalendarController: long getTime()> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String)> -> _SOURCE_
<java.text.Collator: java.text.Collator getInstance()> -> _SOURCE_
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)> -> _SOURCE_
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)> -> _SOURCE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLanguageHeader getContentLanguage()> -> _SOURCE_
<com.android.calendar.TimezoneAdapter: int getRowById(java.lang.String)> -> _SOURCE_
<com.android.settings.bluetooth.OppProfile: int getPreferred(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.app.Dialog: android.view.View getCurrentFocus()> -> _SOURCE_
<com.android.contacts.group.GroupListItem: long getGroupId()> -> _SOURCE_
<org.apache.harmony.security.x509.OtherName: byte[] getValue()> -> _SOURCE_
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()> -> _SOURCE_
<android.app.ContextImpl: java.lang.String getPackageName()> -> _SOURCE_
<android.bluetooth.BluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> -> _SOURCE_
<com.android.music.MusicUtils$FastBitmapDrawable: int getOpacity()> -> _SOURCE_
<com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String access$300(com.android.common.contacts.BaseEmailAddressAdapter,android.database.Cursor)> -> _SOURCE_
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.ASN1Boolean getInstance(boolean)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: java.lang.String[] getTypesAsString()> -> _SOURCE_
<com.android.mms.util.ThumbnailManager: android.graphics.Bitmap access$200()> -> _SOURCE_
<gov.nist.javax.sip.stack.MessageChannel: int getPort()> -> _SOURCE_
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: long getItemId(int)> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getEnabledCipherSuitesMember()> -> _SOURCE_
<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()> -> _SOURCE_
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()> -> _SOURCE_
<android.os.ICancellationSignal$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl$Uid: long getVideoTurnedOnTime(long,int)> -> _SOURCE_
<com.android.mms.dom.smil.TimeImpl: boolean getResolved()> -> _SOURCE_
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])> android.permission.READ_CONTACTS -> _SOURCE_
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getButtonId()> -> _SOURCE_
<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()> -> _SOURCE_
<com.android.internal.telephony.sip.SipPhone: boolean isDataConnectivityPossible()> -> _SOURCE_
<java.util.logging.Handler: java.util.logging.ErrorManager getErrorManager()> -> _SOURCE_
<java.util.logging.Handler: java.util.logging.Formatter getFormatter()> -> _SOURCE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.ResourceBundle$Control)> -> _SOURCE_
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getSymbol()> -> _SOURCE_
<com.android.emailcommon.provider.Account: java.lang.String getSenderName()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> -> _SOURCE_
<com.android.contacts.list.ContactListFilter: java.lang.String toDebugString()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String getETag()> -> _SOURCE_
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()> -> _SOURCE_
<com.android.mms.util.DownloadManager: com.android.mms.util.DownloadManager getInstance()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()> -> _SOURCE_
<com.android.internal.telephony.gsm.SmsCbHeader: int getDataCodingScheme()> -> _SOURCE_
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)> -> _SOURCE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCE_
<android.app.ActivityThread: java.lang.String getProfileFilePath()> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: int getCount()> -> _SOURCE_
<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()> -> _SOURCE_
<com.android.common.widget.CompositeCursorAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)> -> _SOURCE_
<java.nio.MappedByteBufferAdapter: char getChar()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.DateTime: int getMinute()> -> _SOURCE_
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getRecentsButton()> -> _SOURCE_
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getUseStrictPhoneNumberComparisonParameter()> -> _SOURCE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.header.CallIdHeader getNewCallId()> -> _SOURCE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()> -> _SOURCE_
<java.net.InetSocketAddress: java.net.InetAddress getAddress()> -> _SOURCE_
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getListeningPoints()> -> _SOURCE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginLine()> -> _SOURCE_
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentDispositionHeader getContentDispositionHeader()> -> _SOURCE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginLine()> -> _SOURCE_
<android.net.Uri$Builder: android.net.Uri build()> -> _SOURCE_
<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getDefaultKeyCoordX()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMultipart: java.lang.String getContentType()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> -> _SOURCE_
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)> -> _SOURCE_
<android.speech.tts.TtsEngines: java.util.List getEngines()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignedBy()> -> _SOURCE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()> -> _SOURCE_
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)> -> _SOURCE_
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])> -> _SOURCE_
<java.security.MessageDigest: java.lang.String getAlgorithm()> -> _SOURCE_
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)> -> _SOURCE_
<com.android.browser.provider.BrowserProvider$MySuggestionCursor: float getFloat(int)> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<com.android.emailcommon.internet.MimeMessage: java.lang.String[] getHeader(java.lang.String)> -> _SOURCE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: java.lang.CharSequence getContentDescription(java.lang.Object)> -> _SOURCE_
<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getAccessType()> -> _SOURCE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String toString()> -> _SOURCE_
<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()> -> _SOURCE_
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)> -> _SOURCE_
<com.android.providers.calendar.CalendarAlarmManager: android.os.PowerManager$WakeLock getScheduleNextAlarmWakeLock()> -> _SOURCE_
<com.android.org.bouncycastle.asn1.DERUTF8String: com.android.org.bouncycastle.asn1.DERUTF8String getInstance(java.lang.Object)> -> _SOURCE_
<libcore.io.NioBufferIterator: short readShort()> -> _SOURCE_
<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()> -> _SOURCE_
<com.android.server.NativeDaemonEvent: int getCode()> -> _SOURCE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)> android.permission.GET_ACCOUNTS -> _SOURCE_|ACCOUNT_INFORMATION
<android.graphics.Rect: java.lang.String toShortString()> -> _SOURCE_
<java.security.Timestamp: java.util.Date getTimestamp()> -> _SOURCE_
<com.android.internal.util.MemInfoReader: long getFreeSize()> -> _SOURCE_
<com.android.contacts.list.LegacyContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)> -> _SOURCE_
<android.app.backup.IRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()> -> _SOURCE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Runnable getTask()> -> _SOURCE_
<android.preference.PreferenceActivity: java.util.ArrayList access$100(android.preference.PreferenceActivity)> -> _SOURCE_
<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()> -> _SOURCE_
<android.os.Debug: int getThreadGcInvocationCount()> -> _SOURCE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getScheme()> -> _SOURCE_
<com.google.common.collect.ImmutableMultimap: com.google.common.collect.ImmutableMultimap of()> -> _SOURCE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String encodeBody()> -> _SOURCE_
<android.widget.TextView: int getFadeTop(boolean)> -> _SOURCE_
<java.security.Provider: java.security.Provider$Service getService(java.lang.String)> -> _SOURCE_
<org.apache.harmony.security.x509.CertificateList: byte[] access$300(org.apache.harmony.security.x509.CertificateList)> -> _SOURCE_
<java.util.AbstractMap: java.util.Collection values()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()> -> _SOURCE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ProxyRequireHeader createProxyRequireHeader(java.lang.String)> -> _SOURCE_
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)> -> _SOURCE_
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)> -> _SOURCE_
<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()> -> _SOURCE_
<android.view.View: android.content.res.Resources getResources()> -> _SOURCE_
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> -> _SOURCE_
<java.io.ByteArrayOutputStream: java.lang.String toString()> -> _SOURCE_
<com.android.contacts.model.RawContactDelta$ValuesDelta: int getPhoneType()> -> _SOURCE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()> -> _SOURCE_
<gov.nist.javax.sip.header.CallInfo: javax.sip.address.URI getInfo()> -> _SOURCE_
<android.content.SyncStats: java.lang.String toString()> -> _SOURCE_
<java.net.Socket: int getReceiveBufferSize()> -> _SOURCE_
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLineCtrlZ()> -> _SOURCE_
<android.widget.TextView: int getMaxLines()> -> _SOURCE_
<com.google.common.collect.RegularContiguousSet: com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType)> -> _SOURCE_
