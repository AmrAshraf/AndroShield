
NO_CATEGORY:
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)> (NO_CATEGORY)
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setVariableSpeed(float)> (NO_CATEGORY)
<android.drm.DrmManagerClient: void notify(java.lang.Object,int,int,java.lang.String)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int,int)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)> (NO_CATEGORY)
<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)> (NO_CATEGORY)
<com.android.server.wm.Session: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)> (NO_CATEGORY)
<android.view.SurfaceView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<java.io.Writer: void write(java.lang.String)> (NO_CATEGORY)
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,byte)> (NO_CATEGORY)
<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setProcessLimit(int)> (NO_CATEGORY)
<com.android.server.location.MockProvider: void setLocation(android.location.Location)> (NO_CATEGORY)
<android.net.INetworkStatsService$Stub$Proxy: void incrementOperationCount(int,int,int)> (NO_CATEGORY)
<android.media.AudioService: void setSpeakerphoneOn(boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setDisplayedChild(int,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void remove(android.view.IWindow)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelephoneNumber: void setPostDial(java.lang.String)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.media.AudioManager: void setMasterVolume(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)> (NO_CATEGORY)
<android.filterfw.core.FilterContext: void storeFrame(java.lang.String,android.filterfw.core.Frame)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic$FocusTransitionDrawable: void draw(android.graphics.Canvas)> (NO_CATEGORY)
<android.util.SparseLongArray: void append(int,long)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setFromIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void setRotate(int,float)> (NO_CATEGORY)
<android.os.storage.IMountServiceListener$Stub$Proxy: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)> (NO_CATEGORY)
<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)> (NO_CATEGORY)
<com.android.providers.userdictionary.DictionaryBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setTransparentRegionHint(com.android.server.wm.WindowStateAnimator,android.graphics.Region)> (NO_CATEGORY)
<java.io.PrintStream: void println(double)> (NO_CATEGORY)
<android.net.EthernetDataTracker: void setUserDataEnable(boolean)> (NO_CATEGORY)
<com.android.browser.PhoneUi$AnimScreen: void set(android.graphics.Bitmap)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void setSessionCacheSize(int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)> (NO_CATEGORY)
<com.android.browser.provider.BrowserProvider2: android.content.ContentValues extractImageValues(android.content.ContentValues,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PPreferredService: void setApplicationIdentifiers(java.lang.String)> (NO_CATEGORY)
<android.content.res.XmlBlock$Parser: void setInput(java.io.InputStream,java.lang.String)> (NO_CATEGORY)
<android.view.View$10: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: void setActive(boolean,boolean,java.lang.Runnable)> (NO_CATEGORY)
<com.android.settings.bluetooth.OppProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(java.lang.String)> (NO_CATEGORY)
<com.android.browser.NavTabScroller: void setOrientation(int)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setWeekdays(java.lang.String[])> (NO_CATEGORY)
<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)> (NO_CATEGORY)
<java.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)> (NO_CATEGORY)
<android.webkit.MockGeolocation: void setError(int,java.lang.String)> (NO_CATEGORY)
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setUseCaches(boolean)> (NO_CATEGORY)
<com.android.internal.widget.ActionBarView: void setSplitActionBar(boolean)> (NO_CATEGORY)
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleased(int)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)> (NO_CATEGORY)
<java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)> (NO_CATEGORY)
<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.IntentResolverOld: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)> (NO_CATEGORY)
<android.preference.Preference: void setTitle(int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)> (NO_CATEGORY)
<android.net.sip.ISipSession$Stub$Proxy: void answerCall(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)> (NO_CATEGORY)
<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)> (NO_CATEGORY)
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: void launchActivityWithAnimation(android.content.Intent,boolean,android.os.Bundle,android.os.Handler,java.lang.Runnable)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void setShuffleMode(int)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription: void setBandwidth(java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)> (NO_CATEGORY)
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.browser.Tab: void setWebView(android.webkit.WebView)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setPreference(float)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Oid: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setDeviceName(java.lang.String)> (NO_CATEGORY)
<com.android.server.AlarmManagerService$ResultReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: boolean performAction(java.lang.Object,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setWantClientAuth(boolean)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void set(float[])> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.collect.Lists$ReverseList$1: void set(java.lang.Object)> (NO_CATEGORY)
<android.renderscript.RenderScript: void setupDiskCache(java.io.File)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl: void setUserVisibleHint(android.app.Fragment,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setValue(java.lang.String)> (NO_CATEGORY)
<java.net.PlainDatagramSocketImpl: void send(java.net.DatagramPacket)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,float)> (NO_CATEGORY)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)> android.permission.BLUETOOTH (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<libcore.icu.NativeConverter: void setCallbackEncode(long,java.nio.charset.CharsetEncoder)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int)> (NO_CATEGORY)
<com.android.phone.CallFeaturesSetting$4: void handleMessage(android.os.Message)> (NO_CATEGORY)
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setCountryCode(java.lang.String,boolean)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProfileName(java.lang.String)> (NO_CATEGORY)
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.io.OutputStream)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setStaticMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.view.HardwareRenderer$Gl20Renderer: void setSurfaceTexture(android.view.HardwareLayer,android.graphics.SurfaceTexture)> (NO_CATEGORY)
<org.apache.harmony.xml.ExpatReader: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.widget.AbsListView$ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setManufacturer(java.lang.String)> (NO_CATEGORY)
<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)> (NO_CATEGORY)
<com.google.common.collect.Multisets$SetMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void serviceRequestImmediate(long)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void setMessageId(java.lang.String)> (NO_CATEGORY)
<com.android.settings.DateTimeSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void notifyInputDevicesChanged(int[])> (NO_CATEGORY)
<java.io.BufferedWriter: void write(java.lang.String,int,int)> (NO_CATEGORY)
<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: void onDisplayEvent(int,int)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.settings.bluetooth.CachedBluetoothDevice: void setPhonebookPermissionChoice(int)> (NO_CATEGORY)
<com.android.browser.search.OpenSearchSearchEngine: void startSearch(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setMessage(int,boolean)> (NO_CATEGORY)
<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$GBViewCompatImpl: void setOverScrollMode(android.view.View,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: boolean shouldVibrate(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void addMessageToConsole(java.lang.String,int,java.lang.String,int)> (NO_CATEGORY)
<com.android.server.wm.DisplayContent: void dump(java.lang.String,java.io.PrintWriter)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeLong(long)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void dispatchSystemUiVisibilityChanged(int,int,int,int)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: android.app.Fragment$SavedState saveFragmentInstanceState(android.app.Fragment)> (NO_CATEGORY)
<java.io.PrintWriter: void println(boolean)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.AlphabetShiftState: void setShifted(boolean)> (NO_CATEGORY)
<java.io.PrintStream: void print(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int stopUser(int,android.app.IStopUserCallback)> (NO_CATEGORY)
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void verifyPendingInstall(int,int)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void setSaturation(float)> (NO_CATEGORY)
<java.lang.reflect.Field: void setFloat(java.lang.Object,float)> (NO_CATEGORY)
<com.android.deskclock.Alarms: void setNextAlert(android.content.Context)> (NO_CATEGORY)
<com.android.providers.calendar.CalendarInstancesHelper$EventInstancesMap: void add(java.lang.String,android.content.ContentValues)> (NO_CATEGORY)
<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)> (NO_CATEGORY)
<android.widget.MediaController: void setEnabled(boolean)> (NO_CATEGORY)
<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)> (NO_CATEGORY)
<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer,long)> (NO_CATEGORY)
<android.widget.PopupWindow: void setTouchModal(boolean)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[])> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(byte[],java.io.Writer)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)> (NO_CATEGORY)
<android.media.AudioManager: void setMasterMute(boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)> (NO_CATEGORY)
<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,java.util.ArrayList)> (NO_CATEGORY)
<java.nio.IntBuffer: java.nio.IntBuffer put(int[],int,int)> (NO_CATEGORY)
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: boolean isObbMounted(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AcceptLanguage: void setQValue(float)> (NO_CATEGORY)
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)> (NO_CATEGORY)
<android.text.style.CharacterStyle$Passthrough: void updateDrawState(android.text.TextPaint)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendRinging(javax.sip.RequestEvent,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)> (NO_CATEGORY)
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void loadMessageStatus(long,int,int)> (NO_CATEGORY)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)> (NO_CATEGORY)
<android.app.ActivityManager$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: boolean setState(int[])> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void removeDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)> (NO_CATEGORY)
<android.service.dreams.IDreamManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.nfc.INfcAdapterExtras$Stub$Proxy: void authenticate(java.lang.String,byte[])> (NO_CATEGORY)
<android.media.IRemoteControlClient$Stub$Proxy: void setCurrentClientGenerationId(int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void detachPppd(java.lang.String)> (NO_CATEGORY)
<java.io.PrintWriter: java.io.PrintWriter append(char)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)> (NO_CATEGORY)
<android.view.Surface: void setWindowCrop(android.graphics.Rect)> (NO_CATEGORY)
<android.os.Bundle: void putIBinder(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<java.text.DecimalFormat: void setMinimumIntegerDigits(int)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setExpirationTime(long)> (NO_CATEGORY)
<android.security.Credentials: void install(android.content.Context,java.security.KeyPair)> (NO_CATEGORY)
<com.android.providers.contacts.ContactsProvider2: void notifyChange(boolean)> (NO_CATEGORY)
<android.app.ActivityThread$ApplicationThread: void setCoreSettings(android.os.Bundle)> (NO_CATEGORY)
<com.android.org.bouncycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setTranslationX(float)> (NO_CATEGORY)
<java.util.TreeMap$Node: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<java.net.Socks4Message: void setCommandOrResult(int)> (NO_CATEGORY)
<android.app.DownloadManager$Request: android.content.ContentValues toContentValues(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)> (NO_CATEGORY)
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.media.IMediaScannerService$Stub$Proxy: void scanFile(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)> (NO_CATEGORY)
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)> (NO_CATEGORY)
<android.location.LocationManager$ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.camera.ui.AbstractIndicatorButton: void setEnabled(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: void setupEditorInfo(android.view.inputmethod.EditorInfo)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setLocalName(int,java.lang.String)> (NO_CATEGORY)
<android.app.IBackupAgent$Stub$Proxy: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)> (NO_CATEGORY)
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)> (NO_CATEGORY)
<android.widget.AbsListView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<android.content.Intent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.settings.net.NetworkPolicyEditor: void setPolicyLimitBytes(android.net.NetworkTemplate,long)> (NO_CATEGORY)
<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)> (NO_CATEGORY)
<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)> (NO_CATEGORY)
<com.android.phone.sip.SipSharedPreferences: void setSipCallOption(java.lang.String)> (NO_CATEGORY)
<java.net.Socket: void setSoLinger(boolean,int)> (NO_CATEGORY)
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])> (NO_CATEGORY)
<libcore.net.http.HttpConnectionPool: void recycle(libcore.net.http.HttpConnection)> (NO_CATEGORY)
<android.widget.TimePicker$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.webkit.HTML5VideoViewProxy: void setBaseLayer(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)> (NO_CATEGORY)
<android.app.Activity: void setIntent(android.content.Intent)> (NO_CATEGORY)
<com.android.uiautomator.core.InteractionController: boolean sendKeyAndWaitForEvent(int,int,int,long)> (NO_CATEGORY)
<java.util.zip.Inflater: void setInput(byte[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setToIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void removeActiveAdmin(android.content.ComponentName,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActivePasswordState(int,int,int,int,int,int,int,int,int)> (NO_CATEGORY)
<java.net.Socket: void setKeepAlive(boolean)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.KeyStylesSet: void parseKeyStyleAttributes(android.content.res.TypedArray,android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void attachEngine(android.service.wallpaper.IWallpaperEngine)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastDisabled(int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.address.Authority: void setHost(gov.nist.core.Host)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEnabled(boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setSystemUiVisibility(int,int)> (NO_CATEGORY)
<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter,java.lang.String,int,int)> (NO_CATEGORY)
<com.android.settings.net.NetworkPolicyEditor: void setPolicyMetered(android.net.NetworkTemplate,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onUnbindMethod(int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void addIdleTimer(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)> (NO_CATEGORY)
<java.util.Random: void setSeed(long)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding: int access$200(int[],byte[],int)> (NO_CATEGORY)
<com.android.browser.Controller$SaveSnapshotTask: void onPostExecute(java.lang.Long)> (NO_CATEGORY)
<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[])> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setPivotX(float)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setCK(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledProtocols(java.lang.String[])> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)> (NO_CATEGORY)
<android.database.ContentObservable: void notifyChange(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityVerify: void setValue(java.lang.String)> (NO_CATEGORY)
<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void settingsRestored()> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)> (NO_CATEGORY)
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: boolean isStreamMute(int)> (NO_CATEGORY)
<android.net.ConnectivityManager: boolean setRadios(boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setString(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.browser.PreloadedTabControl: void setQuery(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setCurrentItemIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setLabelFor(android.view.View,int)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl: void setMenuVisibility(android.app.Fragment,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setHost(java.lang.String)> (NO_CATEGORY)
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])> (NO_CATEGORY)
<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)> (NO_CATEGORY)
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setIcon(int)> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setValue(int,java.lang.String)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,java.lang.String[])> (NO_CATEGORY)
<android.os.Handler: boolean sendMessage(android.os.Message)> (NO_CATEGORY)
<android.webkit.CookieManagerClassic: void setAcceptFileSchemeCookiesImpl(boolean)> (NO_CATEGORY)
<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollY(java.lang.Object,int)> (NO_CATEGORY)
<android.content.IClipboard$Stub$Proxy: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)> (NO_CATEGORY)
<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)> (NO_CATEGORY)
<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setInts(int[])> (NO_CATEGORY)
<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$SoftEntry: void setExpirationTime(long)> (NO_CATEGORY)
<android.view.View$7: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)> (NO_CATEGORY)
<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: void onInputDevicesChanged(int[])> (NO_CATEGORY)
<gov.nist.javax.sip.address.Authority: void setUser(java.lang.String)> (NO_CATEGORY)
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)> (NO_CATEGORY)
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void pitarget(char[],int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)> (NO_CATEGORY)
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.MountService: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<android.widget.AbsSeekBar: boolean performAccessibilityAction(int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.statusbar.StatusBarNotification: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceThrottle(java.lang.String,int,int)> (NO_CATEGORY)
<java.util.concurrent.CopyOnWriteArrayList$CowIterator: void set(java.lang.Object)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeChar(int)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setPort(int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void setCallback(com.android.emailcommon.service.IEmailServiceCallback)> (NO_CATEGORY)
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: boolean injectInputEvent(android.view.InputEvent,int)> (NO_CATEGORY)
<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String,boolean)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setLeft(int)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setCurrentFunction(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)> (NO_CATEGORY)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Accept: void setContentSubType(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.bluetooth.BluetoothInputDevice: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int renameSecureContainer(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findFocus(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setBackgroundColor(int)> (NO_CATEGORY)
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setPositivePrefix(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)> (NO_CATEGORY)
<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)> (NO_CATEGORY)
<android.app.IStopUserCallback$Stub$Proxy: void userStopAborted(int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)> (NO_CATEGORY)
<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceStatusChanged(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void open(long[],int)> (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceClassDataActivityChanged(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputConnectionWrapper: void setSelection(int,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$AppDirObserver: void onEvent(int,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.camera.ui.EffectSettingPopup: void setVisibility(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setHardKeyboardStatus(boolean,boolean)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)> (NO_CATEGORY)
<java.io.PrintStream: void println(char[])> (NO_CATEGORY)
<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (NO_CATEGORY)
<java.security.cert.PKIXParameters: void setDate(java.util.Date)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int setPitch(float)> (NO_CATEGORY)
<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)> (NO_CATEGORY)
<java.net.MulticastSocket: void setLoopbackMode(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)> (NO_CATEGORY)
<android.media.IAudioFocusDispatcher$Stub$Proxy: void dispatchAudioFocusChange(int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setSpellCheckerEnabled(boolean)> (NO_CATEGORY)
<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean setComposingRegion(int,int)> (NO_CATEGORY)
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)> (NO_CATEGORY)
<org.kxml2.io.KXmlParser: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl: void setUserVisibleHint(android.app.Fragment,boolean)> (NO_CATEGORY)
<com.android.server.MountService: int changeEncryptionPassword(java.lang.String)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void aname(char[],int,int)> (NO_CATEGORY)
<com.android.server.display.DisplayDevice: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$1: void setValue(com.android.server.power.DisplayPowerState,float)> (NO_CATEGORY)
<android.support.v4.widget.EdgeEffectCompatIcs: void setSize(java.lang.Object,int,int)> (NO_CATEGORY)
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)> (NO_CATEGORY)
<android.widget.ZoomButtonsController: void setZoomSpeed(long)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLOutputStream: void write(int)> (NO_CATEGORY)
<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.view.GLES20Canvas: void setMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.os.StrictMode$AndroidBlockGuardPolicy: void handleViolation(android.os.StrictMode$ViolationInfo)> (NO_CATEGORY)
<com.android.camera.MenuHelper: void gotoVideoMode(android.app.Activity,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.IInputFilterHost$Stub$Proxy: void sendInputEvent(android.view.InputEvent,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)> (NO_CATEGORY)
<android.os.IUserManager$Stub$Proxy: void setGuestEnabled(boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<android.os.Registrant: void notifyResult(java.lang.Object)> (NO_CATEGORY)
<android.media.AudioManager: void setMasterMute(boolean,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.TargetApplicationGetter: android.content.pm.ApplicationInfo doInBackground(java.lang.String[])> (NO_CATEGORY)
<java.text.MessageFormat: void setFormat(int,java.text.Format)> (NO_CATEGORY)
<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[],java.util.List)> (NO_CATEGORY)
<com.android.browser.NavigationBarBase: void setLock(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void updateStatusIcon(android.os.IBinder,java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: void setMaxScrollY(java.lang.Object,int)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoTimeout(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Replaces: void setFromTag(java.lang.String)> (NO_CATEGORY)
<android.net.http.Headers: void setLocation(java.lang.String)> (NO_CATEGORY)
<android.util.LongSparseArray: void append(long,java.lang.Object)> (NO_CATEGORY)
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.media.MiniThumbFile: android.media.MiniThumbFile instance(android.net.Uri)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceAlert(java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopSensor(int,int)> (NO_CATEGORY)
<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)> (NO_CATEGORY)
<com.android.browser.TabBar$TabView: void dispatchDraw(android.graphics.Canvas)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> (NO_CATEGORY)
<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)> (NO_CATEGORY)
<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)> (NO_CATEGORY)
<android.hardware.SerialManager: android.hardware.SerialPort openSerialPort(java.lang.String,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.CommandQueue$H: void handleMessage(android.os.Message)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void setResponseTags(gov.nist.javax.sip.message.SIPResponse)> (NO_CATEGORY)
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)> (NO_CATEGORY)
<android.os.PowerManager: void setBacklightBrightness(int)> (NO_CATEGORY)
<com.android.server.NotificationManagerService: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)> (NO_CATEGORY)
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setCurrency(java.util.Currency)> (NO_CATEGORY)
<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int,boolean)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreSetsAvailable(android.app.backup.RestoreSet[])> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String)> (NO_CATEGORY)
<java.io.File: boolean setLastModified(long)> (NO_CATEGORY)
<android.app.Activity: void setFeatureDrawableResource(int,int)> (NO_CATEGORY)
<android.os.RemoteCallback$LocalCallback: void sendResult(android.os.Bundle)> (NO_CATEGORY)
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putInt(int)> (NO_CATEGORY)
<com.android.server.MountService: int verifyEncryptionPassword(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: void installCertificate(java.security.cert.X509Certificate)> (NO_CATEGORY)
<java.util.Vector: void setElementAt(java.lang.Object,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setPermissionEnforced(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.os.RemoteCallback: void sendResult(android.os.Bundle)> (NO_CATEGORY)
<java.lang.StringBuffer: void setCharAt(int,char)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)> (NO_CATEGORY)
<android.content.ContentValues: void putNull(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)> (NO_CATEGORY)
<com.android.providers.settings.SettingsBackupAgent$WifiNetworkSettings: void write(java.io.Writer)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)> (NO_CATEGORY)
<android.preference.MultiCheckPreference: void setValues(boolean[])> (NO_CATEGORY)
<com.android.server.NsdService: void setEnabled(boolean)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])> (NO_CATEGORY)
<android.app.SharedPreferencesImpl: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)> (NO_CATEGORY)
<android.net.DummyDataStateTracker: void setUserDataEnable(boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)> (NO_CATEGORY)
<com.android.systemui.statusbar.BaseStatusBar: boolean expandView(com.android.systemui.statusbar.NotificationData$Entry,boolean)> (NO_CATEGORY)
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setCurrentClientId(int,android.app.PendingIntent,boolean)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChanged(int[],int)> (NO_CATEGORY)
<com.android.music.MusicUtils$FastBitmapDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.view.GLES20Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)> (NO_CATEGORY)
<android.os.DropBoxManager$Entry: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setStreamMute(int,boolean,android.os.IBinder)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void performContextMenuAction(int)> (NO_CATEGORY)
<android.os.Bundle: void putLongArray(java.lang.String,long[])> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setTransparentRegionWindow(com.android.server.wm.Session,android.view.IWindow,android.graphics.Region)> (NO_CATEGORY)
<java.util.Date: void setHours(int)> (NO_CATEGORY)
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.service.IPolicyService$Stub$Proxy: void setAccountHoldFlag(long,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setDefaultInterfaceForDns(java.lang.String)> (NO_CATEGORY)
<android.media.MediaPlayer: boolean setParameter(int,int)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub$Proxy: long calculateDirectorySize(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> (NO_CATEGORY)
<android.os.storage.StorageManager$MountServiceBinderListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.res.XmlBlock$Parser: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)> (NO_CATEGORY)
<com.android.internal.os.IDropBoxManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.AbsSeekBar: void setMax(int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setUserActivityTimeoutOverrideFromWindowManager(long)> (NO_CATEGORY)
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitleOptionalHint(boolean)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setVisibility(boolean)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayUseLogoEnabled(boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putShort(int,short)> (NO_CATEGORY)
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void notify(int)> (NO_CATEGORY)
<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints: void setKeyboardGeometry(int)> (NO_CATEGORY)
<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)> (NO_CATEGORY)
<com.android.browser.NavigationBarBase: void setCurrentUrlIsBookmark(boolean)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)> (NO_CATEGORY)
<android.graphics.Path: void setLastPoint(float,float)> (NO_CATEGORY)
<libcore.io.Streams: java.lang.String readFully(java.io.Reader)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)> (NO_CATEGORY)
<android.media.IMediaScannerListener$Stub$Proxy: void scanCompleted(java.lang.String,android.net.Uri)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setState(int)> (NO_CATEGORY)
<com.google.common.base.Predicates$CompositionPredicate: boolean apply(java.lang.Object)> (NO_CATEGORY)
<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.camera.CameraSettings: boolean setCameraPictureSize(java.lang.String,java.util.List,android.hardware.Camera$Parameters)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> (NO_CATEGORY)
<android.graphics.Region: boolean set(android.graphics.Rect)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)> (NO_CATEGORY)
<android.media.AudioService: void setBluetoothScoOn(boolean)> (NO_CATEGORY)
<java.io.File: boolean setExecutable(boolean)> (NO_CATEGORY)
<android.filterfw.core.FilterContext: android.filterfw.core.Frame fetchFrame(java.lang.String)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setDebugEnabled(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setPhoneNumber(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setTransport(java.lang.String)> (NO_CATEGORY)
<com.android.phone.PhoneUtils$ConnectionHandler: void handleMessage(android.os.Message)> (NO_CATEGORY)
<android.net.http.Headers: void setExpires(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewCore: void access$6700(android.webkit.WebViewCore,java.io.OutputStream,android.webkit.ValueCallback)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setStrictModeVisualIndicatorPreference(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AcceptLanguage: void setAcceptLanguage(java.util.Locale)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void hostChanged(long)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setSerialNumber(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)> (NO_CATEGORY)
<com.android.server.LightsService$Light: void setBrightness(int)> (NO_CATEGORY)
<java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopGps(int)> (NO_CATEGORY)
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])> (NO_CATEGORY)
<android.media.AudioManager: void setRingerMode(int)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)> (NO_CATEGORY)
<com.android.inputmethod.compat.CompatUtils: void setFieldValue(java.lang.Object,java.lang.reflect.Field,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setParcelableData(java.lang.Object,android.os.Parcelable)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)> (NO_CATEGORY)
<com.android.inputmethod.latin.SettingsValues: void setLastUserHistoryWriteTime(android.content.SharedPreferences,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)> (NO_CATEGORY)
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)> (NO_CATEGORY)
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)> (NO_CATEGORY)
<java.text.BreakIterator: void setText(java.lang.String)> (NO_CATEGORY)
<android.widget.NumberPicker: void setEnabled(boolean)> (NO_CATEGORY)
<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.HTMLScanner: void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setUidNetworkRules(int,boolean)> (NO_CATEGORY)
<java.io.OutputStream: void write(byte[])> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTcpNoDelay(boolean)> (NO_CATEGORY)
<java.nio.BaseByteBuffer: java.nio.ByteBuffer putChar(char)> (NO_CATEGORY)
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void wakeUp(long)> (NO_CATEGORY)
<com.android.phone.NotificationMgr: void notifyMissedCall(java.lang.String,java.lang.String,java.lang.String,android.graphics.drawable.Drawable,android.graphics.Bitmap,long)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> (NO_CATEGORY)
<com.android.org.bouncycastle.util.Strings: void toUTF8ByteArray(char[],java.io.OutputStream)> (NO_CATEGORY)
<android.widget.DatePicker: void setMaxDate(long)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumTimeToLock(android.content.ComponentName,long,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$JBViewCompatImpl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<libcore.net.UriCodec: java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean)> (NO_CATEGORY)
<com.android.internal.os.AndroidPrintStream: void log(java.lang.String)> (NO_CATEGORY)
<java.net.Socket: void sendUrgentData(int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void grantDevicePermission(android.hardware.usb.UsbDevice,int)> (NO_CATEGORY)
<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)> android.permission.VIBRATE (NO_CATEGORY)
<android.media.AudioService: void setRemoteSubmixOn(boolean,int)> (NO_CATEGORY)
<android.net.INetworkPolicyListener$Stub$Proxy: void onMeteredIfacesChanged(java.lang.String[])> (NO_CATEGORY)
<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> (NO_CATEGORY)
<android.location.Location: void setExtraLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<android.animation.ObjectAnimator: void setFloatValues(float[])> (NO_CATEGORY)
<java.net.Socket: void setReceiveBufferSize(int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)> (NO_CATEGORY)
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)> (NO_CATEGORY)
<java.util.Properties: void store(java.io.Writer,java.lang.String)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.NodeImpl: void setPrefix(java.lang.String)> (NO_CATEGORY)
<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,int,int)> (NO_CATEGORY)
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)> (NO_CATEGORY)
<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setScanOnlyMode(boolean)> (NO_CATEGORY)
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void adjustStreamVolume(int,int,int)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperService$Stub$Proxy: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setValue(java.lang.String)> (NO_CATEGORY)
<android.os.UserManager: void setUserName(int,java.lang.String)> (NO_CATEGORY)
<android.net.EthernetDataTracker: void setDependencyMet(boolean)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setTemporaryScreenBrightnessSettingOverride(int)> (NO_CATEGORY)
<android.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)> (NO_CATEGORY)
<com.android.camera.Storage: android.net.Uri addImage(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,byte[],int,int)> (NO_CATEGORY)
<java.math.BigInteger: java.math.BigInteger setBit(int)> (NO_CATEGORY)
<android.app.LoadedApk$WarningContextClassLoader: void setDefaultAssertionStatus(boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: void setShowAsAction(int)> (NO_CATEGORY)
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.location.IGpsStatusListener$Stub$Proxy: void onNmeaReceived(long,java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setJsFlags(java.lang.String)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])> (NO_CATEGORY)
<org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBase64(java.lang.String)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)> (NO_CATEGORY)
<gov.nist.core.ParserCore: void dbg_leave(java.lang.String)> (NO_CATEGORY)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void gi(char[],int,int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void setLogging(int)> (NO_CATEGORY)
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setURI(int,java.lang.String)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setBounds(int,int,int,int)> (NO_CATEGORY)
<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[],int,int)> (NO_CATEGORY)
<java.security.SecureRandom: void setSeed(byte[])> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setAutoExposureLock(boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextBeforeCursor(java.lang.CharSequence,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setParcelableData(java.lang.Object,android.os.Parcelable)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void deleteSurroundingText(int,int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<java.net.DatagramSocket: void setTrafficClass(int)> (NO_CATEGORY)
<org.apache.commons.logging.LogFactory: void logRawDiagnostic(java.lang.String)> (NO_CATEGORY)
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)> (NO_CATEGORY)
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)> (NO_CATEGORY)
<android.graphics.Bitmap: void setHasAlpha(boolean)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void allowUsbDebugging(boolean,java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHostAddress(int,byte[])> (NO_CATEGORY)
<android.os.RegistrantList: void notifyException(java.lang.Throwable)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.References: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setMetadata(int,android.os.Bundle)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void removePackageFromPreferred(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)> (NO_CATEGORY)
<android.preference.Preference: void notifyDependencyChange(boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void dragRecipientEntered(android.view.IWindow)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setColors(int[])> (NO_CATEGORY)
<org.apache.harmony.xml.dom.NodeImpl: void setNodeValue(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[])> (NO_CATEGORY)
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)> (NO_CATEGORY)
<android.graphics.drawable.LayerDrawable: void setLayoutDirection(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setNonceCount(int)> (NO_CATEGORY)
<android.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)> (NO_CATEGORY)
<com.google.common.collect.TreeMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void killApplicationWithAppId(java.lang.String,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setProtocolVersion(java.lang.String)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void setPolicyDataEnable(int,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)> android.permission.DISABLE_KEYGUARD (NO_CATEGORY)
<com.android.deskclock.AlarmPreference: void onSaveRingtone(android.net.Uri)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPRequest: void setSIPVersion(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setP2pGroupIdle(java.lang.String,int)> (NO_CATEGORY)
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[])> (NO_CATEGORY)
<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)> (NO_CATEGORY)
<android.widget.LinearLayout: void setHorizontalGravity(int)> (NO_CATEGORY)
<gov.nist.core.NameValue: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setMaxScrollX(java.lang.Object,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.widget.AbsSpinner: void setSelection(int,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)> (NO_CATEGORY)
<java.lang.reflect.Field: void setByte(java.lang.Object,byte)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void finishedEvent(int,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Reason: void setText(java.lang.String)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setStorageEncryption(android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int loadLanguage(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.nsd.INsdManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)> (NO_CATEGORY)
<java.io.PrintStream: void println(java.lang.Object)> (NO_CATEGORY)
<android.webkit.OverScrollGlow: boolean drawEdgeGlows(android.graphics.Canvas)> (NO_CATEGORY)
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)> (NO_CATEGORY)
<android.widget.Spinner: void setDropDownHorizontalOffset(int)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.media.AudioManager: void setParameters(java.lang.String)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)> (NO_CATEGORY)
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)> (NO_CATEGORY)
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PanelBar: void setPanelHolder(com.android.systemui.statusbar.phone.PanelHolder)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartSensor(int,int)> (NO_CATEGORY)
<android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate: void sendDisplayEvent(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setAccessibilityFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<java.nio.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoLinger(boolean,int)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)> (NO_CATEGORY)
<android.widget.Toast: void setText(int)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: boolean bindWallpaperComponentLocked(android.content.ComponentName,boolean,boolean,com.android.server.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setRemoteStreamVolume(int)> (NO_CATEGORY)
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)> (NO_CATEGORY)
<android.app.DownloadManager$Request: android.app.DownloadManager$Request setShowRunningNotification(boolean)> (NO_CATEGORY)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)> (NO_CATEGORY)
<com.google.common.collect.Multisets$UnmodifiableMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void statusBarVisibilityChanged(int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: boolean addPermission(android.content.pm.PermissionInfo)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void setBindAppWidgetPermission(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.providers.downloads.RealSystemFacade: void sendBroadcast(android.content.Intent)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setExpirationAlarmCheckLocked(android.content.Context,com.android.server.DevicePolicyManagerService$DevicePolicyData)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.Writer)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: void setUidPolicy(int,int)> (NO_CATEGORY)
<com.android.internal.view.IInputConnectionWrapper: void setComposingRegion(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFromIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.webkit.ViewStateSerializer: boolean serializeViewState(java.io.OutputStream,android.webkit.WebViewCore$DrawData)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)> (NO_CATEGORY)
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)> (NO_CATEGORY)
<gov.nist.javax.sip.header.RetryAfter: void setDuration(int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setPostDial(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setPortServer(int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void updateRotationUnchecked(boolean,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)> (NO_CATEGORY)
<com.android.deskclock.RepeatPreference: void setDaysOfWeek(com.android.deskclock.Alarm$DaysOfWeek)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)> (NO_CATEGORY)
<android.webkit.CookieManager: void setAcceptCookie(boolean)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHost(int,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPictureFormat(int)> (NO_CATEGORY)
<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceQuota(java.lang.String,long)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setDriverStart(boolean,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setActive(boolean)> (NO_CATEGORY)
<com.android.phone.CallFeaturesSetting$3: void handleMessage(android.os.Message)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: void alert(byte,byte)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: void addBigram(java.lang.String,java.lang.String,byte)> (NO_CATEGORY)
<com.android.browser.NavigationBarBase: void onAction(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.browser.PhoneUi$AnimScreen: void set(com.android.browser.TitleBar,android.webkit.WebView)> (NO_CATEGORY)
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(char[],int,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.music.AudioPreview$PreviewPlayer: void setDataSourceAndPrepare(android.net.Uri)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> (NO_CATEGORY)
<android.os.StrictMode: void onVmPolicyViolation(java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setCNonce(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledProtocols(java.lang.String[])> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallUidRule(int,boolean)> (NO_CATEGORY)
<android.app.ActivityManager$RecentTaskInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void updateAppWidget(int,android.widget.RemoteViews)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.AttrImpl: void setPrefix(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.address.Authority: void setPort(int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(libcore.icu.LocaleData)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setIsdnSubAddress(java.lang.String)> (NO_CATEGORY)
<android.app.Activity: void setProgressBarVisibility(boolean)> (NO_CATEGORY)
<android.app.Activity: void setFeatureDrawableAlpha(int,int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setConfigMethods(java.lang.String)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(char[],java.io.Writer)> (NO_CATEGORY)
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)> (NO_CATEGORY)
<android.os.IUserManager$Stub$Proxy: void wipeUser(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: void setHostAddress(java.lang.String)> (NO_CATEGORY)
<com.android.phone.OtaUtils: void setupOtaspCall(android.content.Intent)> (NO_CATEGORY)
<android.app.Activity: void setTitle(int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showMySoftInput(android.os.IBinder,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateSelection(int,int,int,int,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)> (NO_CATEGORY)
<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void nap(long)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setDoubleTapZoom(int)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)> (NO_CATEGORY)
<android.net.TrafficStats: void setThreadStatsUid(int)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.os.IMessenger$Stub$Proxy: void send(android.os.Message)> (NO_CATEGORY)
<android.inputmethodservice.SoftInputWindow: void setSize(int)> (NO_CATEGORY)
<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Integer set(int,java.lang.Integer)> (NO_CATEGORY)
<com.android.inputmethod.latin.suggestions.SuggestionStripView: int setMoreSuggestionsHeight(int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void finishInput(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<android.media.AudioService: void setRingerMode(int)> (NO_CATEGORY)
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle open(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<com.android.phone.CallFeaturesSetting: void onActivityResult(int,int,android.content.Intent)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)> (NO_CATEGORY)
<com.android.server.display.DisplayManagerService: void registerCallback(android.hardware.display.IDisplayManagerCallback)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void setFrequencyBand(int,boolean)> (NO_CATEGORY)
<android.widget.GridLayout: void setColumnCount(int)> (NO_CATEGORY)
<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)> (NO_CATEGORY)
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setContentWidth(int)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setSize(int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)> (NO_CATEGORY)
<com.android.server.NsdService$NativeCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])> (NO_CATEGORY)
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)> (NO_CATEGORY)
<libcore.net.http.RetryableOutputStream: void writeToSocket(java.io.OutputStream)> (NO_CATEGORY)
<org.apache.james.mime4j.field.ContentTypeField$Parser: org.apache.james.mime4j.field.Field parse(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.util.Date: void setMonth(int)> (NO_CATEGORY)
<android.net.LinkCapabilities: void put(int,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReceiveBufferSize(int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClear(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeByte(int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setInputMethodEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String)> (NO_CATEGORY)
<android.widget.Spinner: void setDropDownVerticalOffset(int)> (NO_CATEGORY)
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)> (NO_CATEGORY)
<android.inputmethodservice.SoftInputWindow: void setGravity(int)> (NO_CATEGORY)
<android.content.ContentProvider$Transport: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> (NO_CATEGORY)
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)> (NO_CATEGORY)
<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.wm.InputMonitor: void setFocusedAppLw(com.android.server.wm.AppWindowToken)> (NO_CATEGORY)
<com.android.browser.Controller: void updateMenuState(com.android.browser.Tab,android.view.Menu)> (NO_CATEGORY)
<java.io.PrintWriter: void write(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void addWindowToken(android.os.IBinder,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setInitialScale(int)> (NO_CATEGORY)
<android.media.IRingtonePlayer$Stub$Proxy: void playAsync(android.net.Uri,android.os.UserHandle,boolean,int)> (NO_CATEGORY)
<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)> (NO_CATEGORY)
<com.android.browser.SnapshotTab: boolean saveViewState(android.content.ContentValues)> (NO_CATEGORY)
<android.widget.RemoteViews$OnClickHandler: boolean onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)> (NO_CATEGORY)
<android.content.IContentService$Stub$Proxy: void unregisterContentObserver(android.database.IContentObserver)> (NO_CATEGORY)
<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])> (NO_CATEGORY)
<java.io.ObjectOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.server.wm.DragState: void notifyMoveLw(float,float)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)> (NO_CATEGORY)
<android.hardware.ISerialManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PCalledPartyID: void setValue(java.lang.String)> (NO_CATEGORY)
<android.widget.DatePicker$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setCurrentUser(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Replaces: void setToTag(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> (NO_CATEGORY)
<android.media.AudioManager: void setBluetoothScoOn(boolean)> (NO_CATEGORY)
<android.view.View$11: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void disable(int)> (NO_CATEGORY)
<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setNegativePrefix(java.lang.String)> (NO_CATEGORY)
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])> (NO_CATEGORY)
<java.security.KeyStore: void setKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)> (NO_CATEGORY)
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)> (NO_CATEGORY)
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)> (NO_CATEGORY)
<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setMaximumIntegerDigits(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAssertedService: void setSubserviceIdentifiers(java.lang.String)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void setBindAppWidgetPermission(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.LocalSocketImpl: void sendUrgentData(int)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setQName(int,java.lang.String)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: long seek(long)> (NO_CATEGORY)
<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean prepareVpn(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: void setKeyguardCallback(com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback)> (NO_CATEGORY)
<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)> (NO_CATEGORY)
<com.android.camera.RotateDialogController: void setOrientation(int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordQuality(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)> (NO_CATEGORY)
<android.app.Dialog: void setVolumeControlStream(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.Privacy: void setValue(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)> (NO_CATEGORY)
<android.util.Slog: int println(int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPMessage: void setCallId(java.lang.String)> (NO_CATEGORY)
<gov.nist.core.NameValueList: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)> (NO_CATEGORY)
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (NO_CATEGORY)
<java.util.BitSet: void set(int,int)> (NO_CATEGORY)
<libcore.net.http.AbstractHttpInputStream: void cacheWrite(byte[],int,int)> (NO_CATEGORY)
<android.preference.TwoStatePreference: void setSummaryOn(int)> (NO_CATEGORY)
<com.android.providers.contacts.ProfileProvider: void notifyChange(boolean)> (NO_CATEGORY)
<com.android.browser.widget.BookmarkThumbnailWidgetService: void setupWidgetState(android.content.Context,int,long)> (NO_CATEGORY)
<com.android.server.MountService: void setUsbMassStorageEnabled(boolean)> (NO_CATEGORY)
<com.android.server.dreams.DreamManagerService: void setDreamComponents(android.content.ComponentName[])> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)> (NO_CATEGORY)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)> (NO_CATEGORY)
<android.view.View$6: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine$SupplicantStartedState: boolean processMessage(android.os.Message)> (NO_CATEGORY)
<android.app.IActivityController$Stub$Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<android.os.storage.IMountShutdownObserver$Stub$Proxy: void onShutDownComplete(int)> (NO_CATEGORY)
<java.lang.System: void setOut(java.io.PrintStream)> (NO_CATEGORY)
<android.os.Bundle: void putFloat(java.lang.String,float)> (NO_CATEGORY)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.media.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)> (NO_CATEGORY)
<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)> (NO_CATEGORY)
<android.app.IUiModeManager$Stub$Proxy: void disableCarMode(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.view.Surface: void setMatrix(float,float,float,float)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setWfdEnable(boolean)> (NO_CATEGORY)
<android.view.ViewRootImpl$ViewRootHandler: void handleMessage(android.os.Message)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: void sendBye(javax.sip.Dialog)> (NO_CATEGORY)
<com.android.settings.bluetooth.PbapServerProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<java.util.HashSet: boolean add(java.lang.Object)> (NO_CATEGORY)
<android.widget.TabWidget: void setRightStripDrawable(int)> (NO_CATEGORY)
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)> (NO_CATEGORY)
<android.os.SELinux: boolean restorecon(java.io.File)> (NO_CATEGORY)
<android.media.ToneGenerator: boolean startTone(int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultimap: boolean putAll(com.google.common.collect.Multimap)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setCNonce(java.lang.String)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)> (NO_CATEGORY)
<com.android.browser.BaseUi: void setFullscreen(boolean)> (NO_CATEGORY)
<android.media.AudioService$VolumeStreamState: void setLastAudibleIndex(int,int)> (NO_CATEGORY)
<android.app.Dialog: void setTitle(int)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: boolean hasDefaults(java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.NotificationData$Entry: boolean setUserExpanded(boolean)> (NO_CATEGORY)
<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.animation.Keyframe$FloatKeyframe: void setValue(java.lang.Object)> (NO_CATEGORY)
<java.io.Writer: java.io.Writer append(char)> (NO_CATEGORY)
<android.text.method.ArrowKeyMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)> (NO_CATEGORY)
<android.preference.MultiCheckPreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.browser.homepages.Template: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setOOBInline(boolean)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.browser.NavigationBarBase: void setFocusState(boolean)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap$Builder: com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeUTF(java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: void addForkedClientTransaction(gov.nist.javax.sip.stack.SIPClientTransaction)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplaySize(int)> (NO_CATEGORY)
<android.content.IIntentReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> (NO_CATEGORY)
<android.app.Activity: void setProgress(int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void sendMessageStatus(long,java.lang.String,int,int)> (NO_CATEGORY)
<com.android.exchange.EasOutboxService: int sendMessage(java.io.File,long)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setAnimationStyle(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.hardware.display.IDisplayManager$Stub$Proxy: void forgetWifiDisplay(java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpWindowsLocked(java.io.PrintWriter,boolean,java.util.ArrayList)> (NO_CATEGORY)
<com.android.vcard.VCardProperty: void addParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(byte[],java.io.Writer,java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setRotation(float)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelToast(java.lang.String,android.app.ITransientNotification)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAdminActive(android.content.ComponentName,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFullScreen(java.lang.Object,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)> (NO_CATEGORY)
<android.graphics.Paint: void set(android.graphics.Paint)> (NO_CATEGORY)
<android.webkit.WebIconDatabaseClassic: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)> (NO_CATEGORY)
<android.graphics.Matrix: void setSinCos(float,float)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReuseAddress(boolean)> (NO_CATEGORY)
<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(android.animation.Animator)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)> (NO_CATEGORY)
<android.util.Slog: int e(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenBrightness(int)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$2: void setValue(com.android.server.power.DisplayPowerState,int)> (NO_CATEGORY)
<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginFailed(long)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setFrequencyBand(int,boolean)> (NO_CATEGORY)
<android.util.TypedValue: void setTo(android.util.TypedValue)> (NO_CATEGORY)
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.location.ICountryDetector$Stub$Proxy: void removeCountryListener(android.location.ICountryListener)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpOn(boolean)> (NO_CATEGORY)
<java.lang.System: void setIn(java.io.InputStream)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setCurrentClientId(int,android.app.PendingIntent,boolean)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$PhotonicModulator: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.widget.Switch: void setThumbResource(int)> (NO_CATEGORY)
<android.app.Instrumentation: void sendStringSync(java.lang.String)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)> (NO_CATEGORY)
<com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)> (NO_CATEGORY)
<android.graphics.Path: void set(android.graphics.Path)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setGpsAltitude(double)> (NO_CATEGORY)
<android.media.AudioManager: void setSpeakerphoneOn(boolean)> (NO_CATEGORY)
<android.content.Intent: void setSourceBounds(android.graphics.Rect)> (NO_CATEGORY)
<android.os.storage.StorageVolume: void setStorageId(int)> (NO_CATEGORY)
<android.nfc.INfcAdapter$Stub$Proxy: void setNdefPushCallback(android.nfc.INdefPushCallback)> (NO_CATEGORY)
<com.android.server.display.DisplayManagerService: void setDisplayInfoOverrideFromWindowManager(int,android.view.DisplayInfo)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int close(int)> (NO_CATEGORY)
<com.android.server.MountService: int decryptStorage(java.lang.String)> (NO_CATEGORY)
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setFirewallEgressSourceRule(java.lang.String,boolean)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)> (NO_CATEGORY)
<java.io.RandomAccessFile: void write(byte[],int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPMessage: void setToTag(java.lang.String)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void disableIpv6(java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setUserRotationMode(int,int)> (NO_CATEGORY)
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)> (NO_CATEGORY)
<android.net.sip.ISipSession$Stub$Proxy: void changeCall(java.lang.String,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setGpsLatitude(double)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void removeUser(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void removeAppToken(android.os.IBinder)> (NO_CATEGORY)
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)> (NO_CATEGORY)
<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setSelection(int,int)> (NO_CATEGORY)
<org.apache.http.message.AbstractHttpMessage: void setHeaders(org.apache.http.Header[])> (NO_CATEGORY)
<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void setDimensionHints(int,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.RichInputConnection: void setComposingText(java.lang.CharSequence,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.NotificationRowLayout: boolean setUserLockedChild(android.view.View,boolean)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void loadMore(long)> (NO_CATEGORY)
<com.android.server.MountService: boolean isSecureContainerMounted(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.Logger$Stream: void println(java.lang.String)> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setType(int,java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)> (NO_CATEGORY)
<com.android.internal.location.ILocationProvider$Stub$Proxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)> (NO_CATEGORY)
<com.android.camera.ModePicker: void setOrientation(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)> (NO_CATEGORY)
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.filterfw.core.NativeFrame: void setInts(int[])> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<android.os.Bundle: void putString(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1BitString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])> (NO_CATEGORY)
<com.android.emailcommon.internet.BinaryTempFileBody: void setFile(java.lang.String)> (NO_CATEGORY)
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)> (NO_CATEGORY)
<java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> (NO_CATEGORY)
<gov.nist.javax.sip.DialogFilter: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> (NO_CATEGORY)
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])> (NO_CATEGORY)
<android.webkit.WebView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserBinaryDictionary: void addWordToUserDictionary(java.lang.String,int)> (NO_CATEGORY)
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<java.util.EnumMap$Entry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<com.android.server.AlarmManagerService: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendOptions(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setScanResultHandling(int)> (NO_CATEGORY)
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.preference.PreferenceGroup: void setEnabled(boolean)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)> (NO_CATEGORY)
<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)> (NO_CATEGORY)
<android.view.IDisplayContentChangeListener$Stub$Proxy: void onRotationChanged(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void writeToParcelWithoutUids(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.http.message.HeaderGroup: void setHeaders(org.apache.http.Header[])> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<android.content.pm.IPackageDataObserver$Stub$Proxy: void onRemoveCompleted(java.lang.String,boolean)> (NO_CATEGORY)
<com.google.common.collect.ForwardingMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: boolean performAction(java.lang.Object,int,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.SipProviderImpl: void sendRequest(javax.sip.message.Request)> (NO_CATEGORY)
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)> (NO_CATEGORY)
<com.android.phone.EditPhoneNumberPreference: com.android.phone.EditPhoneNumberPreference setSummaryOn(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setParcelableData(java.lang.Object,android.os.Parcelable)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)> (NO_CATEGORY)
<com.android.inputmethod.latin.ExpandableDictionary: int setBigramAndGetFrequency(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager$CacheResult)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.CommandQueue: void setSystemUiVisibility(int,int)> (NO_CATEGORY)
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource)> (NO_CATEGORY)
<android.webkit.WebViewClassic$PackageListener: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Media: void setEncryption(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.phone.PhoneInterfaceManager: boolean setRadio(boolean)> (NO_CATEGORY)
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)> (NO_CATEGORY)
<android.app.UiModeManager: void setNightMode(int)> (NO_CATEGORY)
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setCurrentClientId(int,android.app.PendingIntent,boolean)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setTextureParameter(int,int)> (NO_CATEGORY)
<android.media.MediaPlayer: void setVideoScalingMode(int)> (NO_CATEGORY)
<java.util.Date: void setMinutes(int)> (NO_CATEGORY)
<libcore.icu.CollationElementIteratorICU: void setOffset(int)> (NO_CATEGORY)
<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)> android.permission.WAKE_LOCK (NO_CATEGORY)
<java.io.PrintWriter: void println(double)> (NO_CATEGORY)
<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPMessage: void setFromTag(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setSelectedText(java.lang.CharSequence,int)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<libcore.io.ForwardingOs: java.io.FileDescriptor open(java.lang.String,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)> (NO_CATEGORY)
<android.app.SearchManager: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)> (NO_CATEGORY)
<android.content.ContextWrapper: void setTheme(int)> (NO_CATEGORY)
<android.net.INetworkStatsService$Stub$Proxy: void advisePersistThreshold(long)> (NO_CATEGORY)
<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: void onServiceConnected(android.os.IBinder)> (NO_CATEGORY)
<com.android.server.am.ActivityRecord: void setSleeping(boolean)> (NO_CATEGORY)
<android.graphics.RectF: void set(android.graphics.RectF)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setFocusedApp(android.os.IBinder,boolean)> (NO_CATEGORY)
<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer text(java.lang.String)> (NO_CATEGORY)
<java.net.DatagramSocket: void send(java.net.DatagramPacket)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)> (NO_CATEGORY)
<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setDomain(java.lang.String)> (NO_CATEGORY)
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (NO_CATEGORY)
<com.android.browser.view.PieItem: void setAlpha(float)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setUriParameter(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setGroupingSize(int)> (NO_CATEGORY)
<com.android.phone.DTMFTwelveKeyDialer: void setDialpadContext(java.lang.String)> (NO_CATEGORY)
<android.graphics.Canvas: void setViewport(int,int)> (NO_CATEGORY)
<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)> (NO_CATEGORY)
<com.android.server.ConnectivityService$2: void onUidRulesChanged(int,int)> (NO_CATEGORY)
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)> (NO_CATEGORY)
<com.android.server.wm.Session: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setCheckable(java.lang.Object,boolean)> (NO_CATEGORY)
<java.net.Socket: void setSoTimeout(int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setModelNumber(java.lang.String)> (NO_CATEGORY)
<android.webkit.ZoomManager: boolean startZoomAnimation(float,boolean)> (NO_CATEGORY)
<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: void bind(java.net.SocketAddress)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String)> (NO_CATEGORY)
<android.hardware.SystemSensorManager$ListenerDelegate: void addSensor(android.hardware.Sensor)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setCurrentUserLw(int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)> (NO_CATEGORY)
<android.location.LocationRequest: android.location.LocationRequest setExpireIn(long)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])> (NO_CATEGORY)
<android.preference.Preference: boolean persistBoolean(boolean)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: boolean writeStateToFileLocked(java.io.FileOutputStream)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setSubtype(android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<android.view.View$6: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.net.wifi.WifiStateTracker: void setDependencyMet(boolean)> (NO_CATEGORY)
<android.location.ICountryDetector$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<com.android.vcard.VCardUtils$QuotedPrintableCodecPort: byte[] decodeQuotedPrintable(byte[])> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> (NO_CATEGORY)
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)> (NO_CATEGORY)
<java.io.PrintStream: void println(boolean)> (NO_CATEGORY)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setInTouchMode(boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: boolean performHapticFeedback(android.view.IWindow,int,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)> (NO_CATEGORY)
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)> (NO_CATEGORY)
<gov.nist.javax.sip.header.RAck: void setCSeqNumber(int)> (NO_CATEGORY)
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int unmountSecureContainer(java.lang.String,boolean)> (NO_CATEGORY)
<android.location.LocationManager: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)> android.permission.WAKE_LOCK (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int synthesizeToFile(android.os.IBinder,java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.webkit.FindActionModeCallback: void setText(java.lang.String)> (NO_CATEGORY)
<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)> (NO_CATEGORY)
<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void aval(char[],int,int)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: void sendReferNotify(javax.sip.Dialog,java.lang.String)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setMetadata(int,android.os.Bundle)> (NO_CATEGORY)
<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setPositiveSuffix(java.lang.String)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelNotificationWithTag(java.lang.String,java.lang.String,int,int)> (NO_CATEGORY)
<android.app.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTrafficClass(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)> (NO_CATEGORY)
<org.apache.http.message.AbstractHttpMessage: void setHeader(org.apache.http.Header)> (NO_CATEGORY)
<com.android.internal.widget.ActionBarView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)> (NO_CATEGORY)
<com.android.server.MountService: int encryptStorage(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)> (NO_CATEGORY)
<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setMethodParam(java.lang.String)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditText: void setCursorPosition_internal(int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)> (NO_CATEGORY)
<java.io.PrintWriter: void println(char[])> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor createMessageProcessor(java.net.InetAddress,int,java.lang.String)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<com.android.camera.ui.IndicatorControlWheelContainer: void enableZoom(boolean)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openDevice(java.lang.String)> (NO_CATEGORY)
<android.os.StrictMode$ViolationInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)> (NO_CATEGORY)
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: boolean sendKeyEvent(android.view.KeyEvent)> (NO_CATEGORY)
<com.android.internal.view.RotationPolicy: void setRotationLock(android.content.Context,boolean)> (NO_CATEGORY)
<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)> android.permission.RECORD_AUDIO (NO_CATEGORY)
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription: void setEncryption(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.LinkedHashMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (NO_CATEGORY)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)> (NO_CATEGORY)
<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationErrorReport$CrashInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatICS: void setAccessibilityDelegate(android.view.View,java.lang.Object)> (NO_CATEGORY)
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub$Proxy: long calculateInstalledSize(java.lang.String,boolean)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)> (NO_CATEGORY)
<android.content.res.XmlBlock$Parser: void setInput(java.io.Reader)> (NO_CATEGORY)
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)> (NO_CATEGORY)
<android.net.ConnectivityManager: boolean setRadio(int,boolean)> (NO_CATEGORY)
<android.app.Instrumentation: void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)> (NO_CATEGORY)
<android.net.DummyDataStateTracker: void setDependencyMet(boolean)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (NO_CATEGORY)
<android.widget.GridLayout: void setRowOrderPreserved(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String selectBackupTransport(java.lang.String)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int speak(android.os.IBinder,java.lang.String,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performGlobalAction(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: boolean performAction(java.lang.Object,int)> (NO_CATEGORY)
<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String[] processName(java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.os.Bundle: void putShortArray(java.lang.String,short[])> (NO_CATEGORY)
<com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver: void onEvent(int,java.lang.String)> (NO_CATEGORY)
<android.os.Bundle: void putByteArray(java.lang.String,byte[])> (NO_CATEGORY)
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void set(java.lang.String,int)> (NO_CATEGORY)
<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.view.ViewRootImpl: boolean performHapticFeedback(int,boolean)> (NO_CATEGORY)
<com.android.server.NotificationManagerService$NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)> (NO_CATEGORY)
<android.widget.OverScroller: void setFinalX(int)> (NO_CATEGORY)
<android.text.style.MetricAffectingSpan$Passthrough: void updateMeasureState(android.text.TextPaint)> (NO_CATEGORY)
<android.app.IUiModeManager$Stub$Proxy: void setNightMode(int)> (NO_CATEGORY)
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)> (NO_CATEGORY)
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)> (NO_CATEGORY)
<android.widget.ImageSwitcher: void setImageResource(int)> (NO_CATEGORY)
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)> (NO_CATEGORY)
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteNetworkInterfaceType(java.lang.String,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void forget(int,android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<com.android.browser.homepages.Template: void assign(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void removeKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.location.ILocationProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.widget.RemoteViews$SetOnClickFillInIntent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)> (NO_CATEGORY)
<android.view.View$11: void setValue(android.view.View,float)> (NO_CATEGORY)
<java.net.AddressCache: void putUnknownHost(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.io.DataOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)> (NO_CATEGORY)
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeInt(int)> (NO_CATEGORY)
<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)> (NO_CATEGORY)
<java.io.FilterOutputStream: void write(int)> (NO_CATEGORY)
<java.io.RandomAccessFile: void setLength(long)> (NO_CATEGORY)
<java.text.RuleBasedBreakIterator: void setText(java.text.CharacterIterator)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void access$200(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)> (NO_CATEGORY)
<android.webkit.WebViewClassic$FocusTransitionDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void setRequiresReload(boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: void setPrefix(java.lang.String)> (NO_CATEGORY)
<android.graphics.Region: boolean set(int,int,int,int)> (NO_CATEGORY)
<com.android.server.IntentResolver: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,boolean)> (NO_CATEGORY)
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PPreferredService: void setSubserviceIdentifiers(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setPersistentReconnect(boolean)> (NO_CATEGORY)
<android.graphics.Paint: void setBidiFlags(int)> (NO_CATEGORY)
<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer opaqueWithoutData(int)> (NO_CATEGORY)
<java.io.PrintWriter: void write(java.lang.String,int,int)> (NO_CATEGORY)
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(android.view.View)> (NO_CATEGORY)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setNeedClientAuth(boolean)> (NO_CATEGORY)
<android.app.ListFragment: void setListShownNoAnimation(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setNetworkType(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.ConnectivityService: boolean setRadios(boolean)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.graphics.Matrix: void setSkew(float,float)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab: void setRightHintText(int)> (NO_CATEGORY)
<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setWantClientAuth(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void saveViewState(java.io.OutputStream,android.webkit.ValueCallback)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void stopListening(int)> (NO_CATEGORY)
<com.google.common.primitives.Booleans$BooleanArrayAsList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)> (NO_CATEGORY)
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)> (NO_CATEGORY)
<com.android.phone.PhoneInterfaceManager: boolean supplyPin(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setVertexCount(int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PMediaAuthorization: void setValue(java.lang.String)> (NO_CATEGORY)
<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setHeader(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.http.impl.auth.DigestScheme: void overrideParamter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])> (NO_CATEGORY)
<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)> (NO_CATEGORY)
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean packageHasActiveAdmins(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceThrottle(java.lang.String,int,int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)> (NO_CATEGORY)
<com.android.exchange.ExchangeService$2: void setLogging(int)> (NO_CATEGORY)
<android.view.Surface: void setSize(int,int)> (NO_CATEGORY)
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager$RegistrationListener)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void addDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)> (NO_CATEGORY)
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<java.text.DecimalFormat: void setParseBigDecimal(boolean)> (NO_CATEGORY)
<com.android.deskclock.Alarm: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onDone(java.lang.String)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendRegister(android.net.sip.SipProfile,java.lang.String,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: void putValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.widget.PopupWindow$PopupViewContainer: void sendAccessibilityEvent(int)> (NO_CATEGORY)
<android.view.Surface: void setFlags(int,int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic$Factory: void setPlatformNotificationsEnabled(boolean)> (NO_CATEGORY)
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpWindowsNoHeaderLocked(java.io.PrintWriter,boolean,java.util.ArrayList)> (NO_CATEGORY)
<org.apache.http.conn.BasicManagedEntity: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setResponse(java.lang.String)> (NO_CATEGORY)
<com.android.internal.location.ILocationProvider$Stub$Proxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)> (NO_CATEGORY)
<com.android.uiautomator.core.InteractionController: boolean sendText(java.lang.String)> (NO_CATEGORY)
<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setSystemUiVisibility(int,int)> (NO_CATEGORY)
<android.os.Bundle: void putAll(android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.SipStackImpl: javax.sip.ListeningPoint createListeningPoint(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setCursorCapsMode(int,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)> (NO_CATEGORY)
<android.net.EthernetDataTracker: void setPolicyDataEnable(boolean)> (NO_CATEGORY)
<android.database.sqlite.SQLiteDatabase$2: boolean accept(java.io.File)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void cancelAllNotifications(java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: void setDebugStream(java.io.PrintStream)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedInputMethod(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewCore: void setMockGeolocationPermission(boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput: void writeDictionaryBinary(java.io.OutputStream,com.android.inputmethod.latin.makedict.FusionDictionary,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setFixedLengthStreamingMode(int)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)> (NO_CATEGORY)
<android.os.PerformanceCollector: void startTiming(java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void adjustVolume(int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager$WifiLock: void setWorkSource(android.os.WorkSource)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect)> (NO_CATEGORY)
<android.graphics.Path: void setFillType(android.graphics.Path$FillType)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: boolean performEditorAction(int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setCaching(boolean)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: void sendInviteAck(javax.sip.ResponseEvent,javax.sip.Dialog)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setCurrentUser(int)> (NO_CATEGORY)
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)> (NO_CATEGORY)
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(int)> (NO_CATEGORY)
<java.util.zip.ZipOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)> (NO_CATEGORY)
<android.app.ApplicationErrorReport$RunningServiceInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<java.io.PrintWriter: void println(java.lang.Object)> (NO_CATEGORY)
<com.google.common.collect.Serialization: void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setRotationY(float)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)> (NO_CATEGORY)
<android.animation.ObjectAnimator: void setIntValues(int[])> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setChangingConfigurations(int)> (NO_CATEGORY)
<android.net.http.Headers: void setContentType(java.lang.String)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void addIdleTimer(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionScaleUp(int,int,int,int)> (NO_CATEGORY)
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)> (NO_CATEGORY)
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)> (NO_CATEGORY)
<android.widget.CompoundButton$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setContentDescription(int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setDefaultInterfaceForDns(java.lang.String)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)> (NO_CATEGORY)
<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActiveAdmin(android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setOOBInline(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingVector: void setValue(java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setPackageStoppedState(java.lang.String,boolean,int)> (NO_CATEGORY)
<com.android.phone.PhoneInterfaceManager: int enableApnType(java.lang.String)> (NO_CATEGORY)
<com.android.music.MusicUtils: void setRingtone(android.content.Context,long)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPort(int)> (NO_CATEGORY)
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.widget.ZoomControls: void setZoomSpeed(long)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeFloat(float)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)> (NO_CATEGORY)
<com.android.phone.sip.SipSharedPreferences: void setReceivingCallsEnabled(boolean)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PServedUser: void setSessionCase(java.lang.String)> (NO_CATEGORY)
<android.view.ViewGroup: void setClipChildren(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setVisibleToUser(java.lang.Object,boolean)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setDesiredSize(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setAccesibilityFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<android.animation.Keyframe$IntKeyframe: void setValue(java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])> (NO_CATEGORY)
<com.android.browser.homepages.Template: void write(java.io.OutputStream)> (NO_CATEGORY)
<com.android.providers.media.IMtpService$Stub$Proxy: void sendObjectRemoved(int)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.CommandQueue: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)> (NO_CATEGORY)
<android.media.AudioManager: void setMode(int)> (NO_CATEGORY)
<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void viewDataChanged(int,int)> (NO_CATEGORY)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setDSLLocation(java.lang.String)> (NO_CATEGORY)
<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.filterfw.core.Frame: void setData(byte[],int,int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.Schema: void entity(java.lang.String,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setMockGeolocationError(int,java.lang.String)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setTransportControlFlags(int,int)> (NO_CATEGORY)
<android.app.Activity: void setSecondaryProgress(int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)> (NO_CATEGORY)
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)> (NO_CATEGORY)
<android.net.wifi.WifiSsid$1: android.net.wifi.WifiSsid createFromParcel(android.os.Parcel)> (NO_CATEGORY)
<android.view.View$4: void setValue(android.view.View,float)> (NO_CATEGORY)
<libcore.io.ForwardingOs: void seteuid(int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.SYSTEM_ALERT_WINDOW (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])> (NO_CATEGORY)
<com.android.vcard.VCardProperty: void setValues(java.lang.String[])> (NO_CATEGORY)
<java.util.WeakHashMap$Entry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,android.net.sip.SipProfile,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)> (NO_CATEGORY)
<android.view.View$12: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager: void setMassStorageBackingFile(java.lang.String)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.media.IRemoteControlClient$Stub$Proxy: void onInformationRequested(int,int,int,int)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartGps(int)> (NO_CATEGORY)
<com.android.server.display.DisplayAdapter: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeDouble(double)> (NO_CATEGORY)
<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)> (NO_CATEGORY)
<gov.nist.core.MultiValueMapImpl: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentLinkedQueue$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedQueue$Node)> (NO_CATEGORY)
<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putDouble(int,double)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean hasSystemFeature(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)> (NO_CATEGORY)
<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)> (NO_CATEGORY)
<com.android.providers.contacts.ContactDirectoryManager: void onPackageChanged(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)> (NO_CATEGORY)
<android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.Dialog: void setFeatureDrawableResource(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setMovementGranularities(java.lang.Object,int)> (NO_CATEGORY)
<java.io.Reader: int read(java.nio.CharBuffer)> (NO_CATEGORY)
<com.android.internal.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.QuickSettings: void setImeWindowStatus(boolean)> (NO_CATEGORY)
<android.media.RemoteControlClient: void setPlaybackInformation(int,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSendBufferSize(int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnableSessionCreation(boolean)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetOptions(int,android.os.Bundle)> (NO_CATEGORY)
<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void setQueuePosition(int)> (NO_CATEGORY)
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setIcon(int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)> (NO_CATEGORY)
<org.apache.http.impl.io.IdentityOutputStream: void write(int)> (NO_CATEGORY)
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,java.io.File)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary$UidDetailTask: void onPostExecute(com.android.settings.net.UidDetail)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeShort(int)> (NO_CATEGORY)
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setScaleY(float)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int destroySecureContainer(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void done(com.android.exchange.AbstractSyncService)> (NO_CATEGORY)
<gov.nist.javax.sip.message.HeaderIterator: void set(java.lang.Object)> (NO_CATEGORY)
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void appPrivateCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.os.IVibratorService$Stub$Proxy: void vibratePattern(long[],int,android.os.IBinder)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setSelection(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAssociatedURI: void setValue(java.lang.String)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onScaleChanged(float,float)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDefaultDisplayHomeAsUpEnabled(boolean)> (NO_CATEGORY)
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer)> (NO_CATEGORY)
<android.media.AudioService$VolumeStreamState: void setAllIndexes(android.media.AudioService$VolumeStreamState,boolean)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: boolean areNotificationsEnabledForPackage(java.lang.String)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean isNetworkSupported(int)> (NO_CATEGORY)
<android.media.AudioService: void adjustStreamVolume(int,int,int)> (NO_CATEGORY)
<com.android.settings.bluetooth.DockService$3: void onCheckedChanged(android.widget.CompoundButton,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingVector: void setTerminatingIOI(java.lang.String)> (NO_CATEGORY)
<android.app.AlertDialog: void setIcon(int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setMetadata(int,android.os.Bundle)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setConcurrencyPriority(java.lang.String)> (NO_CATEGORY)
<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (NO_CATEGORY)
<android.view.IDisplayContentChangeListener$Stub$Proxy: void onWindowLayersChanged(int)> (NO_CATEGORY)
<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)> (NO_CATEGORY)
<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean)> (NO_CATEGORY)
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (NO_CATEGORY)
<android.view.View$5: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.widget.AbsSpinner$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)> (NO_CATEGORY)
<java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)> (NO_CATEGORY)
<com.android.browser.PhoneUi: void setActiveTab(com.android.browser.Tab)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPClientTransaction: void setState(javax.sip.TransactionState)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: byte[] toBytes(javax.net.ssl.SSLSession)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setChunkedStreamingMode(int)> (NO_CATEGORY)
<com.google.common.base.Predicates$AssignableFromPredicate: boolean apply(java.lang.Class)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setStrictModeVisualIndicatorPreference(java.lang.String)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setCustomView(android.view.View)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,short)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)> (NO_CATEGORY)
<com.android.server.display.LogicalDisplay: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame: void setFloats(float[])> (NO_CATEGORY)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordHistoryLength(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: boolean savePicture(android.os.Bundle,java.io.File)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoTimeout(int)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)> (NO_CATEGORY)
<android.webkit.AccessibilityInjector: boolean performAccessibilityAction(int,android.os.Bundle)> (NO_CATEGORY)
<android.os.ServiceManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)> (NO_CATEGORY)
<java.nio.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<android.app.Activity: void setContentView(android.view.View)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setNonceCount(int)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeBodyPart: void setHeader(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.RichInputConnection: void performEditorAction(int)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setLastRecovered(long)> (NO_CATEGORY)
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.app.IServiceConnection$Stub$Proxy: void connected(android.content.ComponentName,android.os.IBinder)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.ViewPropertyAnimator setVisibilityWhenDone(android.view.ViewPropertyAnimator,android.view.View,int)> (NO_CATEGORY)
<com.android.server.MountService$ObbAction: void sendNewStatusOrIgnore(int)> (NO_CATEGORY)
<android.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService$WakeLock: void updateProperties(int,java.lang.String,android.os.WorkSource,int,int)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setMAddrParam(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setReceived(java.lang.String)> (NO_CATEGORY)
<java.lang.StringBuilder: void setCharAt(int,char)> (NO_CATEGORY)
<libcore.net.http.RawHeaders: void setStatusLine(java.lang.String)> (NO_CATEGORY)
<android.app.Notification: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.RemoteViews$ViewGroupAction: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteAppWidgetId(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])> (NO_CATEGORY)
<android.app.Activity: void setFinishOnTouchOutside(boolean)> (NO_CATEGORY)
<android.widget.Spinner$DialogPopup: void onClick(android.content.DialogInterface,int)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setDuration(long)> (NO_CATEGORY)
<com.android.emailcommon.mail.Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLength(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.media.MediaRouter$RouteGroup: void setIconResource(int)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setTransportControlFlags(int,int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceScanMode(boolean)> (NO_CATEGORY)
<com.android.settings.bluetooth.BluetoothEventManager: void addProfileHandler(java.lang.String,com.android.settings.bluetooth.BluetoothEventManager$Handler)> (NO_CATEGORY)
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCI3GPP2(java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.net.http.Headers: void setContentEncoding(java.lang.String)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])> (NO_CATEGORY)
<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)> (NO_CATEGORY)
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.view.IInputFilterHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean removeSubTask(int,int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setAttentionLight(boolean,int)> (NO_CATEGORY)
<android.location.IGpsStatusProvider$Stub$Proxy: void addGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void restoreAtInstall(java.lang.String,int)> (NO_CATEGORY)
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<com.android.providers.calendar.CalendarAlarmManager: void scheduleNextAlarm(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.CSeq: void setSequenceNumber(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)> (NO_CATEGORY)
<java.io.CharArrayWriter: java.io.CharArrayWriter append(char)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> (NO_CATEGORY)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])> (NO_CATEGORY)
<com.android.emailcommon.mail.Message: void setFlags(com.android.emailcommon.mail.Flag[],boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setCurrentItemIndex(java.lang.Object,int)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void setDataDependency(int,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setStreamSolo(int,boolean,android.os.IBinder)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setBounds(int,int,int,int)> (NO_CATEGORY)
<javax.net.ssl.SSLEngine: void setSSLParameters(javax.net.ssl.SSLParameters)> (NO_CATEGORY)
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putFloat(int,float)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeIcon(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setSPIClient(int)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<com.google.common.collect.Sets$SetFromMap: boolean add(java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setFullScreen(java.lang.Object,boolean)> (NO_CATEGORY)
<android.webkit.ZoomManager: void setZoomScale(float,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PServedUser: void setRegistrationState(java.lang.String)> (NO_CATEGORY)
<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)> (NO_CATEGORY)
<java.lang.System: void setErr(java.io.PrintStream)> (NO_CATEGORY)
<com.android.settings.wifi.WifiSettings: void submit(com.android.settings.wifi.WifiConfigController)> (NO_CATEGORY)
<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void set(android.widget.RemoteViewsAdapter$RemoteViewsMetaData)> (NO_CATEGORY)
<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void wallpaperOffsetsComplete(android.os.IBinder)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setNextNonce(java.lang.String)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void notifyAppWidgetViewDataChanged(int[],int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setTransportControlFlags(int,int)> (NO_CATEGORY)
<android.app.Activity: void startActivities(android.content.Intent[])> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(gov.nist.core.Token)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setMAddr(java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator setVisibilityWhenDone(android.animation.Animator,android.view.View,int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void vibrate(int,long[],int,android.os.IBinder)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setUseClientMode(boolean)> (NO_CATEGORY)
<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putDouble(double)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setProtocol(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setEmptyView(int,int)> (NO_CATEGORY)
<org.apache.harmony.security.x501.AttributeTypeAndValue$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<java.net.Socks4Message: void setIP(byte[])> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void pi(char[],int,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)> (NO_CATEGORY)
<android.content.ContextWrapper: void startActivity(android.content.Intent)> (NO_CATEGORY)
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setAudioStreamType(int)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.content.pm.IPackageDeleteObserver$Stub$Proxy: void packageDeleted(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.WifiService: void setCountryCode(java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> (NO_CATEGORY)
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setUidNetworkRules(int,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay applyWifiDisplayAlias(android.hardware.display.WifiDisplay)> (NO_CATEGORY)
<android.net.INetworkPolicyListener$Stub$Proxy: void onUidRulesChanged(int,int)> (NO_CATEGORY)
<android.app.Instrumentation: void sendKeyDownUpSync(int)> (NO_CATEGORY)
<java.net.MulticastSocket: void setInterface(java.net.InetAddress)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void updateAppWidgetOptions(int,android.os.Bundle)> (NO_CATEGORY)
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<com.android.server.display.LogicalDisplay: void setDisplayInfoOverrideFromWindowManagerLocked(android.view.DisplayInfo)> (NO_CATEGORY)
<com.android.vcard.VCardProperty: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setHostPort(gov.nist.core.HostPort)> (NO_CATEGORY)
<java.nio.CharBuffer: java.nio.CharBuffer put(char[],int,int)> (NO_CATEGORY)
<android.widget.RadioGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)> (NO_CATEGORY)
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.emailcommon.provider.Policy: void setAttachmentFlagsForNewPolicy(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Policy)> (NO_CATEGORY)
<android.app.Activity: void setVolumeControlStream(int)> (NO_CATEGORY)
<android.app.Dialog: void setTitle(java.lang.CharSequence)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<com.android.exchange.EasAccountService: com.android.exchange.EasResponse sendPing(byte[],int)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)> (NO_CATEGORY)
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.browser.search.DefaultSearchEngine: void startSearch(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String)> (NO_CATEGORY)
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.providers.media.MediaProvider$1: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void playSoundEffect(int)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setDither(boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void removeSecondaryRoute(java.lang.String,android.net.RouteInfo)> (NO_CATEGORY)
<android.graphics.Matrix$1: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PPreferredIdentity: void setValue(java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)> (NO_CATEGORY)
<java.sql.Date: void setMinutes(int)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<android.net.EthernetDataTracker: void setTeardownRequested(boolean)> (NO_CATEGORY)
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAssertedService: void setValue(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.content.ContentProvider$Transport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String)> (NO_CATEGORY)
<java.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingVector: void setICIDGeneratedAt(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic: boolean performAccessibilityAction(int,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState,float,float,float,float)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPackageName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.browser.widget.BookmarkThumbnailWidgetService$StateFilter: boolean accept(java.io.File,java.lang.String)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setValue(int,java.lang.String)> (NO_CATEGORY)
<java.nio.BaseByteBuffer: java.nio.ByteBuffer putChar(int,char)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setInstanceFollowRedirects(boolean)> (NO_CATEGORY)
<java.util.Formatter$FormatToken: boolean setFlag(int)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setSelection(int)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setInputFilter(android.view.IInputFilter)> (NO_CATEGORY)
<libcore.net.http.HttpConnection: void setupSecureSocket(javax.net.ssl.SSLSocketFactory,boolean)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void write(byte[])> (NO_CATEGORY)
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)> (NO_CATEGORY)
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])> (NO_CATEGORY)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void setScale(float,float,float,float)> (NO_CATEGORY)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<com.android.ex.chips.BaseRecipientAdapter: void fetchPhoto(com.android.ex.chips.RecipientEntry,android.net.Uri)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)> (NO_CATEGORY)
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ErrorInfo: void setErrorMessage(java.lang.String)> (NO_CATEGORY)
<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.view.View$12: void setValue(android.view.View,float)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean renameFolder(long,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View)> (NO_CATEGORY)
<android.view.VelocityTracker: void setNextPoolable(java.lang.Object)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean createFolder(long,java.lang.String)> (NO_CATEGORY)
<com.android.deskclock.AlarmTimePickerDialogFragment: com.android.deskclock.AlarmTimePickerDialogFragment newInstance(com.android.deskclock.Alarm)> (NO_CATEGORY)
<android.net.NetworkPolicyManager: void dumpRules(java.io.PrintWriter,int)> (NO_CATEGORY)
<android.media.MediaRouter$UserRouteInfo: void setVolume(int)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: boolean updateProvidersForPackageLocked(java.lang.String,java.util.Set)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)> (NO_CATEGORY)
<android.filterfw.io.GraphReader: void addReferencesByMap(android.filterfw.core.KeyValueMap)> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)> (NO_CATEGORY)
<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.graphics.Rect: void set(android.graphics.Rect)> (NO_CATEGORY)
<android.os.Message: void setAsynchronous(boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setWallpaperAnimLayerAdjustmentLocked(int)> (NO_CATEGORY)
<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void bind(android.content.Context,int,android.content.Intent)> (NO_CATEGORY)
<com.android.systemui.screenshot.SaveImageInBackgroundTask: void onPostExecute(com.android.systemui.screenshot.SaveImageInBackgroundData)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)> (NO_CATEGORY)
<java.net.Socket: void setReuseAddress(boolean)> (NO_CATEGORY)
<android.widget.DatePicker: void setSpinnersShown(boolean)> (NO_CATEGORY)
<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)> (NO_CATEGORY)
<java.text.DecimalFormat: void setNegativeSuffix(java.lang.String)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean setState(boolean,int)> (NO_CATEGORY)
<com.android.server.LightsService$Light: void setBrightness(int,int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)> (NO_CATEGORY)
<android.widget.EditText: void setSelection(int)> (NO_CATEGORY)
<android.app.LocalActivityManager: void dispatchDestroy(boolean)> (NO_CATEGORY)
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.Schema: void elementType(java.lang.String,int,int,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayShowHomeEnabled(boolean)> (NO_CATEGORY)
<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeBytes(java.lang.String)> (NO_CATEGORY)
<com.android.server.MountService: boolean onEvent(int,java.lang.String,java.lang.String[])> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)> (NO_CATEGORY)
<com.android.deskclock.TimePicker$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)> (NO_CATEGORY)
<com.android.server.power.ElectronBeam: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setMovementGranularities(java.lang.Object,int)> (NO_CATEGORY)
<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteHost(int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setTimeout(int)> (NO_CATEGORY)
<android.app.SearchDialog: void setWorking(boolean)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTcpNoDelay(boolean)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void setState(int)> (NO_CATEGORY)
<com.android.systemui.screenshot.SaveImageInBackgroundTask: com.android.systemui.screenshot.SaveImageInBackgroundData doInBackground(com.android.systemui.screenshot.SaveImageInBackgroundData[])> (NO_CATEGORY)
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setNeedClientAuth(boolean)> (NO_CATEGORY)
<java.nio.SocketChannelImpl: int write(java.nio.ByteBuffer)> (NO_CATEGORY)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setFormat(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void disableNat(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: void finishRemoveUser(int)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putShort(short)> (NO_CATEGORY)
<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteUserActivity(int,int)> (NO_CATEGORY)
<android.view.View$5: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void goToSleep(long,int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int installExistingPackage(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setWantClientAuth(boolean)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void agentConnected(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<android.app.AlertDialog: void setView(android.view.View)> (NO_CATEGORY)
<com.android.music.MusicUtils: com.android.music.MusicUtils$ServiceToken bindToService(android.app.Activity,android.content.ServiceConnection)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)> (NO_CATEGORY)
<android.graphics.Matrix$1: boolean setPolyToPoly(float[],int,float[],int,int)> (NO_CATEGORY)
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript$Priority)> (NO_CATEGORY)
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeBoolean(boolean)> (NO_CATEGORY)
<android.webkit.HTML5VideoViewProxy$PosterDownloader: void data(byte[],int)> (NO_CATEGORY)
<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)> (NO_CATEGORY)
<android.filterfw.core.StopWatchMap: void start(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.VertexFrame: void setInts(int[])> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void setWallpaperPosition(android.os.IBinder,float,float,float,float)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setAlpha(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)> (NO_CATEGORY)
<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityActionInActiveWindow(long,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.settings.AirplaneModeEnabler: void setAirplaneModeInECM(boolean,boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setAutoWhiteBalanceLock(boolean)> (NO_CATEGORY)
<com.android.providers.settings.SettingsHelper: boolean restoreValue(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)> (NO_CATEGORY)
<com.android.server.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[],int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)> (NO_CATEGORY)
<libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)> (NO_CATEGORY)
<java.lang.reflect.Field: void setLong(java.lang.Object,long)> (NO_CATEGORY)
<com.android.systemui.statusbar.NotificationData: boolean setUserExpanded(android.view.View,boolean)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector: void setKeyboardGeometry(int,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int untether(java.lang.String)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setFillBefore(boolean)> (NO_CATEGORY)
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<java.util.zip.Deflater: void setDictionary(byte[])> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void readEntries(java.io.ObjectInputStream)> (NO_CATEGORY)
<com.android.browser.homepages.Template$SimpleEntity: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)> (NO_CATEGORY)
<android.view.Surface: void setLayerStack(int)> (NO_CATEGORY)
<android.widget.TextView: void sendAccessibilityEvent(int)> (NO_CATEGORY)
<com.google.common.collect.AbstractMapEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<com.android.internal.app.IUsageStats$Stub$Proxy: void noteLaunchTime(android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void setBindAppWidgetPermission(java.lang.String,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.settings.bluetooth.LocalBluetoothAdapter: boolean setScanMode(int,int)> (NO_CATEGORY)
<android.app.IActivityManager$ContentProviderHolder: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setMonths(java.lang.String[])> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void unregisterListener(android.os.storage.IMountServiceListener)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.os.IPermissionController$Stub$Proxy: boolean checkPermission(java.lang.String,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateTracker: void setUserDataEnable(boolean)> (NO_CATEGORY)
<com.android.camera.ui.IndicatorControl: void setEnabled(boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int decryptStorage(java.lang.String)> (NO_CATEGORY)
<java.lang.AbstractStringBuilder: void setCharAt(int,char)> (NO_CATEGORY)
<android.media.AudioManager: void setRemoteSubmixOn(boolean,int)> (NO_CATEGORY)
<java.net.Socket: void setTcpNoDelay(boolean)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentHashMap$HashEntry: void setNext(java.util.concurrent.ConcurrentHashMap$HashEntry)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<java.net.DatagramSocket: void bind(java.net.SocketAddress)> (NO_CATEGORY)
<com.android.exchange.provider.GalResult$GalData: void put(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.browser.BaseUi: void setFavicon(com.android.browser.Tab)> (NO_CATEGORY)
<android.widget.TextView: void setText(char[],int,int)> (NO_CATEGORY)
<android.widget.ScrollBarDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.media.AudioService: void setRemoteStreamVolume(int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isProtectedBroadcast(java.lang.String)> (NO_CATEGORY)
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void revokePermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.hardware.ISerialManager$Stub$Proxy: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)> (NO_CATEGORY)
<java.util.jar.Manifest: void write(java.io.OutputStream)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setRemovedCount(java.lang.Object,int)> (NO_CATEGORY)
<java.util.logging.Logger: void setLevel(java.util.logging.Level)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)> (NO_CATEGORY)
<com.android.exchange.ExchangeService$1: void sendMessageStatus(long,java.lang.String,int,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)> (NO_CATEGORY)
<android.app.ActivityThread$ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)> (NO_CATEGORY)
<com.android.emailcommon.service.IAccountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.util.IntProperty: void set(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)> (NO_CATEGORY)
<java.net.DatagramSocket: void setBroadcast(boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void pauseKeyDispatching(android.os.IBinder)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void setRepeatMode(int)> (NO_CATEGORY)
<android.text.PackedIntVector: void setValue(int,int,int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setHasOverlappingRendering(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void onGesture(int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setGroupingUsed(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setParent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: android.os.IBinder addNotification(com.android.internal.statusbar.StatusBarNotification)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void registerListener(android.os.storage.IMountServiceListener)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void toggleSoftInput(int,int)> (NO_CATEGORY)
<java.lang.reflect.Field: void setInt(java.lang.Object,int)> (NO_CATEGORY)
<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)> (NO_CATEGORY)
<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)> (NO_CATEGORY)
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)> (NO_CATEGORY)
<java.net.Socket: void setSendBufferSize(int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestore(boolean)> (NO_CATEGORY)
<android.media.IRemoteControlClient$Stub$Proxy: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<android.app.ListActivity: void setSelection(int)> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setP2pSsidPostfix(java.lang.String)> (NO_CATEGORY)
<android.content.Intent: void setAllowFds(boolean)> (NO_CATEGORY)
<android.widget.RelativeLayout: void setVerticalGravity(int)> (NO_CATEGORY)
<org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.camera.ui.SharePopup$1: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)> (NO_CATEGORY)
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)> (NO_CATEGORY)
<com.android.server.display.DisplayManagerService$CallbackRecord: void notifyDisplayEventAsync(int,int)> (NO_CATEGORY)
<com.android.server.wm.AppWindowToken: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.content.IIntentSender$Stub$Proxy: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub$Proxy: void setGrant(int,java.lang.String,boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)> (NO_CATEGORY)
<com.android.server.sip.SipService$SipSessionGroupExt: void setWakeupTimer(com.android.server.sip.SipWakeupTimer)> (NO_CATEGORY)
<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setSocketTimeout(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: void setSessionTimeout(int)> (NO_CATEGORY)
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setProtocol(java.lang.String)> (NO_CATEGORY)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setType(int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<java.util.TreeSet: boolean add(java.lang.Object)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int changeEncryptionPassword(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)> (NO_CATEGORY)
<android.graphics.Matrix: void setRotate(float,float,float)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setPowerButtonInstantlyLocks(boolean)> (NO_CATEGORY)
<android.graphics.Matrix: void setValues(float[])> (NO_CATEGORY)
<javax.net.ssl.SSLParameters: void setProtocols(java.lang.String[])> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl: void setLabelFor(android.view.View,int)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$WeakEntry: void setExpirationTime(long)> (NO_CATEGORY)
<java.io.PrintWriter: void write(char[])> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)> (NO_CATEGORY)
<android.webkit.WebViewCore: java.lang.String access$4800(android.webkit.WebViewCore,java.lang.String,boolean)> (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceLinkStateChanged(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: int setMoreSuggestionsHeight(int)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProtocol(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)> (NO_CATEGORY)
<android.os.Bundle: void putChar(java.lang.String,char)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setMethod(java.lang.String)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setBottom(int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setStayOnSetting(int)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)> (NO_CATEGORY)
<java.io.PrintWriter: void print(java.lang.String)> (NO_CATEGORY)
<com.android.music.QueryBrowserActivity$QueryListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> (NO_CATEGORY)
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)> (NO_CATEGORY)
<android.view.View$3: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setCheckable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void focusSearch(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setInstallerPackageName(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.os.WorkSource: void set(int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setSystemUiVisibility(int,int)> (NO_CATEGORY)
<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)> (NO_CATEGORY)
<android.view.View$7: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.net.SSLCertificateSocketFactory: void setSoWriteTimeout(java.net.Socket,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatJB: void setHasTransientState(android.view.View,boolean)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void writeFallbackAppWidgetId(int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByAccessibilityId(long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<com.android.server.IntentResolverOld: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)> (NO_CATEGORY)
<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab: void setVisibility(int)> (NO_CATEGORY)
<android.provider.Settings$System: void setShowGTalkServiceStatusForUser(android.content.ContentResolver,boolean,int)> (NO_CATEGORY)
<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)> (NO_CATEGORY)
<com.android.server.display.WifiDisplayController: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: void send(org.apache.harmony.xnet.provider.jsse.Message)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.OutputStream)> (NO_CATEGORY)
<android.graphics.Matrix: void setScale(float,float,float,float)> (NO_CATEGORY)
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)> (NO_CATEGORY)
<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<android.media.MediaRouter$UserRouteInfo: void setVolumeCallback(android.media.MediaRouter$VolumeCallback)> (NO_CATEGORY)
<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)> (NO_CATEGORY)
<com.android.server.WifiService: void startScan(boolean)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> (NO_CATEGORY)
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setZoom(int)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int mountVolume(java.lang.String)> (NO_CATEGORY)
<android.view.View$10: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.xml.sax.helpers.ParserAdapter: void startElement(java.lang.String,org.xml.sax.AttributeList)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)> (NO_CATEGORY)
<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)> (NO_CATEGORY)
<android.os.Bundle: void putDoubleArray(java.lang.String,double[])> (NO_CATEGORY)
<com.android.inputmethod.latin.LatinIME: void setInputView(android.view.View)> (NO_CATEGORY)
<org.json.JSONArray: java.lang.String toString(int)> (NO_CATEGORY)
<java.util.zip.DeflaterOutputStream: void write(int)> (NO_CATEGORY)
<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.statusbar.StatusBarIconList: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver)> (NO_CATEGORY)
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setRight(int)> (NO_CATEGORY)
<android.database.BulkCursorProxy: void onMove(int)> (NO_CATEGORY)
<android.location.Criteria: void setAccuracy(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)> (NO_CATEGORY)
<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<libcore.net.url.JarURLConnectionImpl: void setDefaultUseCaches(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setTransportParam(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void addAppToken(int,android.view.IApplicationToken,int,int,boolean,boolean)> (NO_CATEGORY)
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: boolean hasNamedWallpaper(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$2: void setValue(java.lang.Object,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void setBigram(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setMaximumFractionDigits(int)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setFillAfter(boolean)> (NO_CATEGORY)
<android.widget.Spinner: void setEnabled(boolean)> (NO_CATEGORY)
<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void agentDisconnected(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setUsingInputMethod(boolean)> (NO_CATEGORY)
<com.android.settings.drawable.InsetBoundsDrawable: void setBounds(int,int,int,int)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)> (NO_CATEGORY)
<java.net.ServerSocket: void setReceiveBufferSize(int)> (NO_CATEGORY)
<java.util.jar.JarFile$JarFileInputStream: int read(byte[],int,int)> (NO_CATEGORY)
<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setCurrentItemIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.net.Uri$HierarchicalUri: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.widget.ActionBarContainer: void setVisibility(int)> (NO_CATEGORY)
<android.net.wifi.WifiStateTracker: void setPolicyDataEnable(boolean)> (NO_CATEGORY)
<android.app.ContextImpl: void startActivity(android.content.Intent)> (NO_CATEGORY)
<com.android.emailcommon.provider.HostAuth: void setConnection(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator: void set(java.lang.Object)> (NO_CATEGORY)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextAfterCursor(java.lang.CharSequence,int)> (NO_CATEGORY)
<android.app.NotificationManager: void notify(int,android.app.Notification)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)> (NO_CATEGORY)
<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void crash(java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.ToggleSlider: void setMax(int)> (NO_CATEGORY)
<android.preference.DialogPreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)> (NO_CATEGORY)
<com.android.browser.TitleBar: void setProgress(int)> (NO_CATEGORY)
<android.view.IDisplayContentChangeListener$Stub$Proxy: void onRectangleOnScreenRequested(int,android.graphics.Rect,boolean)> (NO_CATEGORY)
<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)> (NO_CATEGORY)
<android.provider.Settings$Secure: void setLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,boolean,int)> (NO_CATEGORY)
<android.widget.TabWidget: void setDividerDrawable(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)> (NO_CATEGORY)
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void processingInstruction(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl: int write(java.nio.ByteBuffer)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)> (NO_CATEGORY)
<com.android.exchange.ExchangeService$2: void sendMeetingResponse(long,int)> (NO_CATEGORY)
<java.net.Socket: void bind(java.net.SocketAddress)> (NO_CATEGORY)
<android.app.Activity: void setRequestedOrientation(int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setCustomView(int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void setBackupProvisioned(boolean)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.util.Slog: int w(java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,boolean)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.ElementType: void setAttribute(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setMultiplier(int)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)> (NO_CATEGORY)
<android.media.AudioService: void playSoundEffect(int)> (NO_CATEGORY)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setFirewallUidRule(int,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setIsdnSubAddress(java.lang.String)> (NO_CATEGORY)
<gov.nist.core.NameValueList: gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setGpsTimestamp(long)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.ToggleSlider: void setValue(int)> (NO_CATEGORY)
<com.android.server.sip.SipService$AutoRegistrationProcess: void setListener(android.net.sip.ISipSessionListener)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,boolean)> (NO_CATEGORY)
<libcore.net.url.JarURLConnectionImpl: void setUseCaches(boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)> (NO_CATEGORY)
<org.apache.http.impl.conn.DefaultClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> (NO_CATEGORY)
<android.widget.RemoteViews$Action: void setBitmapCache(android.widget.RemoteViews$BitmapCache)> (NO_CATEGORY)
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)> (NO_CATEGORY)
<com.google.common.collect.AbstractMapBasedMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPResponse: void setStatusCode(int)> (NO_CATEGORY)
<android.util.PrintWriterPrinter: void println(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,long)> (NO_CATEGORY)
<java.lang.ThreadGroup: void setMaxPriority(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setStartTime(long)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.util.IndentingPrintWriter: void write(char[],int,int)> (NO_CATEGORY)
<android.net.TrafficStats: void setThreadStatsTag(int)> (NO_CATEGORY)
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setURI(int,java.lang.String)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void serviceRequest(long,long,int)> (NO_CATEGORY)
<android.os.Parcel: void writeSerializable(java.io.Serializable)> (NO_CATEGORY)
<android.app.IUiModeManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.dreams.DreamManagerService$2: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<java.util.jar.JarVerifier: void addMetaEntry(java.lang.String,byte[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)> (NO_CATEGORY)
<android.content.IIntentSender$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReceiveBufferSize(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setTTL(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplaySize(int,int,int)> (NO_CATEGORY)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> (NO_CATEGORY)
<android.os.Bundle: void putDouble(java.lang.String,double)> (NO_CATEGORY)
<android.net.wifi.WifiConfigStore: boolean enableNetwork(int,boolean)> (NO_CATEGORY)
<android.os.IUserManager$Stub$Proxy: void setUserName(int,java.lang.String)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: boolean isNdef(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary$DataUsageAdapter: void bindStats(android.net.NetworkStats,int[])> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Accept: void setQValue(float)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void removeWindowToken(android.os.IBinder)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.NetworkController: void setStackedMode(boolean)> (NO_CATEGORY)
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)> (NO_CATEGORY)
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setColor(int)> (NO_CATEGORY)
<java.io.RandomAccessFile: void write(byte[])> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.view.ViewRootImpl$AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setEventDispatching(boolean)> (NO_CATEGORY)
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.app.IActivityController$Stub$Proxy: boolean activityStarting(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: void send(java.net.DatagramPacket)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void logState(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<com.android.browser.BaseUi: void setUrlTitle(com.android.browser.Tab)> (NO_CATEGORY)
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)> (NO_CATEGORY)
<gov.nist.core.ParserCore: void peekLine(java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.Activity: void setImmersive(boolean)> (NO_CATEGORY)
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setNetworkPreference(int)> (NO_CATEGORY)
<android.graphics.Picture$RecordingCanvas: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Any: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardViewMediator: void setHidden(boolean)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putDouble(int,double)> (NO_CATEGORY)
<android.view.Surface: void setPosition(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setUsername(java.lang.String)> (NO_CATEGORY)
<android.net.MobileDataStateTracker: boolean setRadio(boolean)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)> (NO_CATEGORY)
<android.os.storage.IObbActionListener$Stub$Proxy: void onObbResult(java.lang.String,int,int)> (NO_CATEGORY)
<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setRemoteSubmixOn(boolean,int)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setTextZoom(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setEventChargingFunctionAddress(java.lang.String)> (NO_CATEGORY)
<android.hardware.SystemSensorManager$ListenerDelegate$1: void handleMessage(android.os.Message)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendReliableProvisionalResponse(javax.sip.message.Response)> (NO_CATEGORY)
<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInParent(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.DummyDataStateTracker: void setPolicyDataEnable(boolean)> (NO_CATEGORY)
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelock(int,int,java.lang.String,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<android.widget.RemoteViews$ReflectionAction: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReuseAddress(boolean)> (NO_CATEGORY)
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSendBufferSize(int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void disable(int,android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void disable(int,android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<com.android.server.am.BroadcastFilter: void dumpInReceiverList(java.io.PrintWriter,android.util.Printer,java.lang.String)> (NO_CATEGORY)
<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setDoInput(boolean)> (NO_CATEGORY)
<android.app.IActivityController$Stub$Proxy: boolean activityResuming(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setExtractedText(android.view.inputmethod.ExtractedText,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> (NO_CATEGORY)
<com.android.deskclock.Alarm$DaysOfWeek: void setDayOfWeek(int,boolean)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)> (NO_CATEGORY)
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)> (NO_CATEGORY)
<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.graphics.Matrix: void setSinCos(float,float,float,float)> (NO_CATEGORY)
<android.media.MediaPlayer: boolean setParameter(int,java.lang.String)> (NO_CATEGORY)
<com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils: void writeChar(char,int,int)> (NO_CATEGORY)
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)> (NO_CATEGORY)
<android.preference.Preference: boolean persistFloat(float)> (NO_CATEGORY)
<android.app.AlertDialog: void setCustomTitle(android.view.View)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void hideSoftInput(int,android.os.ResultReceiver)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollY(java.lang.Object,int)> (NO_CATEGORY)
<com.android.server.location.PassiveProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void reportFailedPasswordAttempt(int)> (NO_CATEGORY)
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatJB: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.Surface$CompatibleCanvas: void setMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.view.Surface: void setPosition(float,float)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setResponse(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppToken(int,android.os.IBinder)> (NO_CATEGORY)
<android.media.RingtoneManager: void setType(int)> (NO_CATEGORY)
<android.util.Slog: int v(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)> (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void limitReached(java.lang.String,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Replaces: void setValue(java.lang.String)> (NO_CATEGORY)
<android.filterfw.MffEnvironment: void setGLEnvironment(android.filterfw.core.GLEnvironment)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setImportantForAccessibility(android.view.View,int)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void notifyAppWidgetViewDataChanged(int[],int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void showSoftInput(int,android.os.ResultReceiver)> (NO_CATEGORY)
<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.net.AddressCache: void put(java.lang.String,java.net.InetAddress[])> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setWfdDeviceInfo(java.lang.String)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.NavigationBarView: void setSlippery(boolean)> (NO_CATEGORY)
<android.media.MediaPlayer: void setRetransmitEndpoint(java.net.InetSocketAddress)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToTop(java.util.List)> (NO_CATEGORY)
<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)> (NO_CATEGORY)
<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[])> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setDeviceType(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setSecure(boolean)> (NO_CATEGORY)
<com.android.browser.addbookmark.FolderSpinner: void setSelection(int)> (NO_CATEGORY)
<android.os.Bundle: void putLong(java.lang.String,long)> (NO_CATEGORY)
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelock(int,int,java.lang.String,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PProfileKey: void setValue(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelephoneNumber: void setParm(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(android.os.Message)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl: void setMenuVisibility(android.app.Fragment,boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnableSessionCreation(boolean)> (NO_CATEGORY)
<android.widget.DatePicker: void setMinDate(long)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String copyResourceToContainer(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)> (NO_CATEGORY)
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.BitString: void setBit(int,boolean)> (NO_CATEGORY)
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: boolean canMakeReadOnly(int)> (NO_CATEGORY)
<com.android.server.WifiService: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> android.permission.CHANGE_WIFI_STATE (NO_CATEGORY)
<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder setClassInstanceLimit(java.lang.Class,int)> (NO_CATEGORY)
<android.support.v4.view.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMultimap: boolean putAll(com.google.common.collect.Multimap)> (NO_CATEGORY)
<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)> (NO_CATEGORY)
<android.media.MediaRecorder: void setOrientationHint(int)> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)> (NO_CATEGORY)
<android.media.MediaRecorder: void setAudioChannels(int)> (NO_CATEGORY)
<com.google.common.primitives.Booleans$BooleanArrayAsList: java.lang.Boolean set(int,java.lang.Boolean)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setLeftTop(int,int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.SIPETag: void setValue(java.lang.String)> (NO_CATEGORY)
<android.content.ContentValues: void putStringArrayList(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary$AppItem: void addUid(int)> (NO_CATEGORY)
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.settings.AccessibilitySettings$ToggleSwitch: void setChecked(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)> (NO_CATEGORY)
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)> (NO_CATEGORY)
<android.location.Address: void setAddressLine(int,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setLongClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<java.net.PlainDatagramSocketImpl: void setTTL(byte)> (NO_CATEGORY)
<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)> (NO_CATEGORY)
<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: boolean setSelection(int,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setWantClientAuth(boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)> (NO_CATEGORY)
<org.apache.http.impl.io.ContentLengthOutputStream: void write(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)> (NO_CATEGORY)
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])> (NO_CATEGORY)
<com.android.music.QueryBrowserActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)> (NO_CATEGORY)
<com.android.exchange.EasOutboxService$SendMailEntity: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.view.View$8: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<java.lang.String: boolean startsWith(java.lang.String)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setPivotY(float)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void sendReliableProvisionalResponse(javax.sip.message.Response)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setDrawMode(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.References: void setValue(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.To: void setTag(java.lang.String)> (NO_CATEGORY)
<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> (NO_CATEGORY)
<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setValue(java.lang.String)> (NO_CATEGORY)
<com.android.browser.XLargeUi: void setUseQuickControls(boolean)> (NO_CATEGORY)
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)> (NO_CATEGORY)
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void setUsbMassStorageEnabled(boolean)> (NO_CATEGORY)
<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAutoRegistration(boolean)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setLeftTopRightBottom(int,int,int,int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.ex.variablespeed.VariableSpeed: void setDataSource(java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowAnimator: void setAppLayoutChanges(com.android.server.wm.AppWindowAnimator,int,java.lang.String)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setRotation(int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setMinimumFractionDigits(int)> (NO_CATEGORY)
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String[],boolean)> (NO_CATEGORY)
<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int)> (NO_CATEGORY)
<android.net.http.Headers: void setEtag(java.lang.String)> (NO_CATEGORY)
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.NotificationRowLayout: void setLayoutTransitionsEnabled(boolean)> (NO_CATEGORY)
<android.net.wifi.WifiStateTracker: void setTeardownRequested(boolean)> (NO_CATEGORY)
<android.graphics.drawable.InsetDrawable: void setAlpha(int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setParseIntegerOnly(boolean)> (NO_CATEGORY)
<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMultipart: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)> (NO_CATEGORY)
<javax.sip.SipFactory: javax.sip.SipStack createSipStack(java.util.Properties)> (NO_CATEGORY)
<gov.nist.javax.sip.address.Authority: void setPassword(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.RAck: void setRSeqNumber(int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setIK(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setClassName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)> (NO_CATEGORY)
<android.net.NetworkPolicyManager: void setUidPolicy(int,int)> (NO_CATEGORY)
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)> (NO_CATEGORY)
<com.android.common.content.ProjectionMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean resetPassword(java.lang.String,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAssertedIdentity: void setValue(java.lang.String)> (NO_CATEGORY)
<android.graphics.Matrix: void setSkew(float,float,float,float)> (NO_CATEGORY)
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentDisposition: void setHandling(java.lang.String)> (NO_CATEGORY)
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])> (NO_CATEGORY)
<android.filterfw.core.SimpleFrame: void setInts(int[])> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: boolean removeUser(int)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub$Proxy: boolean hasGrant(int,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(java.lang.String,boolean,boolean,int,int)> (NO_CATEGORY)
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)> (NO_CATEGORY)
<android.graphics.Paint: void setARGB(int,int,int,int)> (NO_CATEGORY)
<com.android.internal.net.LegacyVpnInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.database.CursorWindow: boolean setNumColumns(int)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.webkit.GeolocationPermissionsClassic: void getAllowed(java.lang.String,android.webkit.ValueCallback)> (NO_CATEGORY)
<java.nio.LongBuffer: java.nio.LongBuffer put(long[],int,int)> (NO_CATEGORY)
<android.widget.ZoomButton: void setEnabled(boolean)> (NO_CATEGORY)
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: void setDebugStream(java.io.PrintStream)> (NO_CATEGORY)
<com.android.server.MountService: java.lang.String buildObbPath(java.lang.String,int,boolean)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: int checkSignatures(int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplayDensity(int,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setUniverseTransformLocked(com.android.server.wm.WindowState,float,float,float,float,float,float,float)> (NO_CATEGORY)
<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String)> (NO_CATEGORY)
<android.app.Service: void setForeground(boolean)> (NO_CATEGORY)
<android.graphics.Matrix: void set(android.graphics.Matrix)> (NO_CATEGORY)
<android.net.IThrottleManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: void putValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportFailedPasswordAttempt(int)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellCheckerSubtype(java.lang.String,int)> (NO_CATEGORY)
<java.nio.channels.Channels$OutputStreamChannel: int write(java.nio.ByteBuffer)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)> (NO_CATEGORY)
<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)> (NO_CATEGORY)
<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)> (NO_CATEGORY)
<java.util.Date: void setSeconds(int)> (NO_CATEGORY)
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void resumeKeyDispatching(android.os.IBinder)> (NO_CATEGORY)
<com.google.common.collect.Multisets$UnmodifiableMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setDefaultParm(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)> (NO_CATEGORY)
<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)> (NO_CATEGORY)
<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)> (NO_CATEGORY)
<com.android.server.am.BroadcastFilter: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<java.util.Collections$CheckedList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.security.KeyChain$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> (NO_CATEGORY)
<com.google.common.collect.Lists$ReverseList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentLanguage: void setLanguageTag(java.lang.String)> (NO_CATEGORY)
<android.hardware.input.InputManager: void setPointerSpeed(android.content.Context,int)> (NO_CATEGORY)
<android.app.backup.IRestoreObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAuthUserName(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<com.google.common.collect.TreeMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TLSMessageProcessor: void cacheMessageChannel(gov.nist.javax.sip.stack.TLSMessageChannel)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setRealm(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.phone.EditPhoneNumberPreference: void setValueFromString(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)> (NO_CATEGORY)
<android.content.pm.PackageInfoLite: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)> (NO_CATEGORY)
<java.util.zip.GZIPOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoLinger(boolean,int)> (NO_CATEGORY)
<android.app.ContextImpl: void sendBroadcast(android.content.Intent)> (NO_CATEGORY)
<java.io.File: boolean setReadable(boolean,boolean)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void removeIcon(java.lang.String)> (NO_CATEGORY)
<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.appwidget.AppWidgetHostView$ParcelableSparseArray$1: android.appwidget.AppWidgetHostView$ParcelableSparseArray createFromParcel(android.os.Parcel)> (NO_CATEGORY)
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)> (NO_CATEGORY)
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.View$4: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putLong(int,long)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneDataConnectionState(int,boolean)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatGingerbread: void setOverScrollMode(android.view.View,int)> (NO_CATEGORY)
<java.io.File: boolean setExecutable(boolean,boolean)> (NO_CATEGORY)
<com.android.camera.ui.IndicatorControlWheelContainer: void setOrientation(int)> (NO_CATEGORY)
<android.widget.RemoteViews$ViewGroupAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setAnimationScales(float[])> (NO_CATEGORY)
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)> (NO_CATEGORY)
<com.android.browser.homepages.Template: void assignLoop(java.lang.String,com.android.browser.homepages.Template$ListEntityIterator)> (NO_CATEGORY)
<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> (NO_CATEGORY)
<android.net.BaseNetworkStateTracker: boolean setRadio(boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setRingerMode(int)> (NO_CATEGORY)
<android.webkit.SslClientCertLookupTable: void Allow(java.lang.String,java.security.PrivateKey,byte[][])> (NO_CATEGORY)
<com.android.browser.XLargeUi: void setActiveTab(com.android.browser.Tab)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.io.OutputStream)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setFullScreen(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setMobileDataEnabled(boolean)> (NO_CATEGORY)
<android.media.IMediaScannerService$Stub$Proxy: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTrafficClass(int)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEgressSourceRule(java.lang.String,boolean)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeChars(java.lang.String)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: void unregisterListener(android.net.INetworkPolicyListener)> (NO_CATEGORY)
<com.android.server.wm.StrictModeFlash: void setVisibility(boolean)> (NO_CATEGORY)
<android.widget.Spinner: void setPopupBackgroundResource(int)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.emailcommon.service.IPolicyService$Stub$Proxy: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setMessage(int,boolean,java.lang.Object[])> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void clearMetaKeyStates(int)> (NO_CATEGORY)
<android.net.SntpClient: boolean requestTime(java.lang.String,int)> (NO_CATEGORY)
<android.app.Notification: void setUser(android.os.UserHandle)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)> (NO_CATEGORY)
<java.util.Collections$SynchronizedMap: void putAll(java.util.Map)> (NO_CATEGORY)
<android.os.Messenger: void send(android.os.Message)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)> (NO_CATEGORY)
<com.google.common.collect.MapMaker$NullConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (NO_CATEGORY)
<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)> (NO_CATEGORY)
<android.location.IGeocodeProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<libcore.icu.RuleBasedCollatorICU: void setStrength(int)> (NO_CATEGORY)
<com.android.server.AppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)> (NO_CATEGORY)
<android.media.IRingtonePlayer$Stub$Proxy: void stop(android.os.IBinder)> (NO_CATEGORY)
<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)> (NO_CATEGORY)
<android.preference.Preference: boolean persistLong(long)> (NO_CATEGORY)
<com.android.server.sip.SipWakeupTimer: void set(int,java.lang.Runnable)> (NO_CATEGORY)
<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[])> (NO_CATEGORY)
<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,javax.sip.address.Hop)> (NO_CATEGORY)
<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)> (NO_CATEGORY)
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setMockGeolocationPermission(boolean)> (NO_CATEGORY)
<android.preference.ListPreference: void setValueIndex(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskToBack(int)> (NO_CATEGORY)
<android.net.http.Headers: void setContentDisposition(java.lang.String)> (NO_CATEGORY)
<javax.xml.validation.Validator: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCGI3GPP(java.lang.String)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setArtwork(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.webkit.WebViewCore: void setMockGeolocationError(int,java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageInstallObserver$Stub$Proxy: void packageInstalled(java.lang.String,int)> (NO_CATEGORY)
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIconAttribute(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)> (NO_CATEGORY)
<android.view.HardwareRenderer$Gl20Renderer: void setup(int,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)> (NO_CATEGORY)
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.emailcommon.provider.HostAuth: void setLogin(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ForwardingMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<android.provider.CalendarContract$CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: boolean isPresent(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setIfModifiedSince(long)> (NO_CATEGORY)
<java.io.PrintStream: void write(int)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setDither(boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledCipherSuites(java.lang.String[])> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)> (NO_CATEGORY)
<android.app.IActivityController$Stub$Proxy: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int tether(java.lang.String)> (NO_CATEGORY)
<android.media.AudioManager: void setStreamSolo(int,boolean)> (NO_CATEGORY)
<android.net.ConnectivityManager: int setUsbTethering(boolean)> (NO_CATEGORY)
<com.android.server.net.NetworkStatsRecorder: void setPersistThreshold(long)> (NO_CATEGORY)
<android.os.IUserManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AcceptLanguage: void setLanguageRange(java.lang.String)> (NO_CATEGORY)
<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeUnshared(java.lang.Object)> (NO_CATEGORY)
<java.text.DecimalFormat: void setMaximumFractionDigits(int)> (NO_CATEGORY)
<java.net.PlainSocketImpl: void setOption(int,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.ViewPager: void setPageMarginDrawable(int)> (NO_CATEGORY)
<com.android.server.location.GpsLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)> (NO_CATEGORY)
<com.android.phone.sip.SipSharedPreferences: void setProfilesCount(int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)> (NO_CATEGORY)
<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.util.SparseArray: void append(int,java.lang.Object)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> (NO_CATEGORY)
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)> (NO_CATEGORY)
<android.app.Activity: void setPersistent(boolean)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeClassDescriptor(java.io.ObjectStreamClass)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfosByText(long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<com.android.internal.util.FileRotator$1: void write(java.io.OutputStream)> (NO_CATEGORY)
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void setBatteryState(int,int,int,int,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])> (NO_CATEGORY)
<java.util.concurrent.Executors$DelegatedExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)> (NO_CATEGORY)
<android.widget.AbsListView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.util.TreeMap$BoundedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<java.io.Writer: void write(char[])> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)> (NO_CATEGORY)
<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,int)> (NO_CATEGORY)
<com.google.common.collect.LinkedHashMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void registerUserSwitchObserver(android.app.IUserSwitchObserver)> (NO_CATEGORY)
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.content.ContextWrapper: void startActivities(android.content.Intent[])> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setDefaultUseCaches(boolean)> (NO_CATEGORY)
<com.google.common.collect.Serialization: void writeMap(java.util.Map,java.io.ObjectOutputStream)> (NO_CATEGORY)
<android.media.AudioService: void setVibrateSetting(int,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void removeIdleTimer(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)> (NO_CATEGORY)
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)> (NO_CATEGORY)
<com.android.phone.PhoneUtils$2: void onClick(android.content.DialogInterface,int)> android.permission.WAKE_LOCK (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClick(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.systemui.screenshot.GlobalScreenshot: void access$000(com.android.systemui.screenshot.GlobalScreenshot,java.lang.Runnable)> (NO_CATEGORY)
<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)> (NO_CATEGORY)
<android.app.Activity: void performSaveInstanceState(android.os.Bundle)> (NO_CATEGORY)
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setChecked(java.lang.Object,boolean)> (NO_CATEGORY)
<android.animation.ValueAnimator: void setFrameDelay(long)> (NO_CATEGORY)
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(int,char)> (NO_CATEGORY)
<com.android.server.am.BroadcastFilter: void dumpBrief(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.app.Activity: void startActivity(android.content.Intent)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setSubtitle(int)> (NO_CATEGORY)
<android.preference.Preference: boolean persistStringSet(java.util.Set)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean)> (NO_CATEGORY)
<java.io.PrintWriter: void println(long)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)> (NO_CATEGORY)
<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)> (NO_CATEGORY)
<com.android.server.NotificationManagerService: void setNotificationsEnabledForPackage(java.lang.String,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setArtwork(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.net.http.AndroidHttpClient$LoggingConfiguration: void access$600(android.net.http.AndroidHttpClient$LoggingConfiguration,java.lang.String)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int setSpeechRate(float)> (NO_CATEGORY)
<android.util.Slog: int i(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setParseIntegerOnly(boolean)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)> (NO_CATEGORY)
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<org.json.JSONArray: org.json.JSONArray put(int,long)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSink(boolean)> (NO_CATEGORY)
<com.android.emailcommon.provider.Mailbox: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.http.entity.BufferedHttpEntity: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setClipChildren(boolean)> (NO_CATEGORY)
<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> (NO_CATEGORY)
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)> (NO_CATEGORY)
<gov.nist.javax.sip.header.SIPDateHeader: void setDate(java.util.Calendar)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)> (NO_CATEGORY)
<com.android.systemui.statusbar.BaseStatusBar: boolean inflateViews(com.android.systemui.statusbar.NotificationData$Entry,android.view.ViewGroup)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setLabelFor(android.view.View,int)> (NO_CATEGORY)
<com.android.server.wm.InputMonitor: void notifyInputChannelBroken(com.android.server.input.InputWindowHandle)> (NO_CATEGORY)
<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundariesLocked(boolean)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat: void setUserVisibleHint(android.app.Fragment,boolean)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLong(java.lang.String,long,int)> (NO_CATEGORY)
<gov.nist.javax.sip.DialogFilter: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)> (NO_CATEGORY)
<com.android.server.AppWidgetService: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setUriParm(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.app.ListFragment: void setListShown(boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardLinearLayout: void setTopChild(android.view.View)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)> (NO_CATEGORY)
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void saveANRStateLocked(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowState)> (NO_CATEGORY)
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeNotification(android.os.IBinder)> (NO_CATEGORY)
<com.android.camera.ui.IndicatorControlWheel: void setEnabled(boolean)> (NO_CATEGORY)
<com.android.browser.widget.BookmarkThumbnailWidgetService: void changeFolder(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putInt(int,int)> (NO_CATEGORY)
<com.android.exchange.adapter.AttachmentLoader: void readChunked(java.io.InputStream,java.io.OutputStream,int)> (NO_CATEGORY)
<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)> (NO_CATEGORY)
<android.app.IUserSwitchObserver$Stub$Proxy: void onUserSwitching(int,android.os.IRemoteCallback)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)> (NO_CATEGORY)
<com.android.server.am.AppBindRecord: void dumpInIntentBind(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.widget.Spinner$DialogPopup: void setVerticalOffset(int)> (NO_CATEGORY)
<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<android.os.Parcel: void writeStringArray(java.lang.String[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<java.text.MessageFormat: void setFormatByArgumentIndex(int,java.text.Format)> (NO_CATEGORY)
<android.media.MediaRecorder: void setCaptureRate(double)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)> (NO_CATEGORY)
<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.view.View: void sendAccessibilityEvent(int)> (NO_CATEGORY)
<com.android.browser.view.PieMenu: void onDraw(android.graphics.Canvas)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean hasBindAppWidgetPermission(java.lang.String)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)> (NO_CATEGORY)
<java.io.BufferedWriter: void write(char[],int,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.io.File: boolean setWritable(boolean,boolean)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object,boolean)> (NO_CATEGORY)
<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreFinished(int)> (NO_CATEGORY)
<com.android.camera.CameraSettings: void restorePreferences(android.content.Context,com.android.camera.ComboPreferences,android.hardware.Camera$Parameters)> (NO_CATEGORY)
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<android.preference.TwoStatePreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)> (NO_CATEGORY)
<com.android.providers.media.MediaThumbRequest: android.net.Uri updateDatabase(android.graphics.Bitmap)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setEncryptionAlgorithm(java.lang.String)> (NO_CATEGORY)
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(int,float)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void setLanguage(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl: void putSessionData(javax.net.ssl.SSLSession,byte[])> (NO_CATEGORY)
<com.android.providers.calendar.CalendarProvider2: void notifyChange(boolean)> (NO_CATEGORY)
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setFilterBitmap(boolean)> (NO_CATEGORY)
<java.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)> (NO_CATEGORY)
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)> (NO_CATEGORY)
<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])> (NO_CATEGORY)
<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager$TaskThumbnails: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setBiometricWeakLivelinessEnabled(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)> (NO_CATEGORY)
<android.location.ILocationListener$Stub$Proxy: void onProviderEnabled(java.lang.String)> (NO_CATEGORY)
<com.android.settings.AccessibilityEnableScriptInjectionPreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder: void setIntValues(int[])> (NO_CATEGORY)
<com.google.common.collect.ImmutableEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab: void setLeftHintText(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setNonce(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int[],int,int)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)> (NO_CATEGORY)
<android.media.IRingtonePlayer$Stub$Proxy: boolean isPlaying(android.os.IBinder)> (NO_CATEGORY)
<java.net.Socks4Message: void setPort(int)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: boolean setComposingRegion(int,int)> (NO_CATEGORY)
<android.graphics.Matrix: void setRotate(float)> (NO_CATEGORY)
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledProtocols(java.lang.String[])> (NO_CATEGORY)
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)> (NO_CATEGORY)
<android.app.LoadedApk: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnableSessionCreation(boolean)> (NO_CATEGORY)
<java.lang.StringBuffer: void setLength(int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.text.TextPaint: void set(android.text.TextPaint)> (NO_CATEGORY)
<gov.nist.core.Host: void setAddress(java.lang.String)> (NO_CATEGORY)
<android.media.RemoteControlClient: void setPlaybackState(int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void etag(char[],int,int)> (NO_CATEGORY)
<android.os.Bundle: void putIntArray(java.lang.String,int[])> (NO_CATEGORY)
<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setShortMonths(java.lang.String[])> (NO_CATEGORY)
<java.util.Formatter$CachedDecimalFormat: libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocusable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)> (NO_CATEGORY)
<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<android.view.GLES20Canvas: int saveLayerAlpha(float,float,float,float,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPassword(byte[],int)> (NO_CATEGORY)
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)> (NO_CATEGORY)
<android.security.SystemKeyStore: byte[] generateNewKey(int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setCurrency(java.util.Currency)> (NO_CATEGORY)
<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence,int,int)> (NO_CATEGORY)
<android.view.View$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)> (NO_CATEGORY)
<android.widget.ProgressBar: void setProgress(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void magnifyDisplay(int,float,float,float)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByViewId(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)> (NO_CATEGORY)
<android.webkit.WebViewClassic: android.webkit.WebBackForwardList saveState(android.os.Bundle)> (NO_CATEGORY)
<android.graphics.Matrix: void setTranslate(float,float)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setWantClientAuth(boolean)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int stop(android.os.IBinder)> (NO_CATEGORY)
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)> (NO_CATEGORY)
<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: void onBluetoothServiceUp(android.bluetooth.IBluetooth)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.text.method.ArrowKeyMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)> (NO_CATEGORY)
<libcore.io.ForwardingOs: void setgid(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl: void setMaxScrollX(java.lang.Object,int)> (NO_CATEGORY)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<com.android.server.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(float)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void performEditorAction(int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setModelName(java.lang.String)> (NO_CATEGORY)
<com.android.camera.Util: void setGpsParameters(android.hardware.Camera$Parameters,android.location.Location)> (NO_CATEGORY)
<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.app.SearchDialog: void setListSelection(int)> (NO_CATEGORY)
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)> (NO_CATEGORY)
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)> (NO_CATEGORY)
<com.android.browser.addbookmark.FolderSpinner: void setSelectionIgnoringSelectionChange(int)> (NO_CATEGORY)
<android.os.Handler$MessengerImpl: void send(android.os.Message)> (NO_CATEGORY)
<libcore.net.http.ChunkedOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.widget.GridLayout$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setVisibleToUser(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setP2pPowerSave(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,int)> (NO_CATEGORY)
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])> (NO_CATEGORY)
<com.android.server.wm.WindowAnimator: void setScreenRotationAnimationLocked(int,com.android.server.wm.ScreenRotationAnimation)> (NO_CATEGORY)
<gov.nist.core.GenericObject: void dbgPrint(java.lang.String)> (NO_CATEGORY)
<java.security.Provider$Service: void putAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.inputmethod.latin.Suggest: void setUserHistoryDictionary(com.android.inputmethod.latin.UserHistoryDictionary)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setHasTransientState(android.view.View,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setMovementGranularities(java.lang.Object,int)> (NO_CATEGORY)
<com.google.common.base.CharMatcher$Or: void setBits(com.google.common.base.CharMatcher$LookupTable)> (NO_CATEGORY)
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)> (NO_CATEGORY)
<android.preference.Preference: void setSummary(int)> (NO_CATEGORY)
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)> (NO_CATEGORY)
<org.apache.http.conn.scheme.SchemeRegistry: void setItems(java.util.Map)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)> (NO_CATEGORY)
<android.preference.ListPreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setQuotedParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.util.IdentityHashMap$IdentityHashMapEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<java.util.MapEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpAnimatorLocked(java.io.PrintWriter,java.lang.String[],boolean)> (NO_CATEGORY)
<android.widget.GridLayout: void setRowCount(int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setAnimationMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.os.storage.StorageManager$ObbListenerDelegate: void sendObbStateChanged(java.lang.String,int)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> (NO_CATEGORY)
<android.view.View$9: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> (NO_CATEGORY)
<java.math.Primality: java.math.BigInteger nextProbablePrime(java.math.BigInteger)> (NO_CATEGORY)
<android.widget.ZoomButtonsController: void setFocusable(boolean)> (NO_CATEGORY)
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void put(java.lang.Object)> (NO_CATEGORY)
<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void loadAttachment(long,boolean)> (NO_CATEGORY)
<android.view.Window: void setFlags(int,int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.browser.BrowserHistoryPage: boolean onContextItemSelected(android.view.MenuItem)> (NO_CATEGORY)
<org.apache.harmony.security.fortress.Services: int insertProviderAt(java.security.Provider,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void finishPackageInstall(int)> (NO_CATEGORY)
<com.android.server.wm.Session: void setTransparentRegion(android.view.IWindow,android.graphics.Region)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void tryPointerSpeed(int)> (NO_CATEGORY)
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: void writeExternal(java.io.ObjectOutput)> (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceAdded(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)> (NO_CATEGORY)
<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setVisibleToUser(java.lang.Object,boolean)> (NO_CATEGORY)
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)> (NO_CATEGORY)
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])> (NO_CATEGORY)
<gov.nist.javax.sip.address.AddressImpl: void setUser(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void save(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)> (NO_CATEGORY)
<java.net.PlainSocketImpl$PlainSocketOutputStream: void write(int)> (NO_CATEGORY)
<android.app.IUiModeManager$Stub$Proxy: void enableCarMode(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void flushInterfaceDnsCache(java.lang.String)> (NO_CATEGORY)
<java.net.DatagramSocket: void setReuseAddress(boolean)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void setImportantForAccessibility(android.view.View,int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])> (NO_CATEGORY)
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (NO_CATEGORY)
<com.android.server.input.PersistentDataStore: boolean setCurrentKeyboardLayout(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.LoadedApk$WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setLongClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)> (NO_CATEGORY)
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(long[],int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int,boolean)> (NO_CATEGORY)
<java.net.DatagramSocket: void setSendBufferSize(int)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void startAppFreezingScreen(android.os.IBinder,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void sendAccessibilityEvent(int)> (NO_CATEGORY)
<com.google.common.collect.Multisets$SetMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<android.net.sip.SipManager: android.content.Intent createIncomingCallBroadcast(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)> (NO_CATEGORY)
<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer)> (NO_CATEGORY)
<android.net.EthernetDataTracker: boolean setRadio(boolean)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)> (NO_CATEGORY)
<android.app.backup.BackupHelperDispatcher: void addHelper(java.lang.String,android.app.backup.BackupHelper)> (NO_CATEGORY)
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)> (NO_CATEGORY)
<android.net.Uri$OpaqueUri: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)> (NO_CATEGORY)
<com.google.common.collect.MapMaker$NullConcurrentMap: void notifyRemoval(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.settings.net.NetworkPolicyEditor: void setPolicyWarningBytes(android.net.NetworkTemplate,long)> (NO_CATEGORY)
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction,boolean)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)> android.permission.WRITE_SETTINGS (NO_CATEGORY)
<com.android.browser.NavigationBarBase: void setFavicon(android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void commitText(java.lang.CharSequence,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,float)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void removeAccessibilityInteractionConnection(android.view.IWindow)> (NO_CATEGORY)
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)> (NO_CATEGORY)
<android.widget.PopupWindow$PopupViewContainer: boolean dispatchKeyEvent(android.view.KeyEvent)> (NO_CATEGORY)
<android.media.AudioManager: void setRouting(int,int,int)> (NO_CATEGORY)
<android.widget.ExpandableListView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.os.LoggingPrintStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void interrupt(int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.WordComposer: void setBatchInputPointers(com.android.inputmethod.latin.InputPointers)> (NO_CATEGORY)
<com.android.server.wm.ScreenRotationAnimation: boolean dismiss(android.view.SurfaceSession,long,float,int,int)> (NO_CATEGORY)
<java.io.OutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.util.PrefixPrinter: void println(java.lang.String)> (NO_CATEGORY)
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(char[],java.io.OutputStream)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void accountUpdated(long)> (NO_CATEGORY)
<com.android.common.userhappiness.UserHappinessSignals: void userAcceptedImeText(android.content.Context)> (NO_CATEGORY)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void add(int,android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout)> (NO_CATEGORY)
<java.nio.FileChannelImpl: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)> (NO_CATEGORY)
<com.android.systemui.statusbar.CommandQueue: void setNavigationIconHints(int)> (NO_CATEGORY)
<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])> (NO_CATEGORY)
<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,boolean)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setTitle(int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)> (NO_CATEGORY)
<android.location.ILocationListener$Stub$Proxy: void onStatusChanged(java.lang.String,int,android.os.Bundle)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void cancelVibrate(int,android.os.IBinder)> (NO_CATEGORY)
<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)> (NO_CATEGORY)
<com.android.camera.ui.SharePopup: void setOrientation(int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> (NO_CATEGORY)
<android.view.Window: void setBackgroundDrawableResource(int)> (NO_CATEGORY)
<com.android.internal.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(java.lang.String[])> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setTitle(int)> (NO_CATEGORY)
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyProperties)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.providers.settings.SettingsHelper: void setLocaleData(byte[],int)> (NO_CATEGORY)
<android.app.Activity: boolean navigateUpTo(android.content.Intent)> (NO_CATEGORY)
<java.text.CollationElementIterator: void setText(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.CharacterDataImpl: void setData(java.lang.String)> (NO_CATEGORY)
<android.app.Activity: boolean showDialog(int,android.os.Bundle)> (NO_CATEGORY)
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<java.util.Collections$CheckedListIterator: void set(java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)> (NO_CATEGORY)
<com.android.providers.calendar.CalendarProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues,boolean)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)> (NO_CATEGORY)
<android.app.IThumbnailReceiver$Stub$Proxy: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setOpaque(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)> (NO_CATEGORY)
<com.android.settings.AccessibilitySettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)> (NO_CATEGORY)
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setRoundingMode(java.math.RoundingMode,double)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void adjustLocalOrRemoteStreamVolume(int,int)> (NO_CATEGORY)
<org.json.JSONArray: org.json.JSONArray put(int,boolean)> (NO_CATEGORY)
<com.android.systemui.ExpandHelper$ViewScaler: void setHeight(float)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setMinimumIntegerDigits(int)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void performPrivateCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.IStopUserCallback$Stub$Proxy: void userStopped(int)> (NO_CATEGORY)
<android.widget.TextView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<com.android.browser.WebStorageSizeManager: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> (NO_CATEGORY)
<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceDown(java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void setFrom(com.android.emailcommon.mail.Address)> (NO_CATEGORY)
<com.android.settings.bluetooth.BluetoothSettings$2: void onClick(android.view.View)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)> (NO_CATEGORY)
<com.android.browser.Controller: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void enableNat(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<com.android.emailcommon.mail.Message: void setRecipient(com.android.emailcommon.mail.Message$RecipientType,com.android.emailcommon.mail.Address)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void performDeferredDestroy(android.view.IWindow)> (NO_CATEGORY)
<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)> (NO_CATEGORY)
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: void setDebugStream(java.io.PrintStream)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int)> (NO_CATEGORY)
<com.android.camera.ui.InLineSettingItem: void setTitle(com.android.camera.ListPreference)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)> (NO_CATEGORY)
<android.app.ActivityThread$ApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.Dialog: void setContentView(int)> (NO_CATEGORY)
<android.os.RegistrantList: void notifyResult(java.lang.Object)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEgressDestRule(java.lang.String,int,boolean)> (NO_CATEGORY)
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setUser(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> (NO_CATEGORY)
<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setCurrentUser(int)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)> (NO_CATEGORY)
<java.io.BufferedOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager$ServiceHandler: void handleMessage(android.os.Message)> (NO_CATEGORY)
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)> (NO_CATEGORY)
<android.widget.Spinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.view.View$3: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)> (NO_CATEGORY)
<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)> (NO_CATEGORY)
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])> (NO_CATEGORY)
<com.android.browser.BaseUi: void setActiveTab(com.android.browser.Tab)> (NO_CATEGORY)
<android.app.Dialog: void setContentView(android.view.View)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)> (NO_CATEGORY)
<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: void setIdAttribute(java.lang.String,boolean)> (NO_CATEGORY)
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setNegativePrefix(java.lang.String)> (NO_CATEGORY)
<com.android.server.WifiService: boolean setWifiEnabled(boolean)> (NO_CATEGORY)
<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)> (NO_CATEGORY)
<android.webkit.WebViewCore: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: boolean setBackupPassword(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)> (NO_CATEGORY)
<android.nfc.INfcAdapterExtras$Stub$Proxy: void setCardEmulationRoute(java.lang.String,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void clearDefaults(java.lang.String,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setStale(boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void finishDrawing(android.view.IWindow)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.net.sip.ISipSession$Stub$Proxy: void register(int)> (NO_CATEGORY)
<com.android.server.display.DisplayManagerService: void setDisplayHasContent(int,boolean,boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Join: void setValue(java.lang.String)> (NO_CATEGORY)
<java.lang.reflect.Field: void setChar(java.lang.Object,char)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void deviceAttached(android.hardware.usb.UsbDevice)> (NO_CATEGORY)
<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setAccessibilityFocused(java.lang.Object,boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSelected(java.lang.Object,boolean)> (NO_CATEGORY)
<java.io.PrintStream: void println(float)> (NO_CATEGORY)
<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginSucceeded(long)> (NO_CATEGORY)
<android.preference.Preference: boolean persistInt(int)> (NO_CATEGORY)
<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)> (NO_CATEGORY)
<java.nio.PipeImpl$PipeSinkChannel: int write(java.nio.ByteBuffer)> (NO_CATEGORY)
<com.google.common.collect.Maps: com.google.common.collect.ImmutableMap fromProperties(java.util.Properties)> (NO_CATEGORY)
<libcore.icu.NativeConverter: void setCallbackDecode(long,java.nio.charset.CharsetDecoder)> (NO_CATEGORY)
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.Parser: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setUseClientMode(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)> (NO_CATEGORY)
<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<libcore.net.http.FixedLengthOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.providers.calendar.CalendarAlarmManager: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void setHeader(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: void writeExternal(java.io.ObjectOutput)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Accept: void setContentType(java.lang.String)> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String,int)> (NO_CATEGORY)
<com.android.i18n.phonenumbers.RegexCache$LRUCache: void put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<java.net.ServerSocket: void bind(java.net.SocketAddress,int)> (NO_CATEGORY)
<com.android.emailcommon.mail.Address: void setAddress(java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub$Proxy: void clearDirectory(java.lang.String)> (NO_CATEGORY)
<com.android.server.AlarmManagerService: void setTime(long)> (NO_CATEGORY)
<android.webkit.ZoomControlExternal$ExtendedZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Oid$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setGrParam(java.lang.String)> (NO_CATEGORY)
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void freezeRotation(int)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setTextColor(int,int)> (NO_CATEGORY)
<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setInputMethodAnimLayerAdjustment(int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setHasTransientState(android.view.View,boolean)> (NO_CATEGORY)
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void setCurrentState(android.content.Context,int)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary$UidDetailTask: void bindView(com.android.settings.net.UidDetailProvider,com.android.settings.DataUsageSummary$AppItem,android.view.View)> (NO_CATEGORY)
<gov.nist.javax.sip.SipStackImpl: void <init>(java.util.Properties)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setKeepAlive(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)> (NO_CATEGORY)
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onBackupPackage(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> (NO_CATEGORY)
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(double[],int,int)> (NO_CATEGORY)
<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setWebViewClient(android.webkit.WebViewClient)> (NO_CATEGORY)
<com.android.org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream: void write(int)> (NO_CATEGORY)
<android.graphics.Region: boolean set(android.graphics.Region)> (NO_CATEGORY)
<android.webkit.ZoomManager: void restoreZoomState(android.os.Bundle)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)> (NO_CATEGORY)
<android.inputmethodservice.ExtractEditText: void setSpan_internal(java.lang.Object,int,int,int)> (NO_CATEGORY)
<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)> (NO_CATEGORY)
<android.net.LocalSocket: void setSoTimeout(int)> (NO_CATEGORY)
<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer opaque(java.io.InputStream,int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)> (NO_CATEGORY)
<java.net.PlainDatagramSocketImpl: void setOption(int,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)> (NO_CATEGORY)
<android.hardware.display.WifiDisplayStatus: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)> (NO_CATEGORY)
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)> (NO_CATEGORY)
<com.android.settings.widget.InvertedChartAxis: boolean setBounds(long,long)> (NO_CATEGORY)
<android.security.IKeyChainAliasCallback$Stub$Proxy: void alias(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$NullEntry: void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> (NO_CATEGORY)
<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPClientTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<java.util.zip.Deflater: void setInput(byte[])> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(int[],android.widget.RemoteViews)> (NO_CATEGORY)
<android.widget.Spinner: void setPromptId(int)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)> (NO_CATEGORY)
<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void dataChanged(java.lang.String)> (NO_CATEGORY)
<java.io.PrintStream: void println(int)> (NO_CATEGORY)
<com.android.server.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.phone.EditPhoneNumberPreference: com.android.phone.EditPhoneNumberPreference setSummaryOff(int)> (NO_CATEGORY)
<android.app.WallpaperManager: void setStream(java.io.InputStream)> (NO_CATEGORY)
<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)> (NO_CATEGORY)
<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(java.lang.Object)> (NO_CATEGORY)
<android.media.MediaRecorder: void setLocation(float,float)> (NO_CATEGORY)
<com.android.browser.SnapshotBar: void setFavicon(android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.server.AlarmManagerService: boolean lookForPackageLocked(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)> (NO_CATEGORY)
<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setHost(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Boolean: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int verifyEncryptionPassword(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setGroupingSize(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void enableIpv6(java.lang.String)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.OutputStream)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.Writer)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethod(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)> (NO_CATEGORY)
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)> (NO_CATEGORY)
<com.google.common.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream,int)> (NO_CATEGORY)
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultimap$WrappedList: boolean addAll(int,java.util.Collection)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)> (NO_CATEGORY)
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int,int)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setDisplayViewports(com.android.server.display.DisplayViewport,com.android.server.display.DisplayViewport)> (NO_CATEGORY)
<com.android.deskclock.Alarm$DaysOfWeek: void set(int,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowStateAnimator: void setTransparentRegionHint(android.graphics.Region)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setCheckable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setMasterMute(boolean,int,android.os.IBinder)> (NO_CATEGORY)
<com.android.settings.wifi.WifiDialog: void setCancelButton(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)> (NO_CATEGORY)
<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceRemoved(java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void locationCallbackFinished(android.location.ILocationListener)> (NO_CATEGORY)
<libcore.icu.NativeBreakIterator: void setText(java.lang.String)> (NO_CATEGORY)
<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)> (NO_CATEGORY)
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.ExpandableDictionary: int setBigramAndGetFrequency(java.lang.String,java.lang.String,com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMap: void putAll(java.util.Map)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)> (NO_CATEGORY)
<android.app.ListFragment: void setSelection(int)> (NO_CATEGORY)
<android.webkit.CallbackProxy: android.net.Uri openFileChooser(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)> (NO_CATEGORY)
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int formatVolume(java.lang.String)> (NO_CATEGORY)
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)> (NO_CATEGORY)
<android.widget.RemoteViews$SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void moveQueueItem(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)> (NO_CATEGORY)
<android.os.IUpdateLock$Stub$Proxy: void releaseUpdateLock(android.os.IBinder)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void wifiFirmwareReload(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppOrientation(android.view.IApplicationToken,int)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(int,byte)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void wipeData(int,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setJpegQuality(int)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.display.OverlayDisplayAdapter: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<android.net.nsd.INsdManager$Stub$Proxy: void setEnabled(boolean)> (NO_CATEGORY)
<com.android.internal.util.AsyncService: android.os.IBinder onBind(android.content.Intent)> (NO_CATEGORY)
<android.os.IUserManager$Stub$Proxy: void setUserIcon(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.webkit.WebViewClassic: boolean restorePicture(android.os.Bundle,java.io.File)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeByte(int)> (NO_CATEGORY)
<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void write(java.io.OutputStream)> (NO_CATEGORY)
<com.android.browser.homepages.Template$ListEntity: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)> (NO_CATEGORY)
<com.android.emailcommon.service.PolicyServiceProxy: void setAccountHoldFlag(long,boolean)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void setSubject(java.lang.String)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)> (NO_CATEGORY)
<android.preference.DialogPreference: void setNegativeButtonText(int)> (NO_CATEGORY)
<android.net.sip.SipAudioCall: void sendDtmf(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean startViewServer(int)> (NO_CATEGORY)
<android.media.AudioManager: void registerAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)> (NO_CATEGORY)
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: boolean setComposingText(java.lang.CharSequence,int)> (NO_CATEGORY)
<java.text.DateFormat: void setLenient(boolean)> (NO_CATEGORY)
<android.os.IRemoteCallback$Stub$Proxy: void sendResult(android.os.Bundle)> (NO_CATEGORY)
<com.android.emailcommon.provider.HostAuth: void setConnection(java.lang.String,java.lang.String,int,int)> (NO_CATEGORY)
<com.android.settings.net.SummaryForAllUidLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,long,long)> (NO_CATEGORY)
<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> (NO_CATEGORY)
<android.media.AudioService: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)> (NO_CATEGORY)
<libcore.io.DropBox$DefaultReporter: void addData(java.lang.String,byte[],int)> (NO_CATEGORY)
<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPattern(byte[],int)> (NO_CATEGORY)
<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiNative: void setPowerSave(boolean)> (NO_CATEGORY)
<com.android.exchange.provider.MailboxUtilities: void setFlagsAndChildrensParentKey(android.content.Context,android.database.Cursor,java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: void userForeground(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setUseClientMode(boolean)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompatICS: void setMenuVisibility(android.app.Fragment,boolean)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putLong(long)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)> (NO_CATEGORY)
<java.util.AbstractList$SubAbstractList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean performDexOpt(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.StatusBarIconView: boolean set(com.android.internal.statusbar.StatusBarIcon)> (NO_CATEGORY)
<org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.text.SimpleDateFormat formatFor(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.IThumbnailRetriever$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void forceVolumeControlStream(int,android.os.IBinder)> (NO_CATEGORY)
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)> (NO_CATEGORY)
<android.net.InterfaceConfiguration: void setFlag(java.lang.String)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setTranslationY(float)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setNeedClientAuth(boolean)> (NO_CATEGORY)
<android.widget.Switch: void setTrackResource(int)> (NO_CATEGORY)
<android.nfc.tech.IsoDep: void setTimeout(int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setPlaybackInfoForRcc(int,int,int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setLabelFor(int,int)> (NO_CATEGORY)
<android.widget.Spinner$DialogPopup: void setHorizontalOffset(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)> (NO_CATEGORY)
<android.util.Slog: int d(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.LightsService$Light: void setFlashing(int,int,int,int)> (NO_CATEGORY)
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat: void setOverScrollMode(android.view.View,int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void sendMeetingResponse(long,int)> (NO_CATEGORY)
<com.android.camera.ListPreference: void setValueIndex(int)> (NO_CATEGORY)
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(char[],java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: void alert(byte,byte)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setArtwork(int,android.graphics.Bitmap)> (NO_CATEGORY)
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)> (NO_CATEGORY)
<com.android.settings.DevelopmentSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)> (NO_CATEGORY)
<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(java.lang.Object)> (NO_CATEGORY)
<gov.nist.core.LexerCore: gov.nist.core.Token match(int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void reloadFolderList(android.content.Context,long,boolean)> (NO_CATEGORY)
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(java.lang.String,int,int)> (NO_CATEGORY)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setFixedSize(int,int)> (NO_CATEGORY)
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)> (NO_CATEGORY)
<android.media.AudioService: void setMasterMute(boolean,int,android.os.IBinder)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)> (NO_CATEGORY)
<android.app.Instrumentation: void setInTouchMode(boolean)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void addPackageToPreferred(java.lang.String)> (NO_CATEGORY)
<android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])> (NO_CATEGORY)
<android.bluetooth.IBluetoothManager$Stub$Proxy: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.References: void setRel(java.lang.String)> (NO_CATEGORY)
<android.app.IBackupAgent$Stub$Proxy: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])> (NO_CATEGORY)
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)> (NO_CATEGORY)
<android.preference.MultiCheckPreference: void setEntries(int)> (NO_CATEGORY)
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<java.security.SecureRandom: void setSeed(long)> (NO_CATEGORY)
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)> (NO_CATEGORY)
<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: boolean isWakeLockLevelSupported(int)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setDimensions(int)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSource(boolean)> (NO_CATEGORY)
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: int removeTrack(long)> (NO_CATEGORY)
<com.android.browser.NavTabScroller: void setScrollValue(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic$FocusTransitionDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.media.MediaPlayer: void setDataSource(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingVector: void setICID(java.lang.String)> (NO_CATEGORY)
<android.graphics.Matrix$1: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)> (NO_CATEGORY)
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ApplicationErrorReport$BatteryInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPictureSize(int,int)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void unbindRemoteViewsService(int,android.content.Intent)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setGpsLongitude(double)> (NO_CATEGORY)
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (NO_CATEGORY)
<android.graphics.drawable.LayerDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.graphics.drawable.RotateDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean switchUser(int)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])> (NO_CATEGORY)
<android.nfc.INfcAdapterExtras$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void notifyOnRemoteViewsLoaded(int,android.widget.RemoteViews)> (NO_CATEGORY)
<java.net.Socks4Message: void setUserId(java.lang.String)> (NO_CATEGORY)
<android.webkit.ZoomManager: void setInitialScaleInPercent(int)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])> (NO_CATEGORY)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ServiceIntentInfo)> (NO_CATEGORY)
<com.android.systemui.screenshot.GlobalScreenshot: void notifyScreenshotError(android.content.Context,android.app.NotificationManager)> android.permission.VIBRATE (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void switchUser(int,android.os.IRemoteCallback)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void createSession(com.android.internal.view.IInputMethodCallback)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.Parser: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)> (NO_CATEGORY)
<com.android.exchange.EasOutboxService: void sendMessage(android.content.Context,long,com.android.emailcommon.provider.EmailContent$Message)> (NO_CATEGORY)
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.sip.SipService$SipSessionGroupExt: void setListener(android.net.sip.ISipSessionListener)> (NO_CATEGORY)
<dalvik.system.profiler.HprofData: void addStackTrace(dalvik.system.profiler.HprofData$StackTrace,int[])> (NO_CATEGORY)
<javax.net.ssl.SSLParameters: void setCipherSuites(java.lang.String[])> (NO_CATEGORY)
<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setCountryCode(java.lang.String)> (NO_CATEGORY)
<android.preference.TwoStatePreference: void setSummaryOff(int)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)> (NO_CATEGORY)
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)> (NO_CATEGORY)
<java.math.BigInt: java.math.BigInt exp(java.math.BigInt,int)> (NO_CATEGORY)
<android.os.Bundle: void putCharArray(java.lang.String,char[])> (NO_CATEGORY)
<java.net.ServerSocket: void setSoTimeout(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AcceptEncoding: void setQValue(float)> (NO_CATEGORY)
<android.os.UserManager: void setGuestEnabled(boolean)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)> (NO_CATEGORY)
<android.content.IContentService$Stub$Proxy: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)> (NO_CATEGORY)
<android.app.Activity: void openContextMenu(android.view.View)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void startReverseTethering(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setSPIServer(int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)> (NO_CATEGORY)
<gov.nist.javax.sip.SipProviderImpl: void setListeningPoint(javax.sip.ListeningPoint)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollX(java.lang.Object,int)> (NO_CATEGORY)
<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)> (NO_CATEGORY)
<com.android.emailcommon.provider.Policy: android.net.Uri save(android.content.Context)> (NO_CATEGORY)
<android.media.MediaPlayer: void setSurface(android.view.Surface)> (NO_CATEGORY)
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> (NO_CATEGORY)
<android.widget.RemoteViews$SetPendingIntentTemplate: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbDevice)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: void putPendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean removeTask(int,int)> (NO_CATEGORY)
<android.net.BaseNetworkStateTracker: void setTeardownRequested(boolean)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayShowTitleEnabled(boolean)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<gov.nist.javax.sip.ListeningPointImpl: void sendHeartbeat(java.lang.String,int)> (NO_CATEGORY)
<org.xml.sax.helpers.NamespaceSupport$Context: void setParent(org.xml.sax.helpers.NamespaceSupport$Context)> (NO_CATEGORY)
<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)> (NO_CATEGORY)
<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$HCViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)> (NO_CATEGORY)
<android.app.backup.IRestoreObserver$Stub$Proxy: void onUpdate(int,java.lang.String)> (NO_CATEGORY)
<android.view.IInputFilter$Stub$Proxy: void install(android.view.IInputFilterHost)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setAddedCount(java.lang.Object,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)> (NO_CATEGORY)
<com.android.inputmethod.latin.LocaleUtils: java.util.HashMap localeAndTimeStrToHashMap(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)> (NO_CATEGORY)
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)> (NO_CATEGORY)
<com.android.settings.SoundSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)> android.permission.WRITE_SETTINGS (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.server.am.IntentBindRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)> (NO_CATEGORY)
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)> (NO_CATEGORY)
<com.android.internal.statusbar.StatusBarIconList: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)> (NO_CATEGORY)
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void requestThumbnail(android.os.IBinder)> (NO_CATEGORY)
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void sendMessageRequest(com.android.exchange.Request)> (NO_CATEGORY)
<android.app.ApplicationErrorReport$AnrInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfosResult(java.util.List,int)> (NO_CATEGORY)
<android.media.IRingtonePlayer$Stub$Proxy: void play(android.os.IBinder,android.net.Uri,int)> (NO_CATEGORY)
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean setSelection(int,int)> (NO_CATEGORY)
<android.view.ViewStub: void setVisibility(int)> (NO_CATEGORY)
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)> (NO_CATEGORY)
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)> (NO_CATEGORY)
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.Writer)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendReinvite(javax.sip.Dialog,java.lang.String)> (NO_CATEGORY)
<android.widget.OverScroller: void setFinalY(int)> (NO_CATEGORY)
<android.os.Message: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void playSoundEffectVolume(int,float)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void dispatchWallpaperOffsets(float,float,float,float,boolean)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setTransformationInfo(float,float,float,float,float,float,float,float)> (NO_CATEGORY)
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)> (NO_CATEGORY)
<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)> (NO_CATEGORY)
<android.content.IClipboard$Stub$Proxy: void setPrimaryClip(android.content.ClipData)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)> (NO_CATEGORY)
<android.app.backup.IRestoreSession$Stub$Proxy: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setAutofillEnabled(boolean)> (NO_CATEGORY)
<android.bluetooth.IBluetooth$Stub$Proxy: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityServer: void setValue(java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)> (NO_CATEGORY)
<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardHostView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<java.io.FilterOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setUserPassword(java.lang.String)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)> (NO_CATEGORY)
<java.io.PrintStream: void write(byte[],int,int)> (NO_CATEGORY)
<java.nio.channels.Channels$ChannelOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerState$1: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.net.DatagramSocket: void setSoTimeout(int)> (NO_CATEGORY)
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)> (NO_CATEGORY)
<android.os.IUserManager$Stub$Proxy: boolean removeUser(int)> (NO_CATEGORY)
<com.android.camera.ModePicker: void setEnabled(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)> (NO_CATEGORY)
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)> (NO_CATEGORY)
<android.view.HardwareRenderer: void setupDiskCache(java.io.File)> (NO_CATEGORY)
<android.content.IClipboard$Stub$Proxy: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void grantPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.music.MusicUtils$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void setLogRecSize(int)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasDefaults(java.lang.String,int)> (NO_CATEGORY)
<java.io.File: boolean setWritable(boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowStateAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: void setEnabledCipherSuites(int,java.lang.String[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.ACCESS_WIFI_STATE (NO_CATEGORY)
<com.android.ex.variablespeed.MediaPlayerDataSource: void setAsSourceFor(android.media.MediaPlayer)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)> (NO_CATEGORY)
<android.widget.Switch: void setChecked(boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.NotificationData: boolean setUserLocked(android.view.View,boolean)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean)> (NO_CATEGORY)
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellChecker(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setMasterVolume(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.From: void setTag(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> (NO_CATEGORY)
<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquired(int)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAssertedService: void setApplicationIdentifiers(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews: void setViewVisibility(int,int)> (NO_CATEGORY)
<com.android.server.MountService: boolean isObbMounted(java.lang.String)> (NO_CATEGORY)
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(int,long)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void setCountryCode(java.lang.String,boolean)> (NO_CATEGORY)
<libcore.icu.RuleBasedCollatorICU: void setDecomposition(int)> (NO_CATEGORY)
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Media: void setAddress(java.lang.String)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserHistoryDictIOUtils: void writeDictionaryBinary(java.io.OutputStream,com.android.inputmethod.latin.UserHistoryDictIOUtils$BigramDictionaryInterface,com.android.inputmethod.latin.UserHistoryDictionaryBigramList,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary: void setRestrictBackground(boolean)> android.permission.VIBRATE (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.KeyboardCodesSet: void setLanguage(java.lang.String)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void setDbg(boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: int handleAppTransitionReadyLocked(com.android.server.wm.WindowList)> (NO_CATEGORY)
<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> (NO_CATEGORY)
<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int finalizeSecureContainer(java.lang.String)> (NO_CATEGORY)
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)> (NO_CATEGORY)
<com.android.phone.CallNotifier: void sendMwiChangedDelayed(long)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setBeforeText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setParent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: boolean waitForWindowDrawn(android.os.IBinder,android.os.IRemoteCallback)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.PointerTracker: void setKeyDetector(com.android.inputmethod.keyboard.KeyDetector)> (NO_CATEGORY)
<gov.nist.javax.sip.header.HeaderFactoryImpl: void setPrettyEncoding(boolean)> (NO_CATEGORY)
<android.os.ResultReceiver: void send(int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setPlaybackState(int,int,long)> (NO_CATEGORY)
<android.os.IVibratorService$Stub$Proxy: void cancelVibrate(android.os.IBinder)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setAlpha(float)> (NO_CATEGORY)
<java.util.Date: void setDate(int)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)> (NO_CATEGORY)
<android.view.ViewGroup: void setClipToPadding(boolean)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])> (NO_CATEGORY)
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserHistoryDictionary$1: void setUnigram(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<java.io.PipedOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.camera.ui.PopupManager: void notifyShowPopup(android.view.View)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)> android.permission.MOUNT_UNMOUNT_FILESYSTEMS (NO_CATEGORY)
<com.android.internal.widget.IRemoteViewsFactory$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)> (NO_CATEGORY)
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.MinSE: void setValue(java.lang.String)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setUserParam(java.lang.String)> (NO_CATEGORY)
<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)> (NO_CATEGORY)
<android.widget.ImageView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)> (NO_CATEGORY)
<android.os.storage.StorageManager$ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)> (NO_CATEGORY)
<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])> (NO_CATEGORY)
<com.android.deskclock.Alarms: void enableAlarm(android.content.Context,int,boolean)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,double)> (NO_CATEGORY)
<com.android.browser.BaseUi: void showComboView(com.android.browser.UI$ComboViews,android.os.Bundle)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription: void setAddress(java.lang.String)> (NO_CATEGORY)
<com.android.settings.bluetooth.LocalBluetoothAdapter: void setBluetoothEnabled(boolean)> (NO_CATEGORY)
<com.android.settings.SecuritySettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)> (NO_CATEGORY)
<android.app.IUserSwitchObserver$Stub$Proxy: void onUserSwitchComplete(int)> (NO_CATEGORY)
<android.os.IUpdateLock$Stub$Proxy: void acquireUpdateLock(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<com.android.inputmethod.keyboard.internal.AlphabetShiftState: void setShiftLocked(boolean)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setVideoStabilization(boolean)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)> (NO_CATEGORY)
<org.apache.http.impl.HttpConnectionMetricsImpl: void setMetric(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Fields: void setBandwidth(java.lang.String,int)> (NO_CATEGORY)
<android.os.Registrant: void notifyException(java.lang.Throwable)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPattern(byte[],int)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePattern(int)> (NO_CATEGORY)
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setPerformAccessibilityActionResult(boolean,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void deleteAccountPIMData(long)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setPlaybackState(int,int,long)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)> (NO_CATEGORY)
<java.util.concurrent.ConcurrentHashMap: void setEntryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int,java.util.concurrent.ConcurrentHashMap$HashEntry)> (NO_CATEGORY)
<android.widget.GridLayout$LayoutParams: void setGravity(int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setPositivePrefix(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])> (NO_CATEGORY)
<android.net.wifi.WifiConfigStore: boolean disableNetwork(int,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean hasGrantedPolicy(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.util.SparseBooleanArray: void append(int,boolean)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)> (NO_CATEGORY)
<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setMaxScrollY(java.lang.Object,int)> (NO_CATEGORY)
<android.content.ContextWrapper: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppVisibility(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.provider.SyncStateContract$Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void removeDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)> (NO_CATEGORY)
<android.app.Fragment: void setInitialSavedState(android.app.Fragment$SavedState)> (NO_CATEGORY)
<android.media.MediaRecorder: void setAudioSamplingRate(int)> (NO_CATEGORY)
<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: void writeExternal(java.io.ObjectOutput)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeChar(int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)> (NO_CATEGORY)
<com.android.settings.bluetooth.A2dpProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int,int)> (NO_CATEGORY)
<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)> (NO_CATEGORY)
<libcore.io.DropBox$DefaultReporter: void addText(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)> (NO_CATEGORY)
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: boolean hasNamedWallpaper(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)> (NO_CATEGORY)
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSource(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void sendMessageDelayed(android.os.Message,long)> (NO_CATEGORY)
<android.widget.ListView$FocusSelector: android.widget.ListView$FocusSelector setup(int,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine$ConnectModeState: boolean processMessage(android.os.Message)> (NO_CATEGORY)
<com.android.deskclock.SetAlarm: long access$100(com.android.deskclock.SetAlarm,com.android.deskclock.Alarm)> (NO_CATEGORY)
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.SyncAdaptersCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setIntegrityProtected(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setDialogListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)> (NO_CATEGORY)
<android.filterfw.io.GraphReader: void addReference(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putFloat(int,float)> (NO_CATEGORY)
<java.nio.SocketChannelImpl$SocketAdapter: void bind(java.net.SocketAddress)> (NO_CATEGORY)
<com.android.server.location.CountryDetectorBase: void notifyListener(android.location.Country)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)> (NO_CATEGORY)
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setIcon(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.net.DummyDataStateTracker: boolean setRadio(boolean)> (NO_CATEGORY)
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine$L2ConnectedState: boolean processMessage(android.os.Message)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<com.android.server.dreams.DreamController: void startDream(android.os.Binder,android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<com.android.phone.PhoneUtils: void setMute(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.browser.Controller: void sharePage(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: boolean performAction(int,int,android.os.Bundle)> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setLocalName(int,java.lang.String)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setBounds(int,int,int,int)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void setMobileDataEnabled(boolean)> (NO_CATEGORY)
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)> (NO_CATEGORY)
<java.net.Socket: void setPerformancePreferences(int,int,int)> (NO_CATEGORY)
<com.android.internal.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> (NO_CATEGORY)
<com.google.common.collect.Maps$AbstractFilteredMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl$DatagramSocketAdapter: void bind(java.net.SocketAddress)> (NO_CATEGORY)
<android.bluetooth.BluetoothInputDevice: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setScrollX(java.lang.Object,int)> (NO_CATEGORY)
<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.text.style.URLSpan: void onClick(android.view.View)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: void <init>(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)> (NO_CATEGORY)
<com.android.settings.wifi.WifiConfigUiForSetupWizardXL: void setTitle(int)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByViewId(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void dragRecipientExited(android.view.IWindow)> (NO_CATEGORY)
<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void write(java.io.OutputStream)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void attachToken(android.os.IBinder)> (NO_CATEGORY)
<android.media.AudioManager: void setMicrophoneMute(boolean)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setEras(java.lang.String[])> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)> (NO_CATEGORY)
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)> (NO_CATEGORY)
<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)> (NO_CATEGORY)
<com.android.emailcommon.utility.AttachmentUtilities: void saveAttachment(android.content.Context,java.io.InputStream,com.android.emailcommon.provider.EmailContent$Attachment)> (NO_CATEGORY)
<com.android.inputmethod.latin.ResizableIntArray: void set(com.android.inputmethod.latin.ResizableIntArray)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollY(java.lang.Object,int)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)> (NO_CATEGORY)
<com.android.deskclock.Alarm$DaysOfWeek: void set(com.android.deskclock.Alarm$DaysOfWeek)> (NO_CATEGORY)
<com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<com.android.server.AlarmManagerService: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<java.io.PrintWriter: void println(char)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setNeedClientAuth(boolean)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Fields: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setHomePage(java.lang.String)> (NO_CATEGORY)
<java.io.PrintWriter: void println(int)> (NO_CATEGORY)
<com.android.camera.ComboPreferences: void setLocalId(android.content.Context,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setParent(java.lang.Object,android.view.View)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)> (NO_CATEGORY)
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(short)> (NO_CATEGORY)
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)> (NO_CATEGORY)
<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)> (NO_CATEGORY)
<com.android.emailcommon.provider.EmailContent$Body: void updateBodyWithMessageId(android.content.Context,long,android.content.ContentValues)> (NO_CATEGORY)
<android.widget.RelativeLayout$DependencyGraph: void add(android.view.View)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.ElementType: void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setRequestMethod(java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void tetherInterface(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplayDensity(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void removeRoute(java.lang.String,android.net.RouteInfo)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setForcedDisplayDensity(int,int)> (NO_CATEGORY)
<android.net.INetworkStatsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.display.IDisplayManager$Stub$Proxy: void registerCallback(android.hardware.display.IDisplayManagerCallback)> (NO_CATEGORY)
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.media.AudioManager: void setStreamMute(int,boolean)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: boolean updateRotationUncheckedLocked(boolean)> (NO_CATEGORY)
<com.google.common.collect.ForwardingMapEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<java.util.Vector: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.GLES20RecordingCanvas: void setNextPoolable(java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,java.lang.String,byte[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)> (NO_CATEGORY)
<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.Activity: void setProgressBarIndeterminate(boolean)> (NO_CATEGORY)
<com.android.settings.AccessibilitySettings$ToggleSwitch: void setCheckedInternal(boolean)> (NO_CATEGORY)
<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)> (NO_CATEGORY)
<com.android.browser.Tab: void setParent(com.android.browser.Tab)> (NO_CATEGORY)
<android.os.Bundle: void putBoolean(java.lang.String,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setGlobalAlert(long)> (NO_CATEGORY)
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setRotationLw(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putChar(char)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setSoftInputMode(int)> (NO_CATEGORY)
<android.widget.TextView$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityThread$EventLoggingReporter: void report(int,java.lang.Object[])> (NO_CATEGORY)
<com.android.internal.util.FastXmlSerializer: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void loadAttachmentStatus(long,long,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setUtranCellID3GPP(java.lang.String)> (NO_CATEGORY)
<android.animation.ValueAnimator: void setFloatValues(float[])> (NO_CATEGORY)
<android.animation.AnimatorSet: void setTarget(java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityThread$ApplicationThread: void setSchedulingGroup(int)> (NO_CATEGORY)
<org.apache.http.params.BasicHttpParams: void setParameters(java.lang.String[],java.lang.Object)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setAttentionLight(boolean,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String)> (NO_CATEGORY)
<com.android.server.dreams.DreamController: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setCameraDistance(float)> (NO_CATEGORY)
<android.app.AlarmManager: void setTime(long)> (NO_CATEGORY)
<android.view.Surface: void setAlpha(float)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isActivePasswordSufficient(int)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setButtonBrightnessOverrideFromWindowManager(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineAppData: int placeTo(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setBounds(android.graphics.Rect)> (NO_CATEGORY)
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.os.StrictMode$ViolationInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.os.Handler: boolean sendEmptyMessage(int)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int,int)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter: void set(org.apache.harmony.xml.dom.DOMConfigurationImpl,java.lang.Object)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeLong(long)> (NO_CATEGORY)
<java.util.zip.Inflater: void setDictionary(byte[],int,int)> (NO_CATEGORY)
<com.android.internal.logging.AndroidHandler$1: java.lang.String format(java.util.logging.LogRecord)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<java.io.PrintWriter: void println(float)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: org.apache.harmony.xnet.provider.jsse.SSLClientSessionCache usingDirectory(java.io.File)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)> (NO_CATEGORY)
<org.kxml2.io.KXmlParser: void setInput(java.io.InputStream,java.lang.String)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setDnsServersForInterface(java.lang.String,java.lang.String[])> (NO_CATEGORY)
<libcore.icu.CollationElementIteratorICU: void setText(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)> (NO_CATEGORY)
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void addSecondaryRoute(java.lang.String,android.net.RouteInfo)> (NO_CATEGORY)
<android.webkit.HTML5VideoViewProxy$VideoPlayer: void setBaseLayer(int)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)> (NO_CATEGORY)
<com.android.exchange.provider.MailboxUtilities: void setFlagsAndChildrensParentKey(android.content.Context,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.Lists$AbstractListWrapper: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)> (NO_CATEGORY)
<java.sql.Date: void setHours(int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void setPageHoveringOverDeleteDropTarget(int,boolean)> (NO_CATEGORY)
<com.android.browser.NavigationBarTablet: void setFocusState(boolean)> (NO_CATEGORY)
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void setHasTransientState(android.view.View,boolean)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void startAnimation(android.view.animation.Animation,android.view.animation.Animation)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void addDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)> (NO_CATEGORY)
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog createDialog(gov.nist.javax.sip.stack.SIPTransaction)> (NO_CATEGORY)
<android.webkit.WebViewClassic$WebViewInputConnection: void setAutoFillable(int)> (NO_CATEGORY)
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.view.Window: void setDefaultWindowFormat(int)> (NO_CATEGORY)
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])> (NO_CATEGORY)
<android.app.LoadedApk$WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)> (NO_CATEGORY)
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)> (NO_CATEGORY)
<android.widget.AbsListView$3: boolean sendKeyEvent(android.view.KeyEvent)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.Activity: void setContentView(int)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setScanMode(boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)> (NO_CATEGORY)
<java.io.EmulatedFieldsForDumping: void put(java.lang.String,char)> (NO_CATEGORY)
<com.android.settings.bluetooth.PanProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onStart(java.lang.String)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceAlert(java.lang.String,long)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void closeSystemDialogs(java.lang.String)> (NO_CATEGORY)
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void sendMail(long)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.am.IntentBindRecord: void dumpInService(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)> (NO_CATEGORY)
<com.android.inputmethod.latin.Suggest: void setUserDictionary(com.android.inputmethod.latin.UserBinaryDictionary)> (NO_CATEGORY)
<android.view.GLES20Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.FusionDictionary: void setBigram(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)> (NO_CATEGORY)
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)> (NO_CATEGORY)
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])> (NO_CATEGORY)
<java.net.MulticastSocket: void setTimeToLive(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,byte[],int,int)> (NO_CATEGORY)
<java.io.StringWriter: java.io.StringWriter append(char)> (NO_CATEGORY)
<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[],int,int)> (NO_CATEGORY)
<android.webkit.SslCertLookupTable: void setIsAllowed(android.net.http.SslError)> (NO_CATEGORY)
<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setNeedClientAuth(boolean)> (NO_CATEGORY)
<libcore.net.http.HttpConnection: void setSoTimeout(int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setMultiplier(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.SIPIfMatch: void setValue(java.lang.String)> (NO_CATEGORY)
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)> (NO_CATEGORY)
<android.nfc.NfcAdapter: void setP2pModes(int,int)> (NO_CATEGORY)
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.content.IContentService$Stub$Proxy: void removeStatusChangeListener(android.content.ISyncStatusObserver)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: boolean dumpWindows(java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void untetherInterface(java.lang.String)> (NO_CATEGORY)
<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putDouble(double)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: void setHardKeyboardEnabled(boolean)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)> (NO_CATEGORY)
<com.android.browser.NavigationBarTablet: void setCurrentUrlIsBookmark(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)> (NO_CATEGORY)
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)> (NO_CATEGORY)
<android.webkit.JWebCoreJavaBridge: void storeFilePathForContentUri(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Explicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)> (NO_CATEGORY)
<gov.nist.core.DuplicateNameValueList: gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue)> (NO_CATEGORY)
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.webkit.HTML5VideoViewProxy: void onPrepared(android.media.MediaPlayer)> (NO_CATEGORY)
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void setSize(java.lang.Object,int,int)> (NO_CATEGORY)
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)> (NO_CATEGORY)
<android.location.Location: void set(android.location.Location)> (NO_CATEGORY)
<android.bluetooth.IBluetoothManager$Stub$Proxy: android.bluetooth.IBluetooth registerAdapter(android.bluetooth.IBluetoothManagerCallback)> (NO_CATEGORY)
<gov.nist.core.Host: void setHostname(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)> (NO_CATEGORY)
<com.google.common.collect.ForwardingMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.settings.Utils: boolean updateHeaderToSpecificActivityFromMetaDataOrRemove(android.content.Context,java.util.List,android.preference.PreferenceActivity$Header)> (NO_CATEGORY)
<android.webkit.CookieManagerClassic: void setAcceptCookie(boolean)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)> (NO_CATEGORY)
<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)> (NO_CATEGORY)
<com.android.settings.wifi.WifiDialog: void setForgetButton(java.lang.CharSequence)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)> (NO_CATEGORY)
<com.android.org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)> (NO_CATEGORY)
<android.net.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)> (NO_CATEGORY)
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setTTLParam(int)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Reason: void setCause(int)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle)> (NO_CATEGORY)
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)> (NO_CATEGORY)
<android.widget.ProgressBar$RefreshData: void setNextPoolable(java.lang.Object)> (NO_CATEGORY)
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeDouble(double)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void closeSystemDialogs(java.lang.String)> (NO_CATEGORY)
<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.BROADCAST_STICKY (NO_CATEGORY)
<com.android.settings.bluetooth.HidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void createDisplayContentLocked(android.view.Display)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: boolean performAction(int,int,android.os.Bundle)> (NO_CATEGORY)
<android.webkit.ZoomControlExternal$ExtendedZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)> (NO_CATEGORY)
<gov.nist.javax.sip.header.CallID: void setCallId(java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneState(int)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void enqueue(long[],int)> (NO_CATEGORY)
<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)> (NO_CATEGORY)
<android.net.INetworkStatsSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<libcore.io.BlockGuardOs: java.io.FileDescriptor open(java.lang.String,int,int)> (NO_CATEGORY)
<java.text.DecimalFormat: void setPositiveSuffix(java.lang.String)> (NO_CATEGORY)
<android.widget.DatePicker: void setCalendarViewShown(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setToIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean shutdown(int)> (NO_CATEGORY)
<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: void bind(java.net.SocketAddress,int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setRecordingHint(boolean)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(byte[],java.io.OutputStream)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)> (NO_CATEGORY)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)> (NO_CATEGORY)
<android.os.FileObserver$ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)> (NO_CATEGORY)
<java.net.SocketImpl: void setPerformancePreferences(int,int,int)> (NO_CATEGORY)
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)> (NO_CATEGORY)
<com.android.browser.NavigationBarTablet: void setTitleBar(com.android.browser.TitleBar)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setDataDependency(int,boolean)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIconVisibility(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setNegativeSuffix(java.lang.String)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeShort(int)> (NO_CATEGORY)
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)> (NO_CATEGORY)
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: void setSystemUiVisibility(int,int)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: boolean outOfMemory(android.view.IWindow)> (NO_CATEGORY)
<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.app.DownloadManager: void setAccessAllDownloads(boolean)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: void openFile(java.lang.String)> (NO_CATEGORY)
<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setPolicyDataEnable(int,boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PanelHolder: void setSelectedPanel(com.android.systemui.statusbar.phone.PanelView)> (NO_CATEGORY)
<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)> (NO_CATEGORY)
<android.os.Debug: void setFieldsOn(java.lang.Class)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)> (NO_CATEGORY)
<com.android.browser.NavigationBarTablet: void setFavicon(android.graphics.Bitmap)> (NO_CATEGORY)
<android.preference.DialogPreference: void setDialogTitle(int)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$StrongEntry: void setExpirationTime(long)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])> (NO_CATEGORY)
<com.android.inputmethod.latin.InputPointers: void set(com.android.inputmethod.latin.InputPointers)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: void registerListener(android.net.INetworkPolicyListener)> (NO_CATEGORY)
<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.ServiceRoute: void setValue(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)> (NO_CATEGORY)
<android.view.ViewRootImpl$TakenSurfaceHolder: void setKeepScreenOn(boolean)> (NO_CATEGORY)
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Integer: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.server.power.DisplayPowerController: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)> (NO_CATEGORY)
<android.view.GLES20Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatHC: void setLayerType(android.view.View,int,android.graphics.Paint)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: void putSession(javax.net.ssl.SSLSession)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)> (NO_CATEGORY)
<com.android.camera.ui.RotateLayout: void setOrientation(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setTime(long)> (NO_CATEGORY)
<android.net.wifi.WifiNative: boolean setBand(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ContentType: void setContentSubType(java.lang.String)> (NO_CATEGORY)
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)> (NO_CATEGORY)
<com.android.org.bouncycastle.util.io.Streams: long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMultimap: boolean putAll(java.lang.Object,java.lang.Iterable)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setInputMethodMode(int)> (NO_CATEGORY)
<android.graphics.drawable.LayerDrawable: void setDither(boolean)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendInviteOk(javax.sip.RequestEvent,android.net.sip.SipProfile,java.lang.String,javax.sip.ServerTransaction,java.lang.String,int)> (NO_CATEGORY)
<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<android.preference.MultiCheckPreference: void setEntryValues(int)> (NO_CATEGORY)
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setDataSource(java.lang.String)> (NO_CATEGORY)
<com.android.browser.widget.BookmarkThumbnailWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setAutoFillProfile(android.webkit.WebSettingsClassic$AutoFillProfile,android.os.Message)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setFocusable(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)> (NO_CATEGORY)
<libcore.icu.RuleBasedCollatorICU: void setAttribute(int,int)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService: void attachServiceLocked(com.android.server.WallpaperManagerService$WallpaperConnection,com.android.server.WallpaperManagerService$WallpaperData)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void setNotificationsEnabledForPackage(java.lang.String,boolean)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)> (NO_CATEGORY)
<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.util.List)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub$Proxy: void installCaCertificate(byte[])> (NO_CATEGORY)
<org.apache.james.mime4j.field.DelegatingFieldParser: void setFieldParser(java.lang.String,org.apache.james.mime4j.field.FieldParser)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPTransactionStack: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)> (NO_CATEGORY)
<java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setAddedCount(java.lang.Object,int)> (NO_CATEGORY)
<android.app.LoadedApk$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)> (NO_CATEGORY)
<com.android.server.dreams.DreamManagerService: void testDream(android.content.ComponentName)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeUTF(java.lang.String)> (NO_CATEGORY)
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)> (NO_CATEGORY)
<android.widget.RemoteViews$BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)> (NO_CATEGORY)
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)> (NO_CATEGORY)
<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,com.android.browser.AddBookmarkPage$EditBookmarkInfo)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void extendVerificationTimeout(int,int,long)> (NO_CATEGORY)
<android.net.wifi.WifiNative: void setScanInterval(int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setAnimationScale(int,float)> (NO_CATEGORY)
<android.view.IDisplayContentChangeListener$Stub$Proxy: void onWindowTransition(int,int,android.view.WindowInfo)> (NO_CATEGORY)
<com.android.settings.widget.InvertedChartAxis: boolean setSize(float)> (NO_CATEGORY)
<com.android.exchange.adapter.EmailSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)> (NO_CATEGORY)
<libcore.io.Streams: byte[] readFullyNoClose(java.io.InputStream)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)> (NO_CATEGORY)
<android.graphics.Bitmap: void setPixel(int,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setRemovedCount(java.lang.Object,int)> (NO_CATEGORY)
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)> (NO_CATEGORY)
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void setSize(java.lang.Object,int,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long,int)> (NO_CATEGORY)
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)> (NO_CATEGORY)
<android.util.SparseIntArray: void append(int,int)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putFloat(float)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setHost(gov.nist.core.Host)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)> (NO_CATEGORY)
<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)> (NO_CATEGORY)
<android.view.View$9: void setValue(android.view.View,float)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationInfo: void setQop(java.lang.String)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeInt(int)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int playSilence(android.os.IBinder,long,int,android.os.Bundle)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void grantPermission(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.location.IGpsStatusListener$Stub$Proxy: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> (NO_CATEGORY)
<com.android.music.IMediaPlaybackService$Stub$Proxy: int removeTracks(int,int)> (NO_CATEGORY)
<android.preference.Preference: boolean persistString(java.lang.String)> (NO_CATEGORY)
<java.net.MulticastSocket: void setTTL(byte)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)> (NO_CATEGORY)
<android.content.BroadcastReceiver$PendingResult: void setExtrasClassLoader(java.lang.ClassLoader)> (NO_CATEGORY)
<org.json.JSONObject: java.lang.String toString(int)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)> (NO_CATEGORY)
<com.android.browser.BrowserSettings: void setLastRunPaused(boolean)> (NO_CATEGORY)
<java.text.DecimalFormat: void setMaximumIntegerDigits(int)> (NO_CATEGORY)
<gov.nist.core.LexerCore: java.util.Hashtable addLexer(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<java.util.zip.Inflater: void setDictionary(byte[])> (NO_CATEGORY)
<android.webkit.ZoomManager: void onFirstLayout(android.webkit.WebViewCore$DrawData)> (NO_CATEGORY)
<android.widget.RemoteViews: void setImageViewResource(int,int)> (NO_CATEGORY)
<com.android.internal.location.ProviderRequest: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setWifiEnabled(boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnableSessionCreation(boolean)> (NO_CATEGORY)
<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object)> (NO_CATEGORY)
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)> (NO_CATEGORY)
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)> (NO_CATEGORY)
<javax.net.ssl.SSLContext: void setDefault(javax.net.ssl.SSLContext)> (NO_CATEGORY)
<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardViewMediator: void setCurrentUser(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)> (NO_CATEGORY)
<java.net.DatagramSocket: void setReceiveBufferSize(int)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage: void setExtendedHeaders(java.lang.String)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setFilterBitmap(boolean)> (NO_CATEGORY)
<org.apache.http.message.BasicHttpResponse: void setReasonPhrase(java.lang.String)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void unregisterAudioFocusClient(java.lang.String)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)> (NO_CATEGORY)
<java.net.ServerSocket: void setReuseAddress(boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setFirewallInterfaceRule(java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction)> (NO_CATEGORY)
<gov.nist.javax.sip.header.CallInfo: void setPurpose(java.lang.String)> (NO_CATEGORY)
<java.sql.Date: void setTime(long)> (NO_CATEGORY)
<java.nio.PipeImpl$PipeSinkChannel: long write(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void reportInetCondition(int,int)> (NO_CATEGORY)
<com.android.server.display.WifiDisplayAdapter: void dumpLocked(java.io.PrintWriter)> (NO_CATEGORY)
<com.android.systemui.statusbar.DelegateViewHelper: void setInitialTouchRegion(android.view.View[])> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)> (NO_CATEGORY)
<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder: void setFloatValues(float[])> (NO_CATEGORY)
<android.bluetooth.BluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)> (NO_CATEGORY)
<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void setNetworkPreference(int)> android.permission.CHANGE_WIFI_STATE (NO_CATEGORY)
<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<android.net.LinkCapabilities$1: android.net.LinkCapabilities createFromParcel(android.os.Parcel)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)> (NO_CATEGORY)
<android.app.IBackupAgent$Stub$Proxy: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)> (NO_CATEGORY)
<com.android.browser.homepages.Template$HashMapEntityData: void writeValue(java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)> (NO_CATEGORY)
<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])> (NO_CATEGORY)
<android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext: void onTerminate(javax.microedition.khronos.egl.EGLContext)> (NO_CATEGORY)
<com.android.server.LightsService$Light: void setColor(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollX(java.lang.Object,int)> (NO_CATEGORY)
<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab: void setRightTabResources(int,int,int,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> (NO_CATEGORY)
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(float[],int,int)> (NO_CATEGORY)
<android.preference.PreferenceScreen$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.view.Surface: void setTransparentRegionHint(android.graphics.Region)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(byte[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setPortClient(int)> (NO_CATEGORY)
<java.net.Socket: void setTrafficClass(int)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: boolean updateOrientationFromAppTokensLocked(boolean)> (NO_CATEGORY)
<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void setMobileDataEnabled(boolean)> android.permission.CHANGE_NETWORK_STATE (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)> (NO_CATEGORY)
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)> (NO_CATEGORY)
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)> (NO_CATEGORY)
<java.net.ServerSocket: void setPerformancePreferences(int,int,int)> (NO_CATEGORY)
<android.view.animation.Transformation: void set(android.view.animation.Transformation)> (NO_CATEGORY)
<android.net.http.Headers: void setLastModified(java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.provider.EmailContent$Message: android.net.Uri save(android.content.Context)> (NO_CATEGORY)
<java.util.AbstractList$SubAbstractList$SubAbstractListIterator: void set(java.lang.Object)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Implicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream,java.lang.String)> (NO_CATEGORY)
<com.android.inputmethod.latin.LatinIME: void setCandidatesView(android.view.View)> (NO_CATEGORY)
<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.inputmethod.latin.LocaleUtils: java.util.Locale constructLocaleFromString(java.lang.String)> (NO_CATEGORY)
<android.location.Location: void setExtras(android.os.Bundle)> (NO_CATEGORY)
<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportSuccessfulPasswordAttempt(int)> (NO_CATEGORY)
<java.lang.ProcessManager: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void clearInterfaceAddresses(java.lang.String)> (NO_CATEGORY)
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)> (NO_CATEGORY)
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader set(int,gov.nist.javax.sip.header.SIPHeader)> (NO_CATEGORY)
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.camera.CameraSettings: void initialCameraPictureSize(android.content.Context,android.hardware.Camera$Parameters)> (NO_CATEGORY)
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<org.xml.sax.helpers.ParserAdapter: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setPlaybackState(int,int,long)> (NO_CATEGORY)
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)> (NO_CATEGORY)
<gov.nist.javax.sip.clientauthutils.CredentialsCache: void cacheAuthorizationHeader(java.lang.String,javax.sip.header.AuthorizationHeader,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setFocusable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)> (NO_CATEGORY)
<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)> (NO_CATEGORY)
<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)> (NO_CATEGORY)
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePassword(int)> (NO_CATEGORY)
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)> (NO_CATEGORY)
<android.location.IGpsStatusProvider$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setHardKeyboardStatus(boolean,boolean)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void userActivity(long,int,int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void addPackageToPreferred(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: void setBoolean(java.lang.String,boolean,int)> (NO_CATEGORY)
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)> (NO_CATEGORY)
<com.android.music.MusicUtils: void setIntPref(android.content.Context,java.lang.String,int)> (NO_CATEGORY)
<java.util.AbstractList$FullListIterator: void set(java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean,boolean)> (NO_CATEGORY)
<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setQHeader(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.net.http.Headers: void setCacheControl(java.lang.String)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechService$Stub$Proxy: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)> (NO_CATEGORY)
<android.location.IGpsStatusListener$Stub$Proxy: void onFirstFix(int)> (NO_CATEGORY)
<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)> (NO_CATEGORY)
<java.text.MessageFormat: void setFormats(java.text.Format[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.Protocol: void setProtocol(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingRegion(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.NameMap: void addExtensionHeader(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: void unmountVolume(java.lang.String,boolean,boolean)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: void setSessionTimeout(int)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)> (NO_CATEGORY)
<android.widget.NumberPicker: void setValue(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setItemCount(java.lang.Object,int)> (NO_CATEGORY)
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void updateStatusBarVisibilityLocked(int)> (NO_CATEGORY)
<android.app.Activity: void onCreate(android.os.Bundle)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpSessionsLocked(java.io.PrintWriter,boolean)> (NO_CATEGORY)
<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingText(java.lang.CharSequence,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setSubtitle(int)> (NO_CATEGORY)
<android.media.AudioService: void setMode(int,android.os.IBinder)> android.permission.MODIFY_AUDIO_SETTINGS (NO_CATEGORY)
<com.android.server.connectivity.Tethering$TetherInterfaceSM: void setLastErrorAndTransitionToInitialState(int)> (NO_CATEGORY)
<com.android.providers.userdictionary.DictionaryBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void removeClient(com.android.internal.view.IInputMethodClient)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setDnsForwarders(java.lang.String[])> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setMinimumFractionDigits(int)> (NO_CATEGORY)
<com.android.settings.net.ChartDataLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,com.android.settings.DataUsageSummary$AppItem,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)> (NO_CATEGORY)
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setLightsOn(boolean)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean deleteFolder(long,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.NativeFrame: void setFloats(float[])> (NO_CATEGORY)
<android.os.Bundle: void putFloatArray(java.lang.String,float[])> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToNextInputMethod(android.os.IBinder,boolean)> (NO_CATEGORY)
<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<libcore.net.http.HttpURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.io.File: boolean setReadable(boolean)> (NO_CATEGORY)
<java.sql.Date: void setSeconds(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setQop(java.lang.String)> (NO_CATEGORY)
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)> (NO_CATEGORY)
<android.app.ExpandableListActivity: void setSelectedGroup(int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)> (NO_CATEGORY)
<com.android.systemui.screenshot.GlobalScreenshot: void notifyScreenshotError(android.content.Context,android.app.NotificationManager)> (NO_CATEGORY)
<android.view.IWindow$Stub$Proxy: void moved(int,int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ActivityIntentInfo)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)> (NO_CATEGORY)
<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)> (NO_CATEGORY)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setRotationX(float)> (NO_CATEGORY)
<com.android.camera.ui.ZoomControl: void setActivated(boolean)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeBodyPart: void writeTo(java.io.OutputStream)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setGradientType(int)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.graphics.Matrix: void setScale(float,float)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setScrollY(java.lang.Object,int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeBytes(java.lang.String)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyProperties)> (NO_CATEGORY)
<javax.xml.validation.Validator: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<java.lang.ThreadLocal: void set(java.lang.Object)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastEnabled(int)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,java.lang.Object,long)> (NO_CATEGORY)
<com.google.common.collect.Serialization: void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeBoolean(boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)> (NO_CATEGORY)
<com.android.exchange.adapter.Serializer: void writeLiteralString(java.io.OutputStream,java.lang.String)> (NO_CATEGORY)
<android.media.AudioManager: void setWiredHeadsetOn(boolean)> (NO_CATEGORY)
<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)> (NO_CATEGORY)
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int,int)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setScanType(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<android.widget.ListPopupWindow: void setModal(boolean)> (NO_CATEGORY)
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: boolean isTagEnabled(java.lang.String)> (NO_CATEGORY)
<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)> (NO_CATEGORY)
<android.widget.TabWidget: void setEnabled(boolean)> (NO_CATEGORY)
<android.webkit.ZoomManager: boolean onNewPicture(android.webkit.WebViewCore$DrawData)> (NO_CATEGORY)
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void setState(java.lang.Object)> (NO_CATEGORY)
<android.app.AlarmManager: void setTimeZone(java.lang.String)> (NO_CATEGORY)
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)> (NO_CATEGORY)
<android.widget.CalendarView$WeeksAdapter: void setSelectedDay(java.util.Calendar)> (NO_CATEGORY)
<java.nio.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void clearPackagePreferredActivities(java.lang.String)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChangedInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setParent(java.lang.Object,android.view.View)> (NO_CATEGORY)
<org.apache.http.auth.AuthSchemeRegistry: void setItems(java.util.Map)> (NO_CATEGORY)
<com.android.browser.XLargeUi: void setUrlTitle(com.android.browser.Tab)> (NO_CATEGORY)
<gov.nist.javax.sip.message.MessageFactoryImpl: void setDefaultContentEncodingCharset(java.lang.String)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: void sendInviteRequestTerminated(javax.sip.message.Request,javax.sip.ServerTransaction)> (NO_CATEGORY)
<android.app.DownloadManager$Query: android.app.DownloadManager$Query setFilterByStatus(int)> (NO_CATEGORY)
<android.widget.EditText: void setSelection(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setBeforeText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setWebChromeClient(android.webkit.WebChromeClient)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.settings.SettingsPreferenceFragment: boolean startFragment(android.app.Fragment,java.lang.String,int,android.os.Bundle)> (NO_CATEGORY)
<android.content.pm.PackageParser$Component: void setPackageName(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setItemCount(java.lang.Object,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: void setHandleAlpha(float)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)> (NO_CATEGORY)
<android.app.DownloadManager: void restartDownload(long[])> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)> (NO_CATEGORY)
<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IMediaContainerService$Stub$Proxy: boolean checkInternalFreeStorage(android.net.Uri,boolean,long)> (NO_CATEGORY)
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void notifyLoginSucceeded(long)> (NO_CATEGORY)
<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(int,double)> (NO_CATEGORY)
<android.media.MediaRouter$UserRouteInfo: void setIconResource(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceUp(java.lang.String)> (NO_CATEGORY)
<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)> (NO_CATEGORY)
<java.io.DataOutputStream: void write(int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)> (NO_CATEGORY)
<java.nio.PipeImpl$PipeSinkChannel: long write(java.nio.ByteBuffer[])> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setAllowUserInteraction(boolean)> (NO_CATEGORY)
<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: void addToBlacklist(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setGlobal(boolean)> (NO_CATEGORY)
<android.media.AudioService: void setPlaybackInfoForRcc(int,int,int)> (NO_CATEGORY)
<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[],int)> (NO_CATEGORY)
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setNavigationMode(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setTop(int)> (NO_CATEGORY)
<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder before(android.animation.Animator)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void access$300(com.android.server.DevicePolicyManagerService,int)> (NO_CATEGORY)
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)> (NO_CATEGORY)
<android.app.UiModeManager: void enableCarMode(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setRemovedCount(java.lang.Object,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceQuota(java.lang.String)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (NO_CATEGORY)
<android.app.LoadedApk$ReceiverDispatcher$InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> (NO_CATEGORY)
<android.content.res.XmlBlock$Parser: void setProperty(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub$Proxy: java.lang.String requestPrivateKey(java.lang.String)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void engineShown(android.service.wallpaper.IWallpaperEngine)> (NO_CATEGORY)
<gov.nist.core.LexerCore: void addKeyword(java.lang.String,int)> (NO_CATEGORY)
<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)> (NO_CATEGORY)
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.NodeImpl: void setTextContent(java.lang.String)> (NO_CATEGORY)
<android.app.ContextImpl: void startActivities(android.content.Intent[])> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)> (NO_CATEGORY)
<android.os.Bundle: void putByte(java.lang.String,byte)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setReadTimeout(int)> (NO_CATEGORY)
<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putFloat(float)> (NO_CATEGORY)
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void notifyTetheredOfNewUpstreamIface(java.lang.String)> (NO_CATEGORY)
<android.location.Address$1: android.location.Address createFromParcel(android.os.Parcel)> (NO_CATEGORY)
<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)> android.permission.SET_WALLPAPER (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setAnimDimParams(int,com.android.server.wm.DimAnimator$Parameters)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.ToggleSlider: void setChecked(boolean)> (NO_CATEGORY)
<org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBaseQuotedPrintable(java.lang.String)> (NO_CATEGORY)
<android.nfc.INfcTag$Stub$Proxy: boolean ndefIsWritable(int)> (NO_CATEGORY)
<android.animation.ValueAnimator: void setIntValues(int[])> (NO_CATEGORY)
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)> (NO_CATEGORY)
<org.apache.http.cookie.CookieSpecRegistry: void setItems(java.util.Map)> (NO_CATEGORY)
<com.android.server.wm.Session: void setWallpaperPosition(android.os.IBinder,float,float,float,float)> (NO_CATEGORY)
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager$ResolveListener)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedClientCertRequest(android.webkit.ClientCertRequestHandler,java.lang.String)> (NO_CATEGORY)
<libcore.io.ForwardingOs: void setegid(int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)> (NO_CATEGORY)
<android.text.style.MetricAffectingSpan$Passthrough: void updateDrawState(android.text.TextPaint)> (NO_CATEGORY)
<gov.nist.javax.sip.ListeningPointImpl: void setSentBy(java.lang.String)> (NO_CATEGORY)
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void reconcileAccounts(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$Counter: void logState(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)> (NO_CATEGORY)
<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setAction(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingVector: void setOriginatingIOI(java.lang.String)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setDataDependency(int,boolean)> (NO_CATEGORY)
<com.google.common.collect.ImmutableMultiset: boolean setCount(java.lang.Object,int,int)> (NO_CATEGORY)
<com.android.internal.os.LoggingPrintStream: void write(byte[])> (NO_CATEGORY)
<java.nio.SocketChannelImpl$SocketChannelOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.server.IntentResolverOld: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void addKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)> android.permission.SET_WALLPAPER_COMPONENT (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setScrollable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> (NO_CATEGORY)
<gov.nist.core.ParserCore: void dbg_enter(java.lang.String)> (NO_CATEGORY)
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)> (NO_CATEGORY)
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)> (NO_CATEGORY)
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)> android.permission.BROADCAST_STICKY (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,byte[])> (NO_CATEGORY)
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setStartOffset(long)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)> (NO_CATEGORY)
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)> (NO_CATEGORY)
<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setUseClientMode(boolean)> (NO_CATEGORY)
<android.os.Bundle: void putShort(java.lang.String,short)> (NO_CATEGORY)
<android.os.Bundle: void putInt(java.lang.String,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setSource(java.lang.Object,android.view.View)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void reboot(boolean,java.lang.String,boolean)> (NO_CATEGORY)
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)> (NO_CATEGORY)
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)> (NO_CATEGORY)
<android.util.SparseArray: void setValueAt(int,java.lang.Object)> (NO_CATEGORY)
<android.net.nsd.NsdServiceInfo: void setTxtRecord(android.net.nsd.DnsSdTxtRecord)> (NO_CATEGORY)
<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: void setExpirationTime(long)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void removePermission(java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream: void write(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PPreferredService: void setValue(java.lang.String)> (NO_CATEGORY)
<android.webkit.DeviceMotionAndOrientationManager: void setUseMock()> (NO_CATEGORY)
<android.app.ActivityManager$RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PServedUser: void setValue(java.lang.String)> (NO_CATEGORY)
<java.io.PrintStream: void println(char)> (NO_CATEGORY)
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)> (NO_CATEGORY)
<android.webkit.CallbackProxy: void onReceivedSslError(android.webkit.SslErrorHandler,android.net.http.SslError)> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> (NO_CATEGORY)
<java.util.Collections$UnmodifiableList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setLogo(int)> (NO_CATEGORY)
<com.android.server.wm.ScreenRotationAnimation: boolean setRotationInTransaction(int,android.view.SurfaceSession,long,float,int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setParent(java.lang.Object,android.view.View)> (NO_CATEGORY)
<com.android.browser.PreloadController: void setupAutoFill(android.os.Message)> (NO_CATEGORY)
<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void stopAccessPoint(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager$WpsListener)> (NO_CATEGORY)
<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: void writeExternal(java.io.ObjectOutput)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppWillBeHidden(android.os.IBinder)> (NO_CATEGORY)
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)> (NO_CATEGORY)
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)> (NO_CATEGORY)
<com.android.server.net.NetworkPolicyManagerService: void setUidPolicy(int,int)> (NO_CATEGORY)
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)> (NO_CATEGORY)
<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)> (NO_CATEGORY)
<com.android.camera.ui.PopupManager: void setOnOtherPopupShowedListener(com.android.camera.ui.PopupManager$OnOtherPopupShowedListener)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void setSessionTimeout(int)> (NO_CATEGORY)
<android.app.Instrumentation: void sendCharacterSync(int)> (NO_CATEGORY)
<com.android.internal.view.IInputContext$Stub$Proxy: void setSelection(int,int)> (NO_CATEGORY)
<android.filterfw.core.SimpleFrame: void setFloats(float[])> (NO_CATEGORY)
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> (NO_CATEGORY)
<gov.nist.javax.sip.header.RSeq: void setSequenceNumber(int)> (NO_CATEGORY)
<android.webkit.WebViewCore: void setMockGeolocationPosition(double,double,double)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setText(int)> (NO_CATEGORY)
<com.android.internal.util.FastXmlSerializer: void setPrefix(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.WallpaperManager: void setResource(int)> (NO_CATEGORY)
<android.webkit.WebView: void saveWebArchive(java.lang.String)> (NO_CATEGORY)
<android.webkit.DeviceMotionAndOrientationManager: void setMockOrientation(boolean,double,boolean,double,boolean,double)> (NO_CATEGORY)
<java.text.CollationElementIterator: void setOffset(int)> (NO_CATEGORY)
<android.app.IProcessObserver$Stub$Proxy: void onImportanceChanged(int,int,int)> (NO_CATEGORY)
<java.net.DatagramSocket: void setNetworkInterface(java.net.NetworkInterface)> (NO_CATEGORY)
<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)> (NO_CATEGORY)
<android.widget.ProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnProfile)> (NO_CATEGORY)
<java.math.BigDecimal: java.math.BigDecimal setScale(int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String,android.content.BroadcastReceiver)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setFirewallEgressDestRule(java.lang.String,int,boolean)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel)> (NO_CATEGORY)
<android.location.ICountryDetector$Stub$Proxy: void addCountryListener(android.location.ICountryListener)> (NO_CATEGORY)
<android.widget.OverScroller$SplineOverScroller: void notifyEdgeReached(int,int,int)> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void accessoryDetached(android.hardware.usb.UsbAccessory)> (NO_CATEGORY)
<java.io.PrintStream: void println(long)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.ReferredBy: void setValue(java.lang.String)> (NO_CATEGORY)
<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.AbsListView: void setItemChecked(int,boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void startReverseTethering(java.lang.String)> (NO_CATEGORY)
<android.widget.OverScroller: void setFriction(float)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: boolean hasKeys(int,int,int[],boolean[])> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub$Proxy: void opComplete(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setToIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.preference.PreferenceActivity$Header: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)> (NO_CATEGORY)
<android.webkit.BrowserFrame: void addJavascriptInterface(java.lang.Object,java.lang.String,boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserHistoryDictionary$1: void setBigram(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.settings.net.NetworkPolicyEditor: void setMobilePolicySplit(java.lang.String,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.AuthenticationHeader: void setAlgorithm(java.lang.String)> (NO_CATEGORY)
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)> (NO_CATEGORY)
<android.app.Notification$Action: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.ViewCompatJB: void setImportantForAccessibility(android.view.View,int)> (NO_CATEGORY)
<android.preference.DialogPreference: void setPositiveButtonText(int)> (NO_CATEGORY)
<android.util.Slog: int w(java.lang.String,java.lang.String)> (NO_CATEGORY)
<java.util.BitSet: void set(int)> (NO_CATEGORY)
<com.android.server.AppWidgetService: int allocateAppWidgetId(java.lang.String,int)> (NO_CATEGORY)
<com.android.exchange.ExchangeService: void setWatchdogAlarm(long,long)> (NO_CATEGORY)
<libcore.io.ForwardingOs: void setuid(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollX(java.lang.Object,int)> (NO_CATEGORY)
<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)> (NO_CATEGORY)
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setScheme(java.lang.String)> (NO_CATEGORY)
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setHdmiPlugged(boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int mountSecureContainer(java.lang.String,java.lang.String,int)> (NO_CATEGORY)
<com.android.providers.calendar.CalendarProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)> (NO_CATEGORY)
<com.android.server.wm.Session: boolean performHapticFeedback(android.view.IWindow,int,boolean)> (NO_CATEGORY)
<com.android.server.location.PassiveProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setHost(gov.nist.core.Host)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setInputFilter(android.view.IInputFilter)> (NO_CATEGORY)
<android.preference.ListPreference: void setEntryValues(int)> (NO_CATEGORY)
<android.widget.ProgressBar: void setVisibility(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setFromIndex(java.lang.Object,int)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompat: void setMenuVisibility(android.app.Fragment,boolean)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: boolean isSecureContainerMounted(java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)> (NO_CATEGORY)
<android.os.storage.StorageManager$ListenerDelegate: void sendShareAvailabilityChanged(boolean)> (NO_CATEGORY)
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)> android.permission.RECORD_AUDIO (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)> (NO_CATEGORY)
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)> (NO_CATEGORY)
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setKeepAlive(boolean)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setFloats(float[])> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])> (NO_CATEGORY)
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(double)> (NO_CATEGORY)
<android.os.BatteryStats$HistoryItem: void writeDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void setInTouchMode(boolean)> (NO_CATEGORY)
<android.view.GLES20DisplayList: void setScaleX(float)> (NO_CATEGORY)
<java.security.Security: void setProperty(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,int)> (NO_CATEGORY)
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)> (NO_CATEGORY)
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)> (NO_CATEGORY)
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)> (NO_CATEGORY)
<android.app.WallpaperManager$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: boolean isUidForeground(int)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)> (NO_CATEGORY)
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.graphics.drawable.ClipDrawable: void setAlpha(int)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)> (NO_CATEGORY)
<org.apache.harmony.xml.dom.ElementImpl: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Media: void setBandwidth(java.lang.String,int)> (NO_CATEGORY)
<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect,boolean)> (NO_CATEGORY)
<android.support.v13.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput$ByteBufferWrapper: void put(byte)> (NO_CATEGORY)
<android.net.NetworkPolicyManager: void dumpPolicy(java.io.PrintWriter,int)> (NO_CATEGORY)
<com.android.browser.BookmarkItem: void setFavicon(android.graphics.Bitmap)> (NO_CATEGORY)
<com.android.browser.HistoryItem: void setIsBookmark(boolean)> (NO_CATEGORY)
<com.android.settings.drawable.DrawableWrapper: void setAlpha(int)> (NO_CATEGORY)
<android.security.KeyStore: boolean put(java.lang.String,byte[])> (NO_CATEGORY)
<android.graphics.RectF: void set(android.graphics.Rect)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)> (NO_CATEGORY)
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)> (NO_CATEGORY)
<gov.nist.core.DuplicateNameValueList: void set(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)> (NO_CATEGORY)
<com.android.providers.media.IMtpService$Stub$Proxy: void sendObjectAdded(int)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setDoOutput(boolean)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(byte[],int,int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])> (NO_CATEGORY)
<android.support.v4.view.ViewCompatJellybeanMr1: void setLabelFor(android.view.View,int)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)> (NO_CATEGORY)
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[])> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)> (NO_CATEGORY)
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)> (NO_CATEGORY)
<android.hardware.usb.IUsbManager$Stub$Proxy: void setMassStorageBackingFile(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setScrollPosition(int,int)> (NO_CATEGORY)
<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)> (NO_CATEGORY)
<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStopped(int)> (NO_CATEGORY)
<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)> (NO_CATEGORY)
<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.net.INetworkStatsService$Stub$Proxy: void setUidForeground(int,boolean)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)> (NO_CATEGORY)
<com.android.server.WifiService: void setFrequencyBand(int,boolean)> (NO_CATEGORY)
<com.android.browser.XLargeUi: void setFavicon(com.android.browser.Tab)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)> (NO_CATEGORY)
<com.android.deskclock.Alarms: long setAlarm(android.content.Context,com.android.deskclock.Alarm)> (NO_CATEGORY)
<android.graphics.drawable.ColorDrawable: void setAlpha(int)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService: int installExistingPackage(java.lang.String)> (NO_CATEGORY)
<android.hardware.display.IDisplayManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<java.lang.reflect.Field: void setShort(java.lang.Object,short)> (NO_CATEGORY)
<android.net.sip.ISipSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.widget.NumberPicker$AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.Path: void setValue(java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.NotificationData$Entry: boolean setUserLocked(boolean)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)> (NO_CATEGORY)
<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onError(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)> (NO_CATEGORY)
<android.drm.DrmManagerClient$EventHandler: void handleMessage(android.os.Message)> (NO_CATEGORY)
<com.android.phone.CallFeaturesSetting: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: void requestNetworkTransitionWakelock(java.lang.String)> (NO_CATEGORY)
<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)> (NO_CATEGORY)
<org.apache.http.impl.SocketHttpClientConnection: void setSocketTimeout(int)> (NO_CATEGORY)
<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setParent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)> (NO_CATEGORY)
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)> (NO_CATEGORY)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void updateFolderList(long)> (NO_CATEGORY)
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)> (NO_CATEGORY)
<android.net.wifi.WifiConfigStore: boolean selectNetwork(int)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void updateAppWidgetIds(int[],android.widget.RemoteViews)> (NO_CATEGORY)
<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)> (NO_CATEGORY)
<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)> (NO_CATEGORY)
<java.util.Collections$SingletonMap$1$1$1: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> (NO_CATEGORY)
<android.service.dreams.IDreamManager$Stub$Proxy: void setDreamComponents(android.content.ComponentName[])> (NO_CATEGORY)
<android.widget.Spinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> (NO_CATEGORY)
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)> (NO_CATEGORY)
<com.android.emailcommon.internet.MimeMessage$MimeMessageBuilder: void body(org.apache.james.mime4j.BodyDescriptor,java.io.InputStream)> (NO_CATEGORY)
<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendInvite(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String,java.lang.String,gov.nist.javax.sip.header.extensions.ReferredByHeader,java.lang.String)> (NO_CATEGORY)
<android.app.IProcessObserver$Stub$Proxy: void onProcessDied(int,int)> (NO_CATEGORY)
<android.view.animation.AnimationSet: void setRepeatMode(int)> (NO_CATEGORY)
<org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.hardware.display.IDisplayManager$Stub$Proxy: void connectWifiDisplay(java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine$ScanModeState: boolean processMessage(android.os.Message)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)> (NO_CATEGORY)
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.net.PlainDatagramSocketImpl: void setTimeToLive(int)> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder,int)> (NO_CATEGORY)
<android.security.IKeyChainService$Stub$Proxy: boolean deleteCaCertificate(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.net.IConnectivityManager$Stub$Proxy: int setUsbTethering(boolean)> (NO_CATEGORY)
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)> (NO_CATEGORY)
<libcore.icu.NativeDecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void setMapped(boolean)> (NO_CATEGORY)
<android.webkit.WebView: boolean performAccessibilityAction(int,android.os.Bundle)> (NO_CATEGORY)
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: boolean isUserRunning(int,boolean)> (NO_CATEGORY)
<android.content.IContentService$Stub$Proxy: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)> android.permission.MANAGE_APP_TOKENS (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1: void setValue(java.lang.Object,float)> (NO_CATEGORY)
<android.media.AudioManager: void setStreamVolume(int,int,int)> (NO_CATEGORY)
<android.preference.EditTextPreference$SavedState: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<android.view.IRotationWatcher$Stub$Proxy: void onRotationChanged(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)> (NO_CATEGORY)
<android.media.IRemoteVolumeObserver$Stub$Proxy: void dispatchRemoteVolumeUpdate(int,int)> (NO_CATEGORY)
<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)> (NO_CATEGORY)
<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> android.permission.VIBRATE (NO_CATEGORY)
<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.hardware.display.IDisplayManager$Stub$Proxy: void renameWifiDisplay(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setAlgorithm(java.lang.String)> (NO_CATEGORY)
<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)> (NO_CATEGORY)
<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)> (NO_CATEGORY)
<dalvik.system.VMRuntime: long setMinimumHeapSize(long)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityClient: void setValue(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setCustomView(int)> (NO_CATEGORY)
<com.android.server.pm.PackageSettingBase: void copyFrom(com.android.server.pm.PackageSettingBase)> (NO_CATEGORY)
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.SessionExpires: void setValue(java.lang.String)> (NO_CATEGORY)
<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void writeAppData(byte[],int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.http.message.BasicHttpResponse: void setStatusCode(int)> (NO_CATEGORY)
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)> (NO_CATEGORY)
<android.view.Surface: void setLayer(int)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])> (NO_CATEGORY)
<gov.nist.javax.sip.header.Event: void setEventId(java.lang.String)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,long)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedSubtype(int)> android.permission.WRITE_SETTINGS (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)> (NO_CATEGORY)
<android.location.ILocationListener$Stub$Proxy: void onProviderDisabled(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void dumpTokensLocked(java.io.PrintWriter,boolean)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMultimap: boolean put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<com.android.browser.BookmarkItem: void setFaviconBackground(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<com.android.server.usb.UsbService: void setMassStorageBackingFile(java.lang.String)> (NO_CATEGORY)
<android.text.format.Time: long setJulianDay(int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)> (NO_CATEGORY)
<java.util.zip.Deflater: void setDictionary(byte[],int,int)> (NO_CATEGORY)
<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)> (NO_CATEGORY)
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.Writer)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: void hideMySoftInput(android.os.IBinder,int)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void displayCompletions(android.view.inputmethod.CompletionInfo[])> (NO_CATEGORY)
<android.media.IRemoteControlDisplay$Stub$Proxy: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void adjustMasterVolume(int,int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)> (NO_CATEGORY)
<org.xml.sax.helpers.NamespaceSupport$Context: void declarePrefix(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.view.View$8: void setValue(android.view.View,float)> (NO_CATEGORY)
<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)> (NO_CATEGORY)
<com.android.server.location.MockProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)> (NO_CATEGORY)
<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnableSessionCreation(boolean)> (NO_CATEGORY)
<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)> (NO_CATEGORY)
<java.lang.reflect.Field: void setDouble(java.lang.Object,double)> (NO_CATEGORY)
<com.android.server.input.PersistentDataStore$InputDeviceState: boolean setCurrentKeyboardLayout(java.lang.String)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void registerStatusBar(com.android.internal.statusbar.IStatusBar,com.android.internal.statusbar.StatusBarIconList,java.util.List,java.util.List,int[],java.util.List)> (NO_CATEGORY)
<com.android.server.AppWidgetService: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)> (NO_CATEGORY)
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[])> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Fields: void setAddress(java.lang.String)> (NO_CATEGORY)
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1Enumerated: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPMessage: void setHeader(gov.nist.javax.sip.header.SIPHeaderList)> (NO_CATEGORY)
<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)> (NO_CATEGORY)
<com.android.providers.downloads.DownloadInfo: void notifyPauseDueToSize(boolean)> (NO_CATEGORY)
<com.android.exchange.utility.CalendarUtilities: long createCalendar(com.android.exchange.EasSyncService,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: boolean performAction(java.lang.Object,int,android.os.Bundle)> (NO_CATEGORY)
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)> (NO_CATEGORY)
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Challenge: void setParameter(gov.nist.core.NameValue)> (NO_CATEGORY)
<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)> (NO_CATEGORY)
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)> (NO_CATEGORY)
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setAttribute(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Join: void setToTag(java.lang.String)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)> (NO_CATEGORY)
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)> (NO_CATEGORY)
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)> (NO_CATEGORY)
<com.google.common.base.Equivalence$EquivalentToPredicate: boolean apply(java.lang.Object)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)> (NO_CATEGORY)
<android.location.Address: void setExtras(android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPassword(byte[],int)> (NO_CATEGORY)
<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityAction(int,long,int,android.os.Bundle)> (NO_CATEGORY)
<com.android.phone.DTMFTwelveKeyDialer: void startTone(char,boolean)> (NO_CATEGORY)
<com.android.server.display.OverlayDisplayWindow: void dump(java.io.PrintWriter)> (NO_CATEGORY)
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setOverScrollMode(android.view.View,int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.preference.DialogPreference: void setDialogMessage(int)> (NO_CATEGORY)
<com.android.server.net.NetworkIdentitySet: void writeToStream(java.io.DataOutputStream)> (NO_CATEGORY)
<libcore.net.http.RequestHeaders: void setIfModifiedSince(java.util.Date)> (NO_CATEGORY)
<android.widget.ToggleButton: void setChecked(boolean)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setItemCount(java.lang.Object,int)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding: int access$300(byte[],int,java.lang.String)> (NO_CATEGORY)
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.content.pm.PackageParser$Service: void setPackageName(java.lang.String)> (NO_CATEGORY)
<android.widget.LinearLayout: void setWeightSum(float)> (NO_CATEGORY)
<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)> (NO_CATEGORY)
<com.android.server.am.AppBindRecord: void dump(java.io.PrintWriter,java.lang.String)> (NO_CATEGORY)
<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)> (NO_CATEGORY)
<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[])> (NO_CATEGORY)
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void notifyLoginFailed(long)> (NO_CATEGORY)
<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)> (NO_CATEGORY)
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(long)> (NO_CATEGORY)
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setHardKeyboardEnabled(boolean)> (NO_CATEGORY)
<com.android.camera.ListPreference: void persistStringValue(java.lang.String)> (NO_CATEGORY)
<android.app.IActivityManager$WaitResult: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: void launchWidgetPicker(int)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean performContextMenuAction(int)> (NO_CATEGORY)
<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Fields: void setEncryption(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.media.AudioService: void playSoundEffectVolume(int,float)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setExposureCompensation(int)> (NO_CATEGORY)
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performAction(int,int,android.os.Bundle)> (NO_CATEGORY)
<android.service.dreams.IDreamManager$Stub$Proxy: void finishSelf(android.os.IBinder)> (NO_CATEGORY)
<com.android.server.pm.UserManagerService: void makeInitialized(int)> (NO_CATEGORY)
<java.util.zip.ZipEntry: void setTime(long)> (NO_CATEGORY)
<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)> (NO_CATEGORY)
<com.android.internal.policy.impl.PhoneWindowManager: void setAttachedWindowFrames(android.view.WindowManagerPolicy$WindowState,int,int,android.view.WindowManagerPolicy$WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TCPMessageProcessor: void cacheMessageChannel(gov.nist.javax.sip.stack.TCPMessageChannel)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setLogo(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort)> (NO_CATEGORY)
<android.media.AudioManager: void setVibrateSetting(int,int)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void write(int)> (NO_CATEGORY)
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)> (NO_CATEGORY)
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)> (NO_CATEGORY)
<android.content.ContentValues: void putAll(android.content.ContentValues)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.SecurityAgree: void setMode(java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)> (NO_CATEGORY)
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void startFreezingScreen(int,int)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardViewMediator$2: void setNeedsInput(boolean)> (NO_CATEGORY)
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])> (NO_CATEGORY)
<android.app.ISearchManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.settings.bluetooth.PanProfile: void setLocalRole(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setDnsServersForInterface(java.lang.String,java.lang.String[])> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchGenericMotionEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)> (NO_CATEGORY)
<android.media.IAudioService$Stub$Proxy: void adjustSuggestedStreamVolume(int,int,int)> (NO_CATEGORY)
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.message.SIPResponse: void setSIPVersion(java.lang.String)> (NO_CATEGORY)
<android.hardware.usb.UsbManager: void setMassStorageBackingFile(java.lang.String)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)> (NO_CATEGORY)
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher)> (NO_CATEGORY)
<com.google.common.base.Predicates$InstanceOfPredicate: boolean apply(java.lang.Object)> (NO_CATEGORY)
<android.widget.RelativeLayout: void setHorizontalGravity(int)> (NO_CATEGORY)
<android.net.LocalSocket: void setReceiveBufferSize(int)> (NO_CATEGORY)
<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)> (NO_CATEGORY)
<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeFloat(float)> (NO_CATEGORY)
<android.view.accessibility.IAccessibilityInteractionConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<android.content.pm.IPackageMoveObserver$Stub$Proxy: void packageMoved(java.lang.String,int)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<java.net.Socket: void setOOBInline(boolean)> (NO_CATEGORY)
<com.android.phone.sip.SipSharedPreferences: void setPrimaryAccount(java.lang.String)> (NO_CATEGORY)
<android.preference.ListPreference: void setEntries(int)> (NO_CATEGORY)
<android.os.storage.IMountService$Stub$Proxy: int encryptStorage(java.lang.String)> (NO_CATEGORY)
<android.view.ViewGroup: boolean notifyChildOfDrag(android.view.View)> (NO_CATEGORY)
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)> (NO_CATEGORY)
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void setAppGroupId(android.os.IBinder,int)> (NO_CATEGORY)
<com.android.browser.NavTabScroller: void setAdapter(android.widget.BaseAdapter)> (NO_CATEGORY)
<com.android.settings.wifi.WifiDialog: void setSubmitButton(java.lang.CharSequence)> (NO_CATEGORY)
<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putChar(int,char)> (NO_CATEGORY)
<android.filterfw.core.FilterContext: void setFrameManager(android.filterfw.core.FrameManager)> (NO_CATEGORY)
<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)> (NO_CATEGORY)
<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)> (NO_CATEGORY)
<com.android.settings.net.NetworkPolicyEditor: void setPolicyCycleDay(android.net.NetworkTemplate,int,java.lang.String)> (NO_CATEGORY)
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Object)> (NO_CATEGORY)
<android.support.v4.view.AccessibilityDelegateCompatIcs$1: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<libcore.net.http.RetryableOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.app.ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)> (NO_CATEGORY)
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,boolean)> (NO_CATEGORY)
<android.widget.AbsSpinner: void setSelection(int)> (NO_CATEGORY)
<android.widget.LinearLayout: void setVerticalGravity(int)> (NO_CATEGORY)
<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WRITE_SETTINGS (NO_CATEGORY)
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)> (NO_CATEGORY)
<com.android.internal.view.menu.ActionMenuItem: com.android.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)> (NO_CATEGORY)
<android.os.storage.StorageManager$ListenerDelegate: void sendStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<org.apache.harmony.security.x509.ReasonFlags$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> (NO_CATEGORY)
<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setSendKeepAlive(boolean)> (NO_CATEGORY)
<android.widget.TabWidget: void setLeftStripDrawable(int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setPreviewFormat(int)> (NO_CATEGORY)
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)> (NO_CATEGORY)
<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelURLImpl: void setPhoneContext(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setEnabled(java.lang.Object,boolean)> (NO_CATEGORY)
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)> (NO_CATEGORY)
<android.location.INetInitiatedListener$Stub$Proxy: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: boolean sendNiResponse(int,int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl: void setAddedCount(java.lang.Object,int)> (NO_CATEGORY)
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)> (NO_CATEGORY)
<java.util.logging.LogManager: boolean addLogger(java.util.logging.Logger)> (NO_CATEGORY)
<android.media.AudioService: void setMasterVolume(int,int)> (NO_CATEGORY)
<android.media.AudioService: void setStreamVolume(int,int,int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.PYXWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setShape(int)> (NO_CATEGORY)
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(short[],int,int)> (NO_CATEGORY)
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)> (NO_CATEGORY)
<com.android.phone.InCallUiState: void setProviderInfo(android.content.Intent)> (NO_CATEGORY)
<libcore.net.http.HttpsURLConnectionImpl: void setConnectTimeout(int)> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<com.google.common.collect.Synchronized$SynchronizedMultiset: int setCount(java.lang.Object,int)> (NO_CATEGORY)
<com.android.phone.PhoneInterfaceManager: boolean handlePinMmi(java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])> (NO_CATEGORY)
<android.os.IPowerManager$Stub$Proxy: void setTemporaryScreenBrightnessSettingOverride(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setSelected(java.lang.Object,boolean)> (NO_CATEGORY)
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)> (NO_CATEGORY)
<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor remove(java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void sessionCreated(com.android.internal.view.IInputMethodSession)> (NO_CATEGORY)
<android.content.ClipboardManager: void setText(java.lang.CharSequence)> (NO_CATEGORY)
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])> (NO_CATEGORY)
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<android.support.v13.app.FragmentCompatICSMR1: void setUserVisibleHint(android.app.Fragment,boolean)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)> (NO_CATEGORY)
<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: void setPressed(boolean)> (NO_CATEGORY)
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(byte)> (NO_CATEGORY)
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)> (NO_CATEGORY)
<android.app.PendingIntent: void send(int)> (NO_CATEGORY)
<com.android.phone.ManageConferenceUtils: void setPanelVisible(boolean)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)> (NO_CATEGORY)
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> (NO_CATEGORY)
<java.util.logging.Logger: void setParent(java.util.logging.Logger)> (NO_CATEGORY)
<org.kxml2.io.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])> (NO_CATEGORY)
<com.android.server.usb.UsbSettingsManager: void deviceDetached(android.hardware.usb.UsbDevice)> (NO_CATEGORY)
<android.media.IRemoteControlClient$Stub$Proxy: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)> (NO_CATEGORY)
<android.hardware.input.IInputManager$Stub$Proxy: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.emailcommon.internet.Rfc822Output: void writeTo(android.content.Context,long,java.io.OutputStream,boolean,boolean)> (NO_CATEGORY)
<android.content.IContentService$Stub$Proxy: void addStatusChangeListener(int,android.content.ISyncStatusObserver)> (NO_CATEGORY)
<org.apache.harmony.security.fortress.Services: void initServiceInfo(java.security.Provider)> (NO_CATEGORY)
<gov.nist.javax.sip.header.Via: void setMAddr(java.lang.String)> (NO_CATEGORY)
<com.android.settings.bluetooth.BluetoothEventManager: void addHandler(java.lang.String,com.android.settings.bluetooth.BluetoothEventManager$Handler)> (NO_CATEGORY)
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(int,short)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)> (NO_CATEGORY)
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)> (NO_CATEGORY)
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> (NO_CATEGORY)
<java.util.Date: void setYear(int)> (NO_CATEGORY)
<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)> (NO_CATEGORY)
<com.android.internal.view.IInputMethod$Stub$Proxy: void revokeSession(com.android.internal.view.IInputMethodSession)> (NO_CATEGORY)
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)> (NO_CATEGORY)
<com.android.camera.ui.IndicatorControlWheelContainer: void setEnabled(boolean)> (NO_CATEGORY)
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToLastInputMethod(android.os.IBinder)> (NO_CATEGORY)
<android.bluetooth.BluetoothInputDevice: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)> (NO_CATEGORY)
<android.app.AlertDialog: void setIconAttribute(int)> (NO_CATEGORY)
<java.io.ObjectOutputStream: void writeChars(java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.SIPServerTransaction: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> (NO_CATEGORY)
<com.android.server.display.DisplayDeviceInfo: void setAssumedDensityForExternalDisplay(int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)> (NO_CATEGORY)
<android.service.dreams.IDreamService$Stub$Proxy: void attach(android.os.IBinder)> (NO_CATEGORY)
<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)> (NO_CATEGORY)
<com.android.server.pm.Settings: void createNewUserLILPw(com.android.server.pm.Installer,int,java.io.File)> (NO_CATEGORY)
<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateExtractedText(int,android.view.inputmethod.ExtractedText)> (NO_CATEGORY)
<java.text.DecimalFormat: void setGroupingUsed(boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelephoneNumber: void setParameter(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.server.AppWidgetService: boolean hasBindAppWidgetPermission(java.lang.String)> (NO_CATEGORY)
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)> (NO_CATEGORY)
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)> (NO_CATEGORY)
<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])> (NO_CATEGORY)
<android.webkit.WebViewClassic: void setMockGeolocationPosition(double,double,double)> (NO_CATEGORY)
<com.android.server.ConnectivityService: boolean setRadio(int,boolean)> (NO_CATEGORY)
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)> (NO_CATEGORY)
<android.support.v4.view.ViewPager: void setCurrentItem(int)> (NO_CATEGORY)
<java.lang.StringBuilder: void setLength(int)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setIpForwardingEnabled(boolean)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)> (NO_CATEGORY)
<android.app.IProcessObserver$Stub$Proxy: void onForegroundActivitiesChanged(int,int,boolean)> (NO_CATEGORY)
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)> (NO_CATEGORY)
<com.android.browser.widget.BookmarkThumbnailWidgetService: android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent)> (NO_CATEGORY)
<java.io.FileOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.net.MobileDataStateTracker: void setDependencyMet(boolean)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1UTCTime: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>(java.util.HashMap,int)> (NO_CATEGORY)
<com.android.systemui.statusbar.policy.NotificationRowLayout: boolean setUserExpandedChild(android.view.View,boolean)> (NO_CATEGORY)
<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)> (NO_CATEGORY)
<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onRestorePackage(java.lang.String)> (NO_CATEGORY)
<android.filterfw.core.VertexFrame: void setFloats(float[])> (NO_CATEGORY)
<android.net.wifi.p2p.WifiP2pGroupList: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<org.ccil.cowan.tagsoup.AttributesImpl: void setType(int,java.lang.String)> (NO_CATEGORY)
<android.net.wifi.WifiStateMachine: void setHighPerfModeEnabled(boolean)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setGlobalAlert(long)> (NO_CATEGORY)
<android.location.Location: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)> (NO_CATEGORY)
<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)> (NO_CATEGORY)
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void logState(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)> (NO_CATEGORY)
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)> (NO_CATEGORY)
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)> (NO_CATEGORY)
<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void putSession(javax.net.ssl.SSLSession)> (NO_CATEGORY)
<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.Join: void setFromTag(java.lang.String)> (NO_CATEGORY)
<com.android.settings.bluetooth.HeadsetProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)> (NO_CATEGORY)
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)> (NO_CATEGORY)
<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> (NO_CATEGORY)
<com.android.settings.DataUsageSummary$AppDetailsFragment: void show(com.android.settings.DataUsageSummary,com.android.settings.DataUsageSummary$AppItem,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)> (NO_CATEGORY)
<com.android.server.wm.DragState: void sendDragStartedIfNeededLw(com.android.server.wm.WindowState)> (NO_CATEGORY)
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)> (NO_CATEGORY)
<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setPassword(java.lang.Object,boolean)> (NO_CATEGORY)
<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)> (NO_CATEGORY)
<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)> (NO_CATEGORY)
<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPassword(java.lang.String)> (NO_CATEGORY)
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[])> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.ActionBarImpl: void setDisplayShowCustomEnabled(boolean)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)> (NO_CATEGORY)
<android.net.http.Headers: void setAcceptRanges(java.lang.String)> (NO_CATEGORY)
<android.nfc.INdefPushCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<org.apache.harmony.security.asn1.ASN1OctetString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> (NO_CATEGORY)
<android.text.format.Time: void set(android.text.format.Time)> (NO_CATEGORY)
<android.view.IInputFilter$Stub$Proxy: void filterInputEvent(android.view.InputEvent,int)> (NO_CATEGORY)
<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)> (NO_CATEGORY)
<gov.nist.javax.sip.header.extensions.SessionExpires: void setRefresher(java.lang.String)> (NO_CATEGORY)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])> (NO_CATEGORY)
<com.android.phone.PhoneInterfaceManager: boolean supplyPuk(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.os.MemoryFile$MemoryOutputStream: void write(byte[],int,int)> (NO_CATEGORY)
<android.os.Handler: void dump(android.util.Printer,java.lang.String)> (NO_CATEGORY)
<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)> (NO_CATEGORY)
<android.view.IWindowSession$Stub$Proxy: void reportDropResult(android.view.IWindow,boolean)> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)> (NO_CATEGORY)
<android.filterfw.core.SerializedFrame: void setInts(int[])> (NO_CATEGORY)
<com.android.server.power.PowerManagerService: void setScreenBrightnessOverrideFromWindowManager(int)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCameraDisabled(android.content.ComponentName,boolean,int)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: boolean isPermissionEnforced(java.lang.String)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setBeforeText(java.lang.Object,java.lang.CharSequence)> (NO_CATEGORY)
<com.android.emailcommon.provider.HostAuth: void setHostAuthFromString(com.android.emailcommon.provider.HostAuth,java.lang.String)> (NO_CATEGORY)
<com.android.internal.widget.SlidingTab: void setLeftTabResources(int,int,int,int)> (NO_CATEGORY)
<android.net.sip.SimpleSessionDescription$Media: void setAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<com.android.systemui.statusbar.CommandQueue: void setHardKeyboardStatus(boolean,boolean)> (NO_CATEGORY)
<org.json.JSONArray: org.json.JSONArray put(int,int)> (NO_CATEGORY)
<com.android.internal.app.IUsageStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (NO_CATEGORY)
<com.android.internal.view.RotationPolicy: void setRotationLockForAccessibility(android.content.Context,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,int)> (NO_CATEGORY)
<android.os.WorkSource: void set(android.os.WorkSource)> (NO_CATEGORY)
<android.graphics.drawable.StateListDrawable: void setLayoutDirection(int)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setLongClickable(java.lang.Object,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)> (NO_CATEGORY)
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)> (NO_CATEGORY)
<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)> (NO_CATEGORY)
<android.preference.MultiCheckPreference: void setValue(int,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setChargingCollectionFunctionAddress(java.lang.String)> (NO_CATEGORY)
<android.app.IBackupAgent$Stub$Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)> (NO_CATEGORY)
<com.android.server.MountService: int formatVolume(java.lang.String)> (NO_CATEGORY)
<com.android.server.InputMethodManagerService$InputMethodFileManager: void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype[])> (NO_CATEGORY)
<org.xml.sax.helpers.AttributesImpl: void setQName(int,java.lang.String)> (NO_CATEGORY)
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding: void access$400(java.io.ByteArrayOutputStream,java.lang.String)> (NO_CATEGORY)
<gov.nist.javax.sip.header.ims.PUserDatabase: void setValue(java.lang.String)> (NO_CATEGORY)
<org.json.JSONArray: org.json.JSONArray put(int,double)> (NO_CATEGORY)
<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)> (NO_CATEGORY)
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(char)> (NO_CATEGORY)
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSelected(java.lang.Object,boolean)> (NO_CATEGORY)
<com.android.server.wm.WindowState: void dump(java.io.PrintWriter,java.lang.String,boolean)> (NO_CATEGORY)
<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToBottom(java.util.List)> (NO_CATEGORY)
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)> (NO_CATEGORY)
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setUseClientMode(boolean)> (NO_CATEGORY)
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestHeader(org.apache.http.HttpRequest)> (NO_CATEGORY)
<com.android.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> (NO_CATEGORY)
<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationEnabledSetting(java.lang.String,int,int,int)> (NO_CATEGORY)
<gov.nist.javax.sip.address.TelephoneNumber: void setIsdnSubaddress(java.lang.String)> (NO_CATEGORY)
<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStarted(int)> (NO_CATEGORY)
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)> (NO_CATEGORY)
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)> (NO_CATEGORY)
<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)> (NO_CATEGORY)
<gov.nist.core.DuplicateNameValueList: void set(java.lang.String,java.lang.Object)> (NO_CATEGORY)
<android.os.INetworkManagementService$Stub$Proxy: void addRoute(java.lang.String,android.net.RouteInfo)> (NO_CATEGORY)
<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)> (NO_CATEGORY)
<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: void updateBigram(java.lang.String,java.lang.String,byte)> (NO_CATEGORY)
<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)> (NO_CATEGORY)
<com.android.camera.ui.AbstractIndicatorButton: void setOrientation(int)> (NO_CATEGORY)
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> (NO_CATEGORY)
<com.android.inputmethod.latin.makedict.FusionDictionary: void addOptionAttribute(java.lang.String,java.lang.String)> (NO_CATEGORY)
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)> (NO_CATEGORY)
<gov.nist.core.Host: void setHostAddress(java.lang.String)> (NO_CATEGORY)
<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)> (NO_CATEGORY)
<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)> (NO_CATEGORY)
<gov.nist.javax.sip.address.SipUri: void setPort(int)> (NO_CATEGORY)
<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)> (NO_CATEGORY)
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)> (NO_CATEGORY)
<com.android.internal.view.InputConnectionWrapper: boolean performEditorAction(int)> (NO_CATEGORY)
<android.net.nsd.NsdManager: void setEnabled(boolean)> (NO_CATEGORY)
<android.net.LocalSocket: void setSendBufferSize(int)> (NO_CATEGORY)
<com.android.systemui.ExpandHelper: void setGlow(float)> (NO_CATEGORY)
<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)> (NO_CATEGORY)
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object setValue(java.lang.Object)> (NO_CATEGORY)
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)> (NO_CATEGORY)
<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreStarting(int)> (NO_CATEGORY)
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)> (NO_CATEGORY)

PHONE_CONNECTION:
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.BLUETOOTH (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)> android.permission.WAKE_LOCK (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionAc: void setLinkPropertiesHttpProxySync(android.net.ProxyProperties)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyDataConnection(java.lang.String)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.CHANGE_WIFI_STATE (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionTracker: void setDataOnRoamingEnabled(boolean)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)> android.permission.WAKE_LOCK (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.ACCESS_NETWORK_STATE (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)> (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult updateLinkPropertiesDataCallStateSync(com.android.internal.telephony.DataCallState)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.BLUETOOTH_ADMIN (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.ACCESS_WIFI_STATE (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionTracker: void putRecoveryAction(int)> (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionAc: void setReconnectIntentSync(android.app.PendingIntent)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)> (PHONE_CONNECTION)
<com.android.internal.telephony.PhoneProxy: void sendUssdResponse(java.lang.String)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.CHANGE_NETWORK_STATE (PHONE_CONNECTION)
<com.android.internal.telephony.PhoneProxy: void sendDtmf(char)> (PHONE_CONNECTION)
<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GSMPhone: void notifyDisconnect(com.android.internal.telephony.Connection)> (PHONE_CONNECTION)
<com.android.internal.telephony.CallManager: boolean sendDtmf(char)> (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)> android.permission.READ_PHONE_STATE (PHONE_CONNECTION)
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)> (PHONE_CONNECTION)
<com.android.internal.telephony.DataConnectionTracker: void notifyDataConnection(java.lang.String)> (PHONE_CONNECTION)
<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)> (PHONE_CONNECTION)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)> (PHONE_CONNECTION)

VOIP:
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)> (VOIP)
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)> (VOIP)
<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)> (VOIP)
<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistering(android.net.sip.ISipSession)> (VOIP)
<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCalling(android.net.sip.ISipSession)> (VOIP)
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)> (VOIP)
<android.net.sip.ISipSession$Stub$Proxy: void setListener(android.net.sip.ISipSessionListener)> (VOIP)
<android.net.sip.ISipSession$Stub$Proxy: void makeCall(android.net.sip.SipProfile,java.lang.String,int)> (VOIP)
<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)> android.permission.USE_SIP (VOIP)
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)> (VOIP)
<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)> (VOIP)
<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)> android.permission.WAKE_LOCK (VOIP)
<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationTimeout(android.net.sip.ISipSession)> (VOIP)
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationDone(android.net.sip.ISipSession,int)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onError(android.net.sip.ISipSession,int,java.lang.String)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEnded(android.net.sip.ISipSession)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallBusy(android.net.sip.ISipSession)> (VOIP)
<android.net.sip.ISipSessionListener$Stub$Proxy: void onRingingBack(android.net.sip.ISipSession)> (VOIP)

PHONE_STATE:
<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)> android.permission.BROADCAST_STICKY (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)> (PHONE_STATE)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)> android.permission.BROADCAST_STICKY (PHONE_STATE)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String,java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDisconnectP(com.android.internal.telephony.Connection)> (PHONE_STATE)
<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.gsm.GSMPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)> (PHONE_STATE)
<com.android.internal.telephony.sip.SipPhoneBase: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> (PHONE_STATE)
<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)> (PHONE_STATE)
<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)> (PHONE_STATE)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> (PHONE_STATE)

BLUETOOTH:
<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: void unregisterCallback(android.bluetooth.IBluetoothCallback)> (BLUETOOTH)
<android.bluetooth.BluetoothTetheringDataTracker: void setUserDataEnable(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)> (BLUETOOTH)
<android.bluetooth.BluetoothTetheringDataTracker: boolean setRadio(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void clccResponse(int,int,int,int,boolean,java.lang.String,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothCallback$Stub$Proxy: void onBluetoothStateChange(int,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.BLUETOOTH_ADMIN (BLUETOOTH)
<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: boolean sendDtmf(int)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])> (BLUETOOTH)
<android.bluetooth.IBluetoothPan$Stub$Proxy: void setBluetoothTethering(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WAKE_LOCK (BLUETOOTH)
<android.bluetooth.BluetoothTetheringDataTracker: void setDependencyMet(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothHealth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)> (BLUETOOTH)
<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPasskey(int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.MODIFY_AUDIO_SETTINGS (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)> (BLUETOOTH)
<android.bluetooth.BluetoothTetheringDataTracker: void setTeardownRequested(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothInputDevice$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.WRITE_SETTINGS (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: void registerCallback(android.bluetooth.IBluetoothCallback)> (BLUETOOTH)
<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: boolean processChld(int)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void phoneStateChanged(int,int,int,java.lang.String,int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)> (BLUETOOTH)
<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> android.permission.BLUETOOTH (BLUETOOTH)
<android.bluetooth.BluetoothTetheringDataTracker: void setPolicyDataEnable(boolean)> (BLUETOOTH)
<android.bluetooth.IBluetoothPan$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (BLUETOOTH)
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)> (BLUETOOTH)
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)> (BLUETOOTH)

ACCOUNT_SETTINGS:
<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: boolean access$1100(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask: void set(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.accounts.IAccountManagerResponse$Stub$Proxy: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.emailcommon.provider.Account: void setDeletePolicy(int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$TestFeaturesSession: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.content.SyncStorageEngine: void setDelayUntilTime(android.accounts.Account,int,java.lang.String,long)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String readUserDataInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.emailcommon.provider.Account: void writeToParcel(android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> android.permission.USE_CREDENTIALS (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.SET_WALLPAPER (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)> (ACCOUNT_SETTINGS)
<android.provider.SyncStateContract$Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.content.SyncStorageEngine: void setBackoff(android.accounts.Account,int,java.lang.String,long,long)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.util.HashMap readAuthTokensForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)> (ACCOUNT_SETTINGS)
<com.android.exchange.adapter.AccountSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> (ACCOUNT_SETTINGS)
<com.android.browser.provider.BrowserProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void writeAuthTokenIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void writeUserDataIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)> android.permission.MANAGE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.accounts.AccountManager$AmsTask: void set(java.lang.Object)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.util.HashMap readUserDataForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> (ACCOUNT_SETTINGS)
<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$3: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)> (ACCOUNT_SETTINGS)
<com.android.settings.accounts.AccountPreferenceBase: android.preference.PreferenceScreen addPreferencesForType(java.lang.String,android.preference.PreferenceScreen)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: java.lang.String readAuthTokenInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$4: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.MANAGE_APP_TOKENS (ACCOUNT_SETTINGS)
<com.android.settings.accounts.SyncSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)> (ACCOUNT_SETTINGS)
<android.provider.SyncStateContract$Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService$RemoveAccountSession: void onResult(android.os.Bundle)> (ACCOUNT_SETTINGS)
<android.accounts.AccountManagerService: void installNotification(int,android.app.Notification,android.os.UserHandle)> (ACCOUNT_SETTINGS)
<com.android.emailcommon.provider.Account: android.net.Uri save(android.content.Context)> (ACCOUNT_SETTINGS)
<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onError(int,java.lang.String)> (ACCOUNT_SETTINGS)

SYNCHRONIZATION_DATA:
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,java.lang.Object)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.ContactsSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)> (SYNCHRONIZATION_DATA)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void stopSync(long)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: boolean tryProvision(com.android.exchange.EasSyncService)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.AbstractSyncAdapter: void setPimSyncOptions(java.lang.Double,java.lang.String,com.android.exchange.adapter.Serializer)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void messageMoveRequest(com.android.exchange.MessageMoveRequest)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,byte[])> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.CalendarSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void cancelSync(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: android.os.Bundle tryAutodiscover(java.lang.String,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void dumpSyncState(java.io.PrintWriter)> (SYNCHRONIZATION_DATA)
<com.android.providers.calendar.CalendarDatabaseHelper: void scheduleSync(android.accounts.Account,boolean,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendPing(byte[],int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: void addData(com.android.emailcommon.provider.EmailContent$Message,int)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.WRITE_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)> (SYNCHRONIZATION_DATA)
<android.content.ISyncAdapter$Stub$Proxy: void cancelSync(android.content.ISyncContext)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: boolean bindToSyncAdapter(android.content.pm.RegisteredServicesCache$ServiceInfo,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void setTimeRelatedValues(android.content.ContentValues,long,long,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void setupProtocolVersion(com.android.exchange.EasSyncService,org.apache.http.Header)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.READ_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.ExchangeService: void startManualSync(long,int,com.android.exchange.Request)> android.permission.WAKE_LOCK (SYNCHRONIZATION_DATA)
<com.android.exchange.ExchangeService: void startManualSync(long,int,com.android.exchange.Request)> android.permission.VIBRATE (SYNCHRONIZATION_DATA)
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxStatus(long,int,int)> (SYNCHRONIZATION_DATA)
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxListStatus(long,int,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)> (SYNCHRONIZATION_DATA)
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void startSync(long,boolean)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.ACCESS_NETWORK_STATE (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: com.android.exchange.EasSyncService setupServiceForAccount(android.content.Context,com.android.emailcommon.provider.Account)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String)> (SYNCHRONIZATION_DATA)
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void setConnectionParameters(com.android.emailcommon.provider.HostAuth)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: boolean setupService()> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,int,java.lang.String)> (SYNCHRONIZATION_DATA)
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)> (SYNCHRONIZATION_DATA)
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void sendMeetingResponse(com.android.exchange.MeetingResponseRequest)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.VIBRATE (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> android.permission.WAKE_LOCK (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)> (SYNCHRONIZATION_DATA)
<android.content.ContentService: void setMasterSyncAutomatically(boolean)> (SYNCHRONIZATION_DATA)
<android.content.SyncManager$ActiveSyncContext: void sendHeartbeat()> (SYNCHRONIZATION_DATA)
<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)> (SYNCHRONIZATION_DATA)
<android.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)> (SYNCHRONIZATION_DATA)
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations: void updatedAttendee(android.content.ContentValues,long)> (SYNCHRONIZATION_DATA)
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int,java.lang.Object)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: void setHeaders(org.apache.http.client.methods.HttpRequestBase,boolean)> (SYNCHRONIZATION_DATA)
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)> (SYNCHRONIZATION_DATA)
<com.android.exchange.ExchangeService: void startManualSync(long,int,com.android.exchange.Request)> android.permission.READ_SYNC_SETTINGS (SYNCHRONIZATION_DATA)
<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> android.permission.WRITE_SYNC_SETTINGS (SYNCHRONIZATION_DATA)

NETWORK:
<java.net.URL: java.net.URLConnection openConnection()> android.permission.INTERNET (NETWORK)
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> (NETWORK)
<java.net.URL: java.net.URLConnection openConnection()> (NETWORK)

FILE:
<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int fcntlVoid(java.io.FileDescriptor,int)> (FILE)
<libcore.io.BlockGuardOs: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)> (FILE)
<com.android.server.AlarmManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,byte[],int,int)> (FILE)
<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<com.android.server.location.PassiveProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> (FILE)
<com.android.providers.contacts.ContactsProvider2: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.gsm.GsmCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> (FILE)
<com.android.inputmethod.latin.LatinIME: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ApplicationThreadProxy: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: void setsockoptGroupReq(java.io.FileDescriptor,int,int,libcore.io.StructGroupReq)> (FILE)
<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> android.permission.ACCESS_NETWORK_STATE (FILE)
<libcore.io.ForwardingOs: void setsockoptLinger(java.io.FileDescriptor,int,int,libcore.io.StructLinger)> (FILE)
<libcore.io.ForwardingOs: void bind(java.io.FileDescriptor,java.net.InetAddress,int)> (FILE)
<libcore.io.Posix: int write(java.io.FileDescriptor,byte[],int,int)> (FILE)
<com.android.server.MountService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)> (FILE)
<com.android.internal.telephony.gsm.GsmDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int,int)> (FILE)
<libcore.io.ForwardingOs: void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int)> (FILE)
<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])> (FILE)
<com.android.camera.EffectsRecorder: void setOutputFile(java.io.FileDescriptor)> (FILE)
<libcore.io.BlockGuardOs: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)> (FILE)
<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)> (FILE)
<com.android.server.usb.UsbHostManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<libcore.io.ForwardingOs: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)> (FILE)
<libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)> (FILE)
<libcore.io.Posix: int pread(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)> (FILE)
<com.android.server.BatteryService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> (FILE)
<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)> (FILE)
<java.lang.SecurityManager: void checkRead(java.io.FileDescriptor)> (FILE)
<com.android.server.WifiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<dalvik.system.VMDebug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)> (FILE)
<com.android.server.am.ActivityManagerService$MemBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)> (FILE)
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,byte[],int,int)> (FILE)
<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)> (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<com.android.server.am.UsageStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)> (FILE)
<libcore.io.ForwardingOs: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)> (FILE)
<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.BACKUP (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])> (FILE)
<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.usb.UsbDeviceManager$UsbHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)> (FILE)
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])> (FILE)
<libcore.io.ForwardingOs: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)> (FILE)
<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.Posix: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.IoBridge: void bind(java.io.FileDescriptor,java.net.InetAddress,int)> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)> (FILE)
<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> (FILE)
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int)> (FILE)
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: void setsockoptInt(java.io.FileDescriptor,int,int,int)> (FILE)
<com.android.server.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.Posix: int read(java.io.FileDescriptor,byte[],int,int)> (FILE)
<android.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<com.android.server.usb.UsbDebuggingManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)> (FILE)
<com.android.server.location.GpsLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.systemui.SystemUIService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> (FILE)
<libcore.io.Posix: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)> (FILE)
<android.view.inputmethod.InputMethodManager$1: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.location.MockProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,byte[],int,int)> (FILE)
<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])> (FILE)
<com.android.server.AppWidgetServiceImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)> (FILE)
<android.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.contacts.interactions.TestLoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActiveServices: boolean dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)> (FILE)
<com.android.internal.telephony.ApnContext: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.Posix: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<libcore.io.Posix: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)> (FILE)
<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.Posix: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> (FILE)
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])> (FILE)
<com.android.providers.downloads.DownloadService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> (FILE)
<com.android.systemui.statusbar.GestureRecorder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<com.android.internal.telephony.cdma.CdmaCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])> (FILE)
<android.content.ContentService$ObserverNode$ObserverEntry: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,android.util.SparseIntArray)> (FILE)
<libcore.io.ForwardingOs: void setsockoptByte(java.io.FileDescriptor,int,int,int)> (FILE)
<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.usb.UsbSettingsManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.DUMP (FILE)
<com.android.server.DeviceStorageMonitorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.LocalSocketImpl: void access$600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)> (FILE)
<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.NativeDaemonConnector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<com.android.server.dreams.DreamManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<java.nio.IoVec: int doTransfer(java.io.FileDescriptor)> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)> (FILE)
<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.BLUETOOTH (FILE)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.cdma.CDMALTEPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.net.wifi.p2p.WifiP2pService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.gsm.GSMPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int fcntlLong(java.io.FileDescriptor,int,long)> (FILE)
<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.cdma.CdmaDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.RIL: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> (FILE)
<android.net.LocalSocketImpl: void access$700(android.net.LocalSocketImpl,int,java.io.FileDescriptor)> (FILE)
<libcore.io.ForwardingOs: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> (FILE)
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])> (FILE)
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.display.DisplayManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int ioctlInt(java.io.FileDescriptor,int,libcore.util.MutableInt)> (FILE)
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)> (FILE)
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<java.nio.MemoryBlock: java.nio.MemoryBlock mmap(java.io.FileDescriptor,long,long,java.nio.channels.FileChannel$MapMode)> (FILE)
<libcore.io.ForwardingOs: void setsockoptIfreq(java.io.FileDescriptor,int,int,java.lang.String)> (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<com.android.server.usb.UsbDeviceManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> (FILE)
<com.android.systemui.SystemUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])> android.permission.ACCESS_NETWORK_STATE (FILE)
<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService$GraphicsBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.power.PowerManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.DataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.Posix: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> (FILE)
<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)> (FILE)
<com.android.internal.telephony.PhoneSubInfoProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.providers.media.MediaProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.systemui.statusbar.policy.NetworkController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])> (FILE)
<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ActivityThread$ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> (FILE)
<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.DataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.ActivityThread$ApplicationThread: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: void dumpDbInfo(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<libcore.io.ForwardingOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])> (FILE)
<libcore.io.IoBridge: void setSocketOption(java.io.FileDescriptor,int,java.lang.Object)> (FILE)
<java.lang.SecurityManager: void checkWrite(java.io.FileDescriptor)> (FILE)
<libcore.io.Posix: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> (FILE)
<libcore.io.Posix: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])> (FILE)
<libcore.io.Posix: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> (FILE)
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<java.util.zip.Inflater: int setFileInput(java.io.FileDescriptor,long,int)> (FILE)
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> (FILE)
<com.android.server.am.ActivityManagerService: void dumpGraphicsHardwareUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService$DbBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.internal.telephony.PhoneSubInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)> (FILE)
<libcore.io.ForwardingOs: long sendfile(java.io.FileDescriptor,java.io.FileDescriptor,libcore.util.MutableLong,long)> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)> (FILE)
<com.android.server.NotificationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)> (FILE)
<libcore.io.ForwardingOs: int fcntlFlock(java.io.FileDescriptor,int,libcore.io.StructFlock)> (FILE)
<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.AppWidgetService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],boolean,java.io.PrintWriter,java.lang.StringBuilder,java.lang.StringBuilder)> (FILE)
<com.android.server.am.ActivityManagerService$CpuBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)> (FILE)
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> (FILE)
<com.android.server.am.ActivityManagerService: boolean dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)> (FILE)
<android.content.ContentService$ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)> (FILE)
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,byte[],int,int)> (FILE)
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)> (FILE)

LOG:
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int println(int,java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES (LOG)
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> (LOG)
<android.util.LogPrinter: void println(java.lang.String)> (LOG)
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.media.MediaScanner: void scanMtpFile(java.lang.String,java.lang.String,int,int)> (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<com.android.providers.calendar.CalendarInstancesHelper: void updateInstancesLocked(android.content.ContentValues,long,boolean,android.database.sqlite.SQLiteDatabase)> (LOG)
<android.util.Log: int e(java.lang.String,java.lang.String)> (LOG)
<com.android.providers.media.MediaProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (LOG)
<com.android.providers.calendar.CalendarCache: void writeData(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int println(int,java.lang.String,java.lang.String)> (LOG)
<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)> android.permission.STOP_APP_SWITCHES (LOG)
<android.util.Log: int v(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int d(java.lang.String,java.lang.String)> (LOG)
<com.android.browser.UrlHandler: boolean startActivityForUrl(com.android.browser.Tab,java.lang.String)> (LOG)
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.webkit.WebViewDatabaseClassic: void setFormData(java.lang.String,java.util.HashMap)> (LOG)
<com.android.providers.calendar.CalendarInstancesHelper: void performInstanceExpansion(long,long,java.lang.String,android.database.Cursor)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String)> (LOG)
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> (LOG)
<com.android.providers.calendar.CalendarInstancesHelper: void expandInstanceRangeLocked(long,long,java.lang.String)> (LOG)

SMS_MMS:
<com.google.android.mms.pdu.SendReq: void setBcc(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)> (SMS_MMS)
<com.android.mms.model.SlideModel: com.android.mms.model.MediaModel set(int,com.android.mms.model.MediaModel)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setTransactionId(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setEndSync(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.DocumentImpl: void setXmlVersion(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setRestart(short)> (SMS_MMS)
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: void addPart(int,com.google.android.mms.pdu.PduPart)> (SMS_MMS)
<com.android.internal.telephony.sip.SipPhone: void sendUssdResponse(java.lang.String)> (SMS_MMS)
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)> android.permission.CHANGE_NETWORK_STATE (SMS_MMS)
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void appendEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValues(com.google.android.mms.pdu.EncodedStringValue[],int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setFillDefault(short)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.RECEIVE_SMS (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void setPremiumSmsPermission(java.lang.String,int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setWidth(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setLongdesc(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)> android.permission.WAKE_LOCK (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setMessageClass(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentDisposition(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setMmsVersion(int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void handleSendComplete(android.os.AsyncResult)> (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setPort(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setEnd(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.android.mms.dom.smil.ElementTimeImpl: void setRepeatDur(float)> (SMS_MMS)
<com.android.mms.ui.ConversationList$4: boolean onQueryTextSubmit(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setBackgroundColor(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setFill(short)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void setPremiumSmsPermission(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setAuthor(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setCc(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> android.permission.WAKE_LOCK (SMS_MMS)
<com.android.internal.telephony.SmsUsageMonitor: void setPremiumSmsPermission(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveStatus(int)> (SMS_MMS)
<com.android.mms.util.Recycler$SmsRecycler: void setMessageLimit(android.content.Context,int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setDate(long)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setTextVisibility(boolean)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setTextString(byte[],int)> (SMS_MMS)
<com.android.mms.dom.smil.TimeImpl: void setMarker(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentLocation(byte[])> (SMS_MMS)
<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.WAKE_LOCK (SMS_MMS)
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setHeight(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setFit(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setBegin(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setTitle(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setRepeatDur(float)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setHeight(int)> (SMS_MMS)
<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcast(int)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setType(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setDur(float)> (SMS_MMS)
<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)> (SMS_MMS)
<com.android.mms.transaction.RetryScheduler: void setRetryAlarm(android.content.Context)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setReadReport(int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.SEND_SMS (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentId(byte[])> (SMS_MMS)
<com.android.mms.transaction.MmsMessageSender: void sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)> (SMS_MMS)
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)> android.permission.READ_PHONE_STATE (SMS_MMS)
<com.android.mms.dom.smil.TimeImpl: void setBaseBegin(boolean)> (SMS_MMS)
<com.android.mms.dom.NodeImpl: void setTextContent(java.lang.String)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.PduParser: byte[] parseContentType(java.io.ByteArrayInputStream,java.util.HashMap)> (SMS_MMS)
<com.android.mms.util.Recycler$MmsRecycler: void setMessageLimit(android.content.Context,int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setDate(long)> (SMS_MMS)
<com.android.exchange.adapter.CalendarSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)> (SMS_MMS)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setExpiry(long)> (SMS_MMS)
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS (SMS_MMS)
<com.android.mms.dom.AttrImpl: void setNodeValue(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setReadStatus(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setAbstractAttr(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setBegin(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setRepeatCount(float)> (SMS_MMS)
<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: void setTransactionId(byte[])> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setVisibility(boolean)> (SMS_MMS)
<com.android.mms.model.SlideModel: java.lang.Object set(int,java.lang.Object)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setBackgroundColor(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageClass(byte[])> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.WRITE_SMS (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setId(java.lang.String)> (SMS_MMS)
<com.android.mms.util.SimpleCache: java.lang.Object put(java.lang.Object,java.lang.Object)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setReadStatus(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateParts(android.net.Uri,com.google.android.mms.pdu.PduBody,java.util.HashMap)> (SMS_MMS)
<com.android.mms.util.SendingProgressTokenManager: void put(java.lang.Object,long)> (SMS_MMS)
<com.android.mms.ui.MessageUtils: void recordSound(android.app.Activity,int,long)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void setPremiumSmsPermission(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri move(android.net.Uri,android.net.Uri)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setRestart(short)> (SMS_MMS)
<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)> (SMS_MMS)
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[],java.lang.String)> (SMS_MMS)
<com.android.mms.ui.ComposeMessageActivity: void onSaveInstanceState(android.os.Bundle)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setMessageSize(long)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)> (SMS_MMS)
<com.android.internal.telephony.SmsUsageMonitor: boolean check(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setCharset(int)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setTransactionId(byte[])> (SMS_MMS)
<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)> (SMS_MMS)
<com.android.mms.dom.NodeImpl: void setNodeValue(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatchPdus(byte[][])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.mms.ui.MessageUtils: void selectAudio(android.app.Activity,int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.READ_SMS (SMS_MMS)
<com.android.mms.ui.ConversationListItem: void setChecked(boolean)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setCopyright(java.lang.String)> (SMS_MMS)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.ui.MessagingPreferenceActivity: void enableNotifications(boolean,android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)> android.permission.WAKE_LOCK (SMS_MMS)
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setClipEnd(java.lang.String)> (SMS_MMS)
<com.android.mms.data.WorkingMessage: void setHasMultipleRecipients(boolean,boolean)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setTop(int)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setFillDefault(short)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> (SMS_MMS)
<com.android.mms.dom.ElementImpl: void setIdAttribute(java.lang.String,boolean)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setRepeatCount(float)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setImageRegionFit(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.ui.ComposeMessageActivity$43: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setStatus(int)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setDeliveryReport(int)> (SMS_MMS)
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)> android.permission.READ_PHONE_STATE (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setContentType(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setRepeatCount(float)> (SMS_MMS)
<com.android.mms.util.NullItemLoadedFuture: void setIsDone(boolean)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setVideoVisibility(boolean)> (SMS_MMS)
<com.android.mms.dom.ElementImpl: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setDate(long)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setPriority(int)> (SMS_MMS)
<com.android.mms.dom.NodeImpl: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> (SMS_MMS)
<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)> (SMS_MMS)
<com.google.android.mms.pdu.PduParser: void parseContentTypeParams(java.io.ByteArrayInputStream,java.util.HashMap,java.lang.Integer)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setDur(float)> (SMS_MMS)
<com.google.android.mms.pdu.SendConf: void setResponseStatus(int)> (SMS_MMS)
<com.android.mms.data.WorkingMessage: void setHasEmail(boolean,boolean)> (SMS_MMS)
<com.android.internal.telephony.sip.SipPhone: void sendDtmf(char)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setRepeatDur(float)> (SMS_MMS)
<com.google.android.mms.pdu.DeliveryInd: void setDate(long)> (SMS_MMS)
<com.android.mms.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setFill(short)> (SMS_MMS)
<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)> (SMS_MMS)
<com.google.android.mms.pdu.PduParser: byte[] parseWapString(java.io.ByteArrayInputStream,int)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcast(int)> (SMS_MMS)
<com.android.mms.util.ImageCacheService: void putImageData(java.lang.String,int,byte[])> (SMS_MMS)
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setDeliveryReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.GenericPdu: void setMessageType(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduComposer: void append(int)> (SMS_MMS)
<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: void setEndSync(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.DocumentImpl: void setDocumentURI(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatchBroadcastMessage(android.telephony.SmsCbMessage)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.ui.ComposeMessageActivity: boolean access$3800(com.android.mms.ui.ComposeMessageActivity,long)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setFill(short)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setTransactionId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setStripRepeat(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setRestart(short)> (SMS_MMS)
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setMessageSize(long)> (SMS_MMS)
<com.android.mms.data.Conversation: void setDraftState(boolean)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setText(java.lang.String,java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: void setTextString(byte[])> (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)> android.permission.WAKE_LOCK (SMS_MMS)
<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.WRITE_CONTACTS (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setRtpformat(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setMessageId(byte[])> (SMS_MMS)
<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setDeliveryReport(int)> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setExpiry(long)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setWidth(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setSrc(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilElementImpl: void setId(java.lang.String)> (SMS_MMS)
<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setTransport(java.lang.String)> (SMS_MMS)
<android.telephony.SmsCbMessage: void writeToParcel(android.os.Parcel,int)> (SMS_MMS)
<com.google.android.mms.pdu.AcknowledgeInd: void setReportAllowed(int)> (SMS_MMS)
<com.android.mms.data.RecipientIdCache: void updateNumbers(long,com.android.mms.data.ContactList)> (SMS_MMS)
<com.android.providers.telephony.SmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (SMS_MMS)
<com.google.android.mms.pdu.QuotedPrintable: byte[] decodeQuotedPrintable(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendConf: void setTransactionId(byte[])> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.android.mms.util.BackgroundLoaderManager: boolean addCallback(android.net.Uri,com.android.mms.util.ItemLoadedCallback)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int)> (SMS_MMS)
<com.android.mms.dom.smil.TimeImpl: void setEvent(java.lang.String)> (SMS_MMS)
<android.telephony.SmsManager: boolean enableCellBroadcast(int)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.server.location.GpsLocationProvider$6: boolean sendNiResponse(int,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduBody: boolean addPart(com.google.android.mms.pdu.PduPart)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> android.permission.WAKE_LOCK (SMS_MMS)
<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setTitle(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setName(byte[])> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.cdma.SmsMessage$SubmitPdu,android.app.PendingIntent,android.app.PendingIntent,java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SMS_MMS)
<com.android.mms.dom.smil.ElementTimeImpl: void setRepeatCount(float)> (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> android.permission.SEND_SMS (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void setPremiumSmsPermission(java.lang.String,int)> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<android.telephony.SmsManager: boolean disableCellBroadcast(int)> android.permission.RECEIVE_SMS (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)> android.permission.READ_CONTACTS (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentTransferEncoding(byte[])> (SMS_MMS)
<com.android.mms.dom.NodeImpl: void setPrefix(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setEnd(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])> (SMS_MMS)
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setReadIndex(java.lang.String)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setTitle(java.lang.String)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)> (SMS_MMS)
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setFilename(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setLongInteger(long,int)> (SMS_MMS)
<com.android.mms.dom.smil.TimeImpl: void setOffset(double)> (SMS_MMS)
<com.android.mms.dom.smil.parser.SmilXmlSerializer: void serialize(org.w3c.dom.smil.SMILDocument,java.io.OutputStream)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setAlt(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.SendConf: void setMessageId(byte[])> (SMS_MMS)
<com.android.mms.model.SlideshowModel: java.lang.Object set(int,java.lang.Object)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setTransactionId(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setFillDefault(short)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveText(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setContentType(byte[])> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)> (SMS_MMS)
<com.android.mms.data.WorkingMessage: void setLengthRequiresMms(boolean,boolean)> (SMS_MMS)
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.android.mms.ui.ConversationList: android.content.Intent createAddContactIntent(java.lang.String)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: android.net.Uri persistPart(com.google.android.mms.pdu.PduPart,long,java.util.HashMap)> (SMS_MMS)
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[])> (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setLeft(int)> (SMS_MMS)
<android.provider.Telephony$Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduComposer: void arraycopy(byte[],int,int)> (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)> android.permission.READ_SMS (SMS_MMS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)> android.permission.READ_SMS (SMS_MMS)
<com.android.mms.dom.smil.SmilRegionElementImpl: void setZIndex(int)> (SMS_MMS)
<com.android.mms.dom.ElementImpl: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setDur(float)> (SMS_MMS)
<com.google.android.mms.pdu.NotificationInd: void setContentClass(int)> (SMS_MMS)
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)> android.permission.CHANGE_NETWORK_STATE (SMS_MMS)
<com.android.mms.model.SlideshowModel: java.util.HashMap openPartFiles(android.content.ContentResolver)> (SMS_MMS)
<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])> android.permission.RECEIVE_SMS (SMS_MMS)
<com.android.mms.model.Model: void notifyModelChanged(boolean)> (SMS_MMS)
<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.mms.ui.SlideView: void enableMMSConformanceMode(int,int,int,int)> (SMS_MMS)
<com.google.android.mms.pdu.RetrieveConf: void setFrom(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.google.android.mms.pdu.MultimediaMessagePdu: void setSubject(com.google.android.mms.pdu.EncodedStringValue)> (SMS_MMS)
<com.android.mms.dom.smil.SmilDocumentImpl: void setEnd(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setOctet(int,int)> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setContentType(byte[])> (SMS_MMS)
<com.android.mms.dom.smil.SmilParElementImpl: void setRepeatDur(float)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setReportAllowed(int)> (SMS_MMS)
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideModel set(int,com.android.mms.model.SlideModel)> (SMS_MMS)
<com.google.android.mms.pdu.NotifyRespInd: void setStatus(int)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setBegin(org.w3c.dom.smil.TimeList)> (SMS_MMS)
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)> (SMS_MMS)
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> android.permission.READ_CONTACTS (SMS_MMS)
<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)> (SMS_MMS)
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setMessageClass(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.ReadRecInd: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.EncodedStringValue: void appendTextString(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.PduPart: void setData(byte[])> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setImage(java.lang.String,android.graphics.Bitmap)> (SMS_MMS)
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> (SMS_MMS)
<com.google.android.mms.pdu.ReadOrigInd: void setMessageId(byte[])> (SMS_MMS)
<com.google.android.mms.pdu.SendReq: void setReadReport(int)> (SMS_MMS)
<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)> (SMS_MMS)
<com.android.mms.transaction.MessageStatusService: void onHandleIntent(android.content.Intent)> (SMS_MMS)
<com.android.mms.ui.MessageListItem: void setImageVisibility(boolean)> (SMS_MMS)
<com.android.mms.dom.smil.SmilMediaElementImpl: void setClipBegin(java.lang.String)> (SMS_MMS)

CONTACT_INFORMATION:
<gov.nist.javax.sip.header.Contact: void setWildCardFlag(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)> (CONTACT_INFORMATION)
<com.android.common.contacts.BaseEmailAddressAdapter: void bindView(android.view.View,int,android.database.Cursor,int)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.PhoneDataItem: void computeFormattedPhoneNumber(java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.DbModifierWithNotification: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> (CONTACT_INFORMATION)
<com.android.contacts.widget.FrameLayoutWithOverlay: void setOverlayClickable(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSetRingtone(android.content.Context,android.net.Uri,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticMiddleName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.DataItem: void setMimeType(java.lang.String)> (CONTACT_INFORMATION)
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDeltaList: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.editor.RawContactReadOnlyEditorView: void setState(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,com.android.contacts.editor.ViewIdGenerator,boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.TransactionContext: void syncStateUpdated(long,java.lang.Object)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactTileListFragment: void setColumnCount(int)> (CONTACT_INFORMATION)
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSdCard(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.READ_CONTACTS (CONTACT_INFORMATION)
<com.android.contacts.group.GroupEditorFragment: void loadMemberToAddToGroup(long,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayer(android.view.View)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSetSendToVoicemail(android.content.Context,android.net.Uri,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode(boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: void setContactId(long,long)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsDatabaseHelper: void setProperty(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)> (CONTACT_INFORMATION)
<com.android.contacts.list.PhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)> (CONTACT_INFORMATION)
<com.android.contacts.datepicker.DatePicker: void setEnabled(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createNewGroupIntent(android.content.Context,com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long[],java.lang.Class,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: void updateDisplayNameForContact(android.database.sqlite.SQLiteDatabase,long)> (CONTACT_INFORMATION)
<android.widget.QuickContactBadge: void onDraw(android.graphics.Canvas)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticGivenName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.detail.ContactDetailPhotoSetter: android.view.View$OnClickListener setupContactPhotoForClick(android.content.Context,com.android.contacts.model.Contact,android.widget.ImageView,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.calllog.CallLogAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)> (CONTACT_INFORMATION)
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorUtils: void saveDefaultAndAllAccounts(com.android.contacts.model.account.AccountWithDataSet)> (CONTACT_INFORMATION)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setGroupRowId(long)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsDatabaseHelper: boolean updateContactVisibleOnlyIfChanged(com.android.providers.contacts.TransactionContext,long)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.READ_SOCIAL_STREAM (CONTACT_INFORMATION)
<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Fragment,int,com.android.contacts.list.ContactListFilter)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactsSectionIndexer: void setProfileHeader(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSetStarredIntent(android.content.Context,android.net.Uri,boolean)> (CONTACT_INFORMATION)
<android.widget.QuickContactBadge: void setMode(int)> (CONTACT_INFORMATION)
<com.android.contacts.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails,boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle buildExtraBundle(java.lang.String[],int[])> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactPickerFragment: void restoreSavedState(android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.contacts.datepicker.DatePicker$SavedState: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.WRITE_CONTACTS (CONTACT_INFORMATION)
<com.android.contacts.list.ContactEntryListFragment: void setEmptyText(int)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createNewRawContactIntent(android.content.Context,java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet,java.lang.Class,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: void markNewForAggregation(long,int)> (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setSipInstanceParam(java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.TransactionContext: void rawContactInserted(long,long)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactTileListFragment: void enableQuickContact(boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.DataRowHandlerForStructuredName: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,long,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.dialpad.DialpadImageButton: void setPressed(boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)> (CONTACT_INFORMATION)
<com.android.contacts.PhoneCallDetailsHelper: void setCurrentTimeForTest(long)> (CONTACT_INFORMATION)
<com.android.contacts.detail.ActionsViewContainer: void setPosition(int)> (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setQValue(float)> (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setTempGruuParam(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.android.contacts.PhoneCallDetails)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createGroupRenameIntent(android.content.Context,long,java.lang.String,java.lang.Class,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.GET_ACCOUNTS (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setExpires(int)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContact: void setAccount(com.android.contacts.model.account.AccountWithDataSet)> (CONTACT_INFORMATION)
<com.android.contacts.PhoneCallDetailsHelper: void setPhoneCallDetails(com.android.contacts.PhoneCallDetailsViews,com.android.contacts.PhoneCallDetails,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.preference.ContactsPreferences: void setDisplayOrder(int)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createGroupDeletionIntent(android.content.Context,long)> (CONTACT_INFORMATION)
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Activity,int,com.android.contacts.list.ContactListFilter)> (CONTACT_INFORMATION)
<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.group.GroupEditorFragment$Member: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: void onHandleIntent(android.content.Intent)> (CONTACT_INFORMATION)
<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setSuperPrimary(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSim(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.JoinContactListFragment: void setQueryString(java.lang.String,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.account.AccountWithDataSet: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.ContactPhotoManagerImpl: void cacheBitmap(android.net.Uri,android.graphics.Bitmap,byte[])> (CONTACT_INFORMATION)
<com.android.providers.contacts.ProfileAwareUriMatcher: void addURI(java.lang.String,java.lang.String,int)> (CONTACT_INFORMATION)
<com.android.contacts.editor.LabeledEditorView: void onFieldChanged(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactEntryListAdapter: void setPinnedSectionTitle(android.view.View,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.PhotoStore: long insert(com.android.providers.contacts.PhotoProcessor,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactModifier: void migrateEvent(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,java.lang.Integer)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createGroupUpdateIntent(android.content.Context,long,java.lang.String,long[],long[],java.lang.Class,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsDatabaseHelper: void setIsSuperPrimary(long,long,long)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactEntryListAdapter: void setDefaultFilterHeaderText(int)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,android.os.Bundle)> (CONTACT_INFORMATION)
<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticGivenName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorFragment: void setAggregationSuggestionViewEnabled(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras(android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticFamilyName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createSetSuperPrimaryIntent(android.content.Context,long)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createClearPrimaryIntent(android.content.Context,long)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactLocaleUtils: void setLocale(java.util.Locale)> (CONTACT_INFORMATION)
<com.android.contacts.calllog.CallLogAdapter: void injectContactInfoForTest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,int)> (CONTACT_INFORMATION)
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map findAllInvitableAccountTypes(android.content.Context,java.util.Collection,java.util.Map)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticFamilyName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactEntryListFragment: void loadDirectoryPartition(int,com.android.contacts.list.DirectoryPartition)> (CONTACT_INFORMATION)
<com.android.contacts.list.JoinContactListFragment: void restoreSavedState(android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName(android.content.Context,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta insertChild(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createJoinContactsIntent(android.content.Context,long,long,boolean,java.lang.Class,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.util.ImageViewDrawableSetter: void setupContactPhoto(com.android.contacts.model.Contact,android.widget.ImageView)> (CONTACT_INFORMATION)
<com.android.contacts.list.PhoneNumberPickerFragment: void restoreSavedState(android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactListFilter: com.android.contacts.list.ContactListFilter restoreDefaultPreferences(android.content.SharedPreferences)> (CONTACT_INFORMATION)
<com.android.contacts.calllog.CallLogAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)> (CONTACT_INFORMATION)
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void newContact(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.widget.AlphaTouchInterceptorOverlay: void setOverlayClickable(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.test.InjectedServices: void setSystemService(java.lang.String,java.lang.Object)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,byte[])> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,long)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticMiddleName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactModifier: void migratePostal(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta parseExtras(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,android.os.Bundle,java.lang.String,java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: void updateAggregateData(com.android.providers.contacts.TransactionContext,long)> (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setParameter(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void copyStringFrom(com.android.contacts.model.RawContactDelta$ValuesDelta,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorFragment: boolean save(int)> (CONTACT_INFORMATION)
<com.android.providers.contacts.DataRowHandlerForGroupMembership: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.list.CustomContactListFilterActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)> (CONTACT_INFORMATION)
<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayerValue(float)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsProvider2: boolean isWritableAccountWithDataSet(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.ContactSaveService: android.content.Intent createDeleteContactIntent(android.content.Context,android.net.Uri)> (CONTACT_INFORMATION)
<gov.nist.javax.sip.header.Contact: void setPubGruuParam(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactBrowseListFragment: void restoreSavedState(android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.providers.contacts.NameSplitter$Name: void toValues(android.content.ContentValues)> (CONTACT_INFORMATION)
<com.android.contacts.util.DialogManager: void showDialogInView(android.view.View,android.os.Bundle)> (CONTACT_INFORMATION)
<com.android.providers.contacts.CallLogProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsDatabaseHelper: void setIsPrimary(long,long,long)> (CONTACT_INFORMATION)
<com.android.contacts.format.PrefixHighlighter: void setText(android.widget.TextView,java.lang.String,char[])> (CONTACT_INFORMATION)
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)> (CONTACT_INFORMATION)
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> (CONTACT_INFORMATION)
<com.android.contacts.detail.ContactDetailDisplayUtils: void setSocialSnippet(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView,android.widget.ImageView)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsDatabaseHelper: void setLocale(com.android.providers.contacts.ContactsProvider2,java.util.Locale)> (CONTACT_INFORMATION)
<android.provider.ContactsContract$QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: void markForAggregation(long,int,boolean)> (CONTACT_INFORMATION)
<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment newInstance(int,int)> (CONTACT_INFORMATION)
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: void put(java.lang.String,java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.detail.CarouselTab: void setLabel(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)> android.permission.READ_CONTACTS (CONTACT_INFORMATION)
<com.android.providers.contacts.DefaultCallLogInsertionHelper: void addComputedValues(android.content.ContentValues)> (CONTACT_INFORMATION)
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsTransaction: void startTransactionForDb(android.database.sqlite.SQLiteDatabase,java.lang.String,android.database.sqlite.SQLiteTransactionListener)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setDisplayName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.WRITE_SOCIAL_STREAM (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void putNull(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean)> (CONTACT_INFORMATION)
<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> (CONTACT_INFORMATION)
<com.android.providers.contacts.DbModifierWithNotification: long insert(java.lang.String,java.lang.String,android.content.ContentValues)> (CONTACT_INFORMATION)
<com.android.contacts.model.dataitem.DataItem: void setRawContactId(long)> (CONTACT_INFORMATION)
<com.android.contacts.preference.ContactsPreferences: void setSortOrder(int)> (CONTACT_INFORMATION)
<com.android.contacts.interactions.PhoneNumberInteraction: void onLoadComplete(android.content.Loader,android.database.Cursor)> (CONTACT_INFORMATION)
<com.android.contacts.group.GroupDetailFragment: void setQuickContact(boolean)> (CONTACT_INFORMATION)
<com.android.contacts.group.GroupBrowseListFragment: void setAddAccountsVisibility(boolean)> (CONTACT_INFORMATION)
<com.android.providers.contacts.aggregation.ContactAggregator: int markAllVisibleForAggregation(android.database.sqlite.SQLiteDatabase)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactModifier: void migrateGenericWithTypeColumn(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)> (CONTACT_INFORMATION)
<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate(android.content.ContentValues)> (CONTACT_INFORMATION)
<android.provider.Contacts$People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])> (CONTACT_INFORMATION)
<com.android.contacts.editor.ContactEditorFragment: void setData(com.android.contacts.model.Contact)> (CONTACT_INFORMATION)
<com.android.contacts.editor.TextFieldsEditorView$SavedState: void writeToParcel(android.os.Parcel,int)> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoto(byte[])> (CONTACT_INFORMATION)
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setDisplayName(java.lang.String)> (CONTACT_INFORMATION)
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)> android.permission.READ_SYNC_SETTINGS (CONTACT_INFORMATION)
<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind addKind(com.android.contacts.model.dataitem.DataKind)> (CONTACT_INFORMATION)

CALENDAR_INFORMATION:
<com.android.calendar.agenda.AgendaByDayAdapter: void setAsFirstDayAfterYesterday(int)> (CALENDAR_INFORMATION)
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)> (CALENDAR_INFORMATION)
<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: void setVisible(int,int)> (CALENDAR_INFORMATION)
<com.android.calendarcommon2.RecurrenceSet: boolean populateContentValues(com.android.calendarcommon2.ICalendar$Component,android.content.ContentValues)> (CALENDAR_INFORMATION)
<com.android.calendar.month.MonthByWeekFragment: void setMonthDisplayed(android.text.format.Time,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.AllInOneActivity: void handleEvent(com.android.calendar.CalendarController$EventInfo)> (CALENDAR_INFORMATION)
<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)> (CALENDAR_INFORMATION)
<com.android.calendar.event.EditEventHelper: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: android.content.BroadcastReceiver setTimeChangesReceiver(android.content.Context,java.lang.Runnable)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void setTime(long)> (CALENDAR_INFORMATION)
<com.android.calendar.agenda.AgendaWindowAdapter: void setSelectedView(android.view.View)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,int)> (CALENDAR_INFORMATION)
<com.android.calendar.event.EditEventHelper: boolean saveEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,int)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void launchViewEvent(long,long,long,int)> (CALENDAR_INFORMATION)
<com.android.calendar.event.EditEventHelper: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: android.content.Intent createEmailAttendeesIntent(android.content.res.Resources,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setUpSearchView(android.widget.SearchView,android.app.Activity)> (CALENDAR_INFORMATION)
<com.android.calendar.AsyncQueryService: void setTestHandler(android.os.Handler)> (CALENDAR_INFORMATION)
<com.android.calendar.month.SimpleWeeksAdapter: void setSelectedDay(android.text.format.Time)> (CALENDAR_INFORMATION)
<com.android.calendar.widget.CalendarAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> android.permission.READ_CALENDAR (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,java.lang.String[])> (CALENDAR_INFORMATION)
<com.android.calendar.month.MonthByWeekAdapter: void setSelectedDay(android.text.format.Time)> (CALENDAR_INFORMATION)
<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.widget.CalendarAppWidgetService: android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int)> (CALENDAR_INFORMATION)
<com.android.calendar.widget.CalendarAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarUtils: void setSharedPreference(android.content.SharedPreferences,java.lang.String,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarUtils: void setSharedPreference(android.content.SharedPreferences,java.lang.String,boolean)> (CALENDAR_INFORMATION)
<com.android.calendar.month.MonthWeekEventsView: void setWeekParams(java.util.HashMap,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void sendEventRelatedEvent(java.lang.Object,long,long,long,long,int,int,long)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setTimeZone(android.content.Context,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.DayOfMonthDrawable: void setColorFilter(android.graphics.ColorFilter)> (CALENDAR_INFORMATION)
<com.android.calendar.EventLoader: void loadEventsInBackground(int,java.util.ArrayList,int,java.lang.Runnable,java.lang.Runnable)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setDefaultView(android.content.Context,int)> (CALENDAR_INFORMATION)
<com.android.calendar.RecipientAdapter: void setAccount(android.accounts.Account)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void sendEventRelatedEventWithExtra(java.lang.Object,long,long,long,long,int,int,long,long)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)> (CALENDAR_INFORMATION)
<com.android.calendar.EventGeometry: void setHourHeight(float)> (CALENDAR_INFORMATION)
<com.android.calendar.Utils: void setTodayIcon(android.graphics.drawable.LayerDrawable,android.content.Context,java.lang.String)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)> (CALENDAR_INFORMATION)
<com.android.calendar.AllInOneActivity: void setControlsOffset(int)> (CALENDAR_INFORMATION)
<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)> (CALENDAR_INFORMATION)
<com.android.calendar.CalendarController: void filterBroadcasts(java.lang.Object,long)> (CALENDAR_INFORMATION)
<com.android.calendar.DayOfMonthDrawable: void setDayOfMonth(int)> (CALENDAR_INFORMATION)
<com.android.calendar.DayOfMonthDrawable: void setAlpha(int)> (CALENDAR_INFORMATION)

SYSTEM_SETTINGS:
<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void reportSmsMemoryStatus(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.net.NetworkStatsService: void setUidForeground(int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCallWaiting(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaSubscriptionSource(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setUnitTestMode(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.CommandParams: boolean setIcon(android.graphics.Bitmap)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setCdmaTechnology(int)> (SYSTEM_SETTINGS)
<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: boolean canConference(com.android.internal.telephony.Call)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCallWaiting(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.RilMessageDecoder: void sendMsgParamsDecoded(com.android.internal.telephony.cat.ResultCode,com.android.internal.telephony.cat.CommandParams)> (SYSTEM_SETTINGS)
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void saveClirSetting(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.AppErrorDialog: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,com.android.server.am.AppErrorResult,com.android.server.am.ProcessRecord)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcActivatingState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcDisconnectingState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setCardState(int)> (SYSTEM_SETTINGS)
<com.android.server.WifiService: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivitiesInPackage(int,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setLocationUpdates(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSignalStrengthUpdate(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcDefaultState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int disableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setRetryCount(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean updatePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setApnSetting(com.android.internal.telephony.ApnSetting)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelope(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setOnNITZTime(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: void setRetryCount(int)> (SYSTEM_SETTINGS)
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.webkit.WebViewDatabaseClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.Item: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActiveServices: int bindServiceLocked(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setSuppServiceNotifications(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.net.wifi.WifiStateMachine: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCallRing(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallStateChanged(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarCache: void writeTimezoneDatabaseVersion(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void disableDnsCheck(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyOtaspChanged(int)> (SYSTEM_SETTINGS)
<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.ResponseData: void writeLength(java.io.ByteArrayOutputStream,int)> (SYSTEM_SETTINGS)
<com.android.browser.Tab$3: void setupAutoFill(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void log(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void switchWaitingOrHoldingAndActive(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)> android.permission.WRITE_SETTINGS (SYSTEM_SETTINGS)
<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendUSSD(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: void setAudioMode()> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void resetRadio(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityStack: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,java.lang.String,android.os.ParcelFileDescriptor,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void startDtmf(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void notifyCellInfo(java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendTerminalResponse(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: boolean sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IExtendedNetworkService$Stub$Proxy: void setMmiString(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> android.permission.STOP_APP_SWITCHES (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)> android.permission.CHANGE_CONFIGURATION (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendDtmf(char,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCellInfo(java.util.List)> (SYSTEM_SETTINGS)
<com.android.server.am.ActiveServices$ServiceMap: void putServiceByIntent(android.content.Intent$FilterComparison,int,com.android.server.am.ServiceRecord)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthChanged(int)> (SYSTEM_SETTINGS)
<android.net.wifi.WifiConfigStore: void setIpConfiguration(int,android.net.DhcpInfoInternal)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void reportStkServiceIsRunning(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.NsdService$NsdStateMachine$DefaultState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadio(boolean)> (SYSTEM_SETTINGS)
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.browser.TabControl: void restoreState(android.os.Bundle,long,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager$1: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccFileHandler: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setEchoSuppressionEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setGsmBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardStatus: void setUniversalPinState(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void finishUserSwitch(com.android.server.am.UserStartedState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void queryCallWaiting(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void conference(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setVoiceMessageWaiting(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.ims.IsimUiccRecords: void setVoiceMessageWaiting(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcInactiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityStack: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,boolean,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void stopDtmf(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void dial(java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)> android.permission.SET_TIME_ZONE (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone$SipConnection: void setState(com.android.internal.telephony.Call$State)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IExtendedNetworkService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void requestIsimAuthentication(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (SYSTEM_SETTINGS)
<android.media.AudioService$AudioHandler: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSmsOnSim(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setMute(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setDataConnectionAc(com.android.internal.telephony.DataConnectionAc)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendSMS(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseTag(com.android.internal.telephony.gsm.SimTlv,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.GetInkeyInputResponseData: void format(java.io.ByteArrayOutputStream)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void exitEmergencyCallbackMode(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setEchoSuppressionEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.webkit.WebViewClassic: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void invokeOemRilRequestRaw(byte[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)> (SYSTEM_SETTINGS)
<android.app.ActivityThread$H: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord removeTaskActivitiesLocked(int,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)> (SYSTEM_SETTINGS)
<com.android.server.ConnectivityService: int setUsbTethering(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCatEvent(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.RilMessageDecoder: void sendStartDecodingMessageParams(com.android.internal.telephony.cat.RilMessage)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnUSSD(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IntRangeManager: boolean disableRange(int,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityStack: int startActivityMayWait(android.app.IApplicationThread,int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SIMRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMALTEPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)> (SYSTEM_SETTINGS)
<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])> (SYSTEM_SETTINGS)
<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnRestrictedStateChanged(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.webkit.WebViewDatabaseClassic: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnUnsolOemHookRaw(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipConnectionBase: void setState(com.android.internal.telephony.Call$State)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void access$800(java.util.ArrayList)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCatProactiveCmd(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyOtaspChanged(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardProxy: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceState(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: void setRetryForever(boolean)> (SYSTEM_SETTINGS)
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)> android.permission.GLOBAL_SEARCH (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: void dumpStartList(java.io.PrintWriter,java.lang.String,java.util.List,long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ServiceStateTracker: boolean notifySignalStrength()> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarCache: void writeTimezoneInstancesPrevious(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection: void setRetryCount(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setVersion(int)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarCache: void writeTimezoneType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSmsStatus(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchTime(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setDataRoamingEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setSystemProperty(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallForwardingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)> android.permission.SET_TIME_ZONE (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void supplyPin2(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void enableEnhancedVoicePrivacy(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCatCallSetUp(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.content.res.Configuration: void setTo(android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acceptCall(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.browser.provider.BrowserProvider2: int updateBookmarksInTransaction(android.content.ContentValues,java.lang.String,java.lang.String[],boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: void setEchoSuppressionEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.server.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cat.Menu: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setRadioPower(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void supplyPin(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellInfo(java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellInfo(com.android.internal.telephony.Phone,java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean deletePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataCallState: com.android.internal.telephony.DataCallState$SetupResult setLinkProperties(android.net.LinkProperties,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setDependencyMet(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: int enableApnType(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.browser.provider.SnapshotProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcInactiveState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)> (SYSTEM_SETTINGS)
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardProxy: void setVoiceRadioTech(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setWaitingApns(java.util.ArrayList)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void sendUssdResponse(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)> (SYSTEM_SETTINGS)
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: void setEnabled(int,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<android.webkit.WebViewClassic$PrivateHandler: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ims.IsimUiccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)> (SYSTEM_SETTINGS)
<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void writeSmsToRuim(int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.deskclock.HandleSetAlarm: void onCreate(android.os.Bundle)> android.permission.WRITE_SETTINGS (SYSTEM_SETTINGS)
<com.android.internal.telephony.IWapPushManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcInactiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$DisconnectParams)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaSubscriptionSource(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccCardProxy: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyOtaspChanged(com.android.internal.telephony.Phone,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onOtaspChanged(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService$2: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.MetaData: void write(java.lang.String,long,long,int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataActivity(int)> (SYSTEM_SETTINGS)
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcActiveState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)> (SYSTEM_SETTINGS)
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService: void access$100(com.android.server.am.UsageStatsService,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> (SYSTEM_SETTINGS)
<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setEchoSuppressionEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneStateIntentReceiver: void notifyServiceState(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void rejectCall(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setReason(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.util.ArrayList,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.browser.provider.BrowserProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean addPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCdmaBroadcastConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void cancelPendingUssd(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setNextDialFailImmediately(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setLocationUpdates(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarCache: void writeTimezoneInstances(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void separateConnection(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)> android.permission.BLUETOOTH (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void explicitCallTransfer(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: void onEnableApn(int,int)> (SYSTEM_SETTINGS)
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setRadioPower(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarCache: void writeDataLocked(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.CalendarProvider2: void doProcessEventRawTimes(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL$RILSender: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessStats,android.util.SparseArray,java.lang.String[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNewGsmSms(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setAutoProgressConnectingCall(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnIccSmsFull(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setDataConnection(com.android.internal.telephony.DataConnection)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setEnabled(boolean)> (SYSTEM_SETTINGS)
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataActivity(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void notifyOtaspChanged(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RetryManager: boolean configure(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataConnectionStateChanged(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setState(com.android.internal.telephony.DctConstants$State)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deactivateDataCall(int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCLIR(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone$SipCall: void setMute(boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCallWaiting(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setCLIR(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void setNextCallFailCause(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)> (SYSTEM_SETTINGS)
<com.android.server.am.PendingIntentRecord: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnectionTracker: boolean setInternalDataEnabled(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.TelephonyRegistry: void notifyMessageWaitingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: boolean canTransfer(com.android.internal.telephony.Call)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setNetworkSelectionModeAutomatic(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.providers.calendar.MetaData: void writeLocked(java.lang.String,long,long)> (SYSTEM_SETTINGS)
<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: int processMessage(java.lang.String,java.lang.String,android.content.Intent)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendCdmaSms(byte[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMALTEPhone: void setBandMode(int,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNewGsmBroadcastSms(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnIccRefresh(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnCatSessionEnd(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void hangupWaitingOrBackground(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityStack: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneStateIntentReceiver: void notifySignalStrength(int)> (SYSTEM_SETTINGS)
<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCellInfoChanged(java.util.List)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setPhoneType(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: boolean startDtmf(char)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deleteSmsOnRuim(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean switchUser(int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IntRangeManager: boolean enableRange(int,int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendUSSD(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZone(java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)> android.permission.SET_TIME_ZONE (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyMessageWaitingChanged(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendDtmf(char,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchCount(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void deleteSmsOnSim(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)> android.permission.MODIFY_PHONE_STATE (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendSMS(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallState(int,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhoneBase: void notifyDisconnect(com.android.internal.telephony.Connection)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void startDtmf(char,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: void dial(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void dispatchUserSwitch(com.android.server.am.UserStartedState,int,int)> (SYSTEM_SETTINGS)
<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.CallManager: boolean sendUssdResponse(com.android.internal.telephony.Phone,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.IccRecords: void setVoiceCallForwardingFlag(int,boolean)> (SYSTEM_SETTINGS)
<android.telephony.ServiceState: void setCssIndicator(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setBandMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setCellBroadcastSmsConfig(int[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.phone.CallCard: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceInPackage(int,android.content.Intent,java.lang.String,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setTTYMode(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)> android.permission.WAKE_LOCK (SYSTEM_SETTINGS)
<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseEf(com.android.internal.telephony.gsm.SimTlv,java.util.Map,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.cdma.CDMAPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setSuppServiceNotifications(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneProxy: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaRoamingPreference(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.test.ModelInterpreter: void sendUnsolicited(java.lang.String)> (SYSTEM_SETTINGS)
<com.android.server.net.NetworkPolicyManagerService: void snoozeLimit(android.net.NetworkTemplate)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setPreferredVoicePrivacy(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendCdmaSms(byte[],android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.PhoneStateIntentReceiver: void notifyPhoneCallState(int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.UiccCardApplication: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void hangupConnection(int,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: void setLockScreenShown(boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DataConnection$DcActiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.sip.SipCommandInterface: void sendTerminalResponse(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyMessageWaitingChanged(com.android.internal.telephony.Phone)> (SYSTEM_SETTINGS)
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: boolean processMessage(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPuk(java.lang.String,java.lang.String)> (SYSTEM_SETTINGS)
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.ApnContext: void setState(com.android.internal.telephony.DctConstants$State)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void setMute(boolean,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendEnvelope(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.exchange.utility.CalendarUtilities: java.lang.String timeZoneToTziString(java.util.TimeZone)> (SYSTEM_SETTINGS)
<com.android.phone.OtaUtils: boolean maybeDoOtaCall(android.content.Context,android.os.Handler,int)> (SYSTEM_SETTINGS)
<com.android.server.am.ActivityManagerService: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void hangupForegroundResumeBackground(android.os.Message)> (SYSTEM_SETTINGS)
<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])> (SYSTEM_SETTINGS)
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.RIL: void sendCDMAFeatureCode(java.lang.String,android.os.Message)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.BaseCommands: void setOnNewCdmaSms(android.os.Handler,int,java.lang.Object)> (SYSTEM_SETTINGS)
<com.android.internal.telephony.AdnRecordCache: void handleMessage(android.os.Message)> (SYSTEM_SETTINGS)
